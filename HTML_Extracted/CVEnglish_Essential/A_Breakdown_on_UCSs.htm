<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head><link rel="stylesheet" type="text/css" href="../../../../RHTMP/Microsoft%20HTML%20HelpLvLZav/_rhdefault.css"/>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <meta name="date" content="08 2, 2002 4:10:13 PM"/>
  <meta name="topic-priority" content="0"/>
  <meta name="topic-time-estimate" content="0"/>
  <meta name="topic-comment" content=""/>
  <meta name="topic-id" content=""/>
  <meta name="topic-status" content="Complete"/>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <title>A Breakdown on UCSs</title>
  <link rel="StyleSheet" href="../../assets/css/default.css" type="text/css"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/><script type="text/javascript" src="../../../../RHTMP/Microsoft%20HTML%20HelpLvLZav/ehlpdhtm.js"></script></head>
<body>
  <h1>Objects In CABINET VISION</h1>
  <p><img alt="" border="0" src="../../assets/images/zGraphics/1Products/1AUALL.png" style="border: none; width: 100%; max-width: 102px;"/></p>
  <p class="Indent_1_Bulllet p">CABINET VISIONÂ has many objects; Rooms, Walls, Assemblies, Decks, Stiles and Rails are all objects in CABINET VISION. Each of these objects are very similar. The object&#39;s type and parameters make it unique, a parameter is a characteristic or attribute of an object. Although almost every object has the basic 9 parameters, typically objects have more than the standard nine.</p>
  <h2>The Basic 9 Parameters</h2>
  <p>The basic 9 parameters describe where an object sits in space.</p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet"><span class="glossterm">X, Y</span> and <span class="glossterm">Z</span> are position points.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet"><span class="glossterm">DX, DY</span>, and <span class="glossterm">DZ</span> are dimensions</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet"><span class="glossterm">AX, AY</span>, and <span class="glossterm">AZ</span> are axis of rotation.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet"><span style="font-weight: bold;">X</span> = Position on X Axis</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet"><span style="font-weight: bold;">Y</span> = Position on Y Axis</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet"><span style="font-weight: bold;">Z</span> = Position on Z Axis</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet"><span style="font-weight: bold;">DX</span> = Width</p>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet"><span style="font-weight: bold;">DY</span> = Length / Height (Part / Wall)</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet"><span style="font-weight: bold;">DZ</span> = Thickness / Depth (Part / Wall)</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet"><span style="font-weight: bold;">AX</span> = Rotation on X Axis</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet"><span style="font-weight: bold;">AY</span> = Rotation on Y Axis</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet"><span style="font-weight: bold;">AZ</span> = Rotation on Z Axis</p>
    </li>
  </ul>
  <h2>Position X, Y, Z</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">The coordinates of a Part are in reference to its point of origin.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The coordinates of the Part in the diagram above are x=0, y=0 and z=0.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The coordinates of the diagram to the left are x=60, y=52, and z=0. These coordinates are in reference to the start of the Wall.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The X position moves a point of origin right (+) and left (-).</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The Y position moves a point of origin up (+) and down (-).</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The Z position moves a point of origin forward (+) and backward (-).</p>
    </li>
  </ul>
  <h2>Dimension DX, DY, DZ</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet"><span style="font-weight: bold;">DX</span> can be thought of as the <span style="font-weight: bold;">width</span> for a Part or the <span style="font-weight: bold;">width</span> of Assemblies and Walls.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet"><span style="font-weight: bold;">DY</span> can be thought of as the <span style="font-weight: bold;">length</span> for a Part or the <span style="font-weight: bold;">height</span> of Assemblies and Walls.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet"><span style="font-weight: bold;">DZ</span> can be thought of as the <span style="font-weight: bold;">thickness</span> for a Part or the <span style="font-weight: bold;">depth</span> of Assemblies and Walls.</p>
    </li>
  </ul>
  <h2>Axis of Rotation AX, AY, AZ</h2>
  <h2>Right Hand Rule</h2>
  <p>The right-hand rule determines the positive axis direction of the Z axis when you know the direction of the X and Y axes in a 3D coordinate system. The right-hand rule also determines the positive rotation direction about an axis in 3D space.</p>
  <p><img alt="" border="0" src="../../assets/images/zGraphics/image130.gif" style="border: none; width: 100%; max-width: 86px;"/></p>
  <p style="margin-bottom: 0;">To determine the positive axis direction of the X, Y, and Z axes, place the back of your right hand near the screen. Point your thumb in the direction of the positive X axis. Extend your index and middle fingers as illustrated and point your index finger in the direction of the positive Y axis. Your middle finger indicates the direction of the positive Z axis.</p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Thumb = X axis</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Index finger = Y axis</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Middle finger = Z axis</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Looking towards the point of origin of each axis, clockwise is (-) negative, and counterclockwise is (+) positive.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Order of rotation of a Part is X, then Y, then Z.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The axis does not move with the Part.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet"><span style="font-weight: bold;">Example #1</span>: An Adjustable Shelf rotates on the X-axis (AX=-90) and then on the Y-axis (AY=-90). If the axis moved with the Part the rotation would have been (AX = -90), (AZ = -90).</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet"><span style="font-weight: bold;">Example #2</span>: For an angled Shelf it would be nice to describe as (AX = -90, AY = -90, AX = 15) or (AX = -75, AY = -90). The correct rotation is (AY = -75, AZ = -90). Use the rotation tool in Solid when you are having difficulty.</p>
    </li>
  </ul>
  <h2>Building Orientation</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Every Part is built the same way. A Rail, Stile, Left End, Right End, Door or Drawer Box Bottom.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">All Parts are built with the same orientation and then moved into place.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">In the diagram there is an example of a Rail and how the building orientation differs from the coordinates once it is placed on a Assembly.</p>
    </li>
  </ul>
  <h2>Object Tree</h2>
  <h3>Concept</h3>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">The Object Tree is just another way to view the data in Solid.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The tree consists of objects, parameters, and values or equations for those parameters.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">A great way to view the structure of the Job and understand the inner workings of CABINET VISION.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Select the <span style="font-weight: bold;">Object Tree</span> <span>option from the ribbonbar</span><span style="font-weight: bold;">.</span></p>
    </li>
  </ul>
  <p style="font-weight: bold; margin-left: 40px;"><img alt="" border="0" src="../../assets/images/image6122.gif" style="border: none; width: 100%; max-width: 523px;"/></p>
  <h2>Coordinates Are In Relation To Their Parents</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">All X, Y, Z positions are in reference to their parents.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">A Rail on a Assembly has an X = 3, Y = 34, and Z = 24. These coordinates are in reference to its parent, the Assembly.</p>
    </li>
  </ul>
  <h2>Modifying Parameters</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">All parameter values can be modified.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Virtually anything modified through the normal means in CABINET VISION can also be modified through the Object Tree.</p>
    </li>
  </ul>
  <h2>Example of Modifying Parameters in the Layout View</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet"><span class="glossterm">Click</span> on the individual Assembly that needs to be modified and the side bar contains values for the depth, width, and length of the Assembly.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">These are the DX, DY, and DZ values.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Manually edit the parameters of the Assembly by clicking in the spaces and modifying the value.</p>
    </li>
  </ul>
  <h2>Example of Modifying Parameters in the Object Tree</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Go to the layout view of CABINET VISION.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Choose <span style="font-weight: bold;">Object Tree</span> from the ribbonbar.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Open the tree (click on the plus signs) until you find the Part that needs to be modified.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Click on Top Stretcher. Notice at the right all the parameters for the TS are available.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Click on <span style="font-weight: bold;">DY</span> to edit the <span style="font-weight: bold;">length</span> of the Part. The edit button will become available after DY is highlighted.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Click on Edit.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Manually enter the modified value for DY.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img alt="" border="0" src="../../assets/images/image6123.gif" style="border: none; width: 100%; max-width: 523px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Notice back in the Layout view that the length of the Top Stretcher (TS) has changed.</p>
    </li>
  </ul>
  <h2>Equations - From Simple to Advanced</h2>
  <h3>Introduction</h3>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Equations can be used as parameter values.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">In a simple equation a directional <span class="glossterm">operator</span> or operators are found paired with key words.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">A key word is a term or header that is found in the Object Tree.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Combining directional operators and key words allow you to access other parameters in the Object Tree.</p>
    </li>
  </ul>
  <h3>Levels</h3>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">A level in the Object Tree is one grouping. Think of the tree being divided into quadrants. Each quadrant line that is crossed is another level of the tree.</p>
    </li>
  </ul>
  <h3>Directional Operators</h3>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Directional operators allow you to move around the tree. A colon (:) moves up the tree one level. A period (.) drops down a level in the tree.</p>
    </li>
  </ul>
  <h3>Key Words</h3>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Key words are special headings in the Object Tree that allow quick access to a position in the tree. See the example below:</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img alt="" border="0" src="../../assets/images/image6124.gif" style="border: none; width: 100%; max-width: 523px;"/></p>
  <h2>Exercise</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">In the following tree, visualize the divisions from left to right that would be in the tree.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">To reference a parent use the (:) operator.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">To reference a child use the (.) operator.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">No operator is required to reference a sibling.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The letters in bold represent key words.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">When multiple types of the same Assembly are in the Object Tree there must be a special term used to define it. In the example Object Tree below there are three J&#39;s. Each J has its own parameters; however, each of them is named differently by their position. Use the @ operator to reference an object that has siblings of the same name. This is commonly seen when a Assembly has multiple Shelves.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img alt="" border="0" src="../../assets/images/zGraphics/image174.jpg" style="border: none; width: 100%; max-width: 222px;"/></p>
  <h2>Creating Smart Parts</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">When a Part is added to a Assembly it is considered a dumb Part. You can adjust the Part to the correct size and position, but as the Assembly changes the Part doesn&#39;t.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The problem we ran into with the new parameters of the TS was when the Assembly parameters were increased or decreased the TS did not have the smarts to adjust with the Assembly.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The purpose in having equations is to expand the flexibility of Parts in CABINET VISION. By using an equation we can modify a parameter and reference it to the Assembly so in the case that the Assembly is modified the Part will be smart and justify itself also.</p>
    </li>
    <li class="p" style="font-weight: bold;">
      <p class="Indent_1_Bulllet" style="font-weight: bold;">If a smart Part already exists in CABINET VISION and its parameters are similar to the new Part, use the parameters in the equation instead of writing a brand new equation.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Key words are used to automatically access a position in the tree.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">It is best not to enter in hard code numbers when dealing with equations. Giving parameters as boundaries versus actual numeric dimension will allow for that flexibility.</p>
    </li>
  </ul>
  <h2>Example: Adding a Smart Top Stretcher</h2>
  <h3>Prepare The Assembly</h3>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Let us begin by preparing the Assembly. Place a Std Base on the Wall then edit it at the Assembly level. From the Section view select the option <span style="font-weight: bold;">Properties | Case</span>. Then change the Top Type to No Top.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img alt="" border="0" src="../../assets/images/image6125.gif" style="border: none; width: 100%; max-width: 445px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Select one of the Ortho Views <img alt="" border="0" src="../../assets/images/image181.gif" style="border: none; width: 100%; max-width: 45px;"/><img alt="" border="0" src="../../assets/images/image182.gif" style="border: none; width: 100%; max-width: 44px;"/><img alt="" border="0" src="../../assets/images/image183.gif" style="border: none; width: 100%; max-width: 42px;"/> tabs.</p>
    </li>
  </ul>
  <h3>Add The Part</h3>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Select the sidebar button New Part.</p>
    </li>
  </ul>
  <p style="font-weight: bold; margin-left: 40px;"><a href="../../Assembly_Level/Sidebar/ALSB_New_Part.htm"><img alt="" border="0" src="../../assets/images/image2857.gif" style="border: none; width: 100%; max-width: 180px;"/></a></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Select the Part type Top Stretcher. If you do not adjust the Material with the change button this will cause the Part&#39;s Material to be linked to the same Material as a Top Stretcher. The Top Stretcher&#39;s Material is defined in the Assembly&#39;s Material Schedule. When the Material Schedule for this Assembly changes - this Part&#39;s Material will change automatically. If you wanted to Lock this Part to a Particular Material, you could select the Material with the change button.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img alt="" border="0" src="../../assets/images/image6126.gif" style="border: none; width: 100%; max-width: 443px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Select Next &gt;. Then make the Length of the Top Stretcher 24&quot; and the width of the top stretcher 4&quot;. This is just an initial size. We will be writing equations to change it.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img alt="" border="0" src="../../assets/images/image6127.gif" style="border: none; width: 100%; max-width: 443px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Select Next &gt;. Select a Part orientation of Top. This will rotate the Part to the proper orientation.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img alt="" border="0" src="../../assets/images/image6128.gif" style="border: none; width: 100%; max-width: 443px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Select Next &gt;. Then select the finish properties for the Part. Make the top and back face out of the interior finish and the edges from the exterior finish.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;">Â <img alt="" border="0" src="../../assets/images/image6130.gif" style="border: none; width: 100%; max-width: 443px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Select Finish.</p>
    </li>
  </ul>
  <h2>Write Equation For Parts Length</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Now select the Part in each of the Ortho <img alt="" border="0" src="../../assets/images/image181.gif" style="border: none; width: 100%; max-width: 45px;"/><img alt="" border="0" src="../../assets/images/image182.gif" style="border: none; width: 100%; max-width: 44px;"/><img alt="" border="0" src="../../assets/images/image183.gif" style="border: none; width: 100%; max-width: 42px;"/> Views. Take note that the Part&#39;s reference point, the blue-green dot when the Part is selected, is in the bottom, back, left corner of the Part.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">We will begin by writing equations to size the Part. Then we will concentrate on setting the Part&#39;s position. Let us make some assumptions about this Assembly. First, that the deck will always exist in the Assembly and second that the Top Stretcher&#39;s length will always be same as the deck length. With this assumption, you can change the deck/end construction from a butt joint to a dado, and the top stretcher will adjust right along with it.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">There is no need to make this assumption. The Part can be setup independently from the deck however making assumptions like this will make your equations more flexible in the end.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Select the option <span style="font-weight: bold;">Object Tree</span> and expand the tree as shown.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img alt="" border="0" src="../../assets/images/image6131.gif" style="border: none; width: 100%; max-width: 523px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Highlight the DY parameter and select Edit. Change from a Value to an Equation.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img alt="" border="0" src="../../assets/images/image6132.gif" style="border: none; width: 100%; max-width: 373px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">The computer will use the THEN (equation) when the value of the IF (condition) is not 0. By entering a 1 as the condition, we are telling the computer to always use this equation.</p>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">For the equation we will enter <span style="font-weight: bold;">Case.DE.DY</span>, this can be read as &quot;The length of the deck in the case&quot;. This will ensure that the Top Stretcher will always have the same length as the deck. Now we can select the Test Equation button. Note the value.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">If there were a spelling error in the equation, the result would be ERROR. You would then need to correct the error and select Test again.</p>
    </li>
  </ul>
  <p class="Indent_1_Bulllet" style="margin-left: 40px;"><img alt="" border="0" src="../../assets/images/image6133.gif" style="border: none; width: 100%; max-width: 373px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Now let&#39;s leave the Object Tree and look at our Part. Notice that as soon as the Object Tree is closed the Part snaps to the same length of the deck.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">As we modify the size of the Assembly we can see the Stretcher adjusting size with it.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Notice that if we modify the scribe or height of the Assembly the Part is only &quot;Smart&quot; for the parameter that has an equation.</p>
    </li>
  </ul>
  <h2>Equation for Parts X Position</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Return to the Object Tree and select the X parameter of the top stretcher.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Once again we will reference the deck in our equation. We will set the Top Stretchers X position equal to the Decks X position. Enter an equation of Case.DE.X Â this can be read as &quot;The X position of the deck in the case&quot;.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img alt="" border="0" src="../../assets/images/image6134.gif" style="border: none; width: 100%; max-width: 373px;"/></p>
  <h2>Equation for Parts Y Position</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">We will reference the Parts Y position of the Assembly.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Select the Y parameter and add the equation: Cab.DY or :DY</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">As we exit the Object Tree we see that the Stretcher is actually hovering above our Assembly.</p>
    </li>
  </ul>
  <p style="margin-left: 96px;"><img alt="" border="0" src="../../assets/images/zGraphics/Extras/Information.png" style="border: none; width: 100%; max-width: 32px;"/> The origin of the Part is at the bottom of the Part. Therefore we must account for the Part thickness in our equation.</p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Return the Y parameter and modify the equation to Cab.DY - DZ this can be translated as the height of the Assembly minus the Parts thickness.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img alt="" border="0" src="../../assets/images/image6135.gif" style="border: none; width: 100%; max-width: 373px;"/></p>
  <h2>Equation for Parts Z Position</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">The equation for the Z position of the stretcher will be very similar to the Y position. Taking into account that the reference point for the stretcher is in the back, left, bottom corner, we want the Z position of the stretcher to be: The depth of the Assembly, minus the stretcher width.</p>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">In this equation we will reference an object in the Assembly tree that is not a Part or Assembly. We will be referencing the <span style="font-weight: bold;">Face</span> of the Assembly.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The Face, Case, &amp; Interior are special objects in the Assembly that serve as containers for other objects and Parts.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The Face object contains the Assemblies Face Frame, Doors and Drawers.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">By writing our equation referencing the Face of the Assembly, rather than the Assembly itself, we automatically account for the face frame.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Follow the same steps as before selecting the Z parameter of the stretcher. Once again, we will enter 1 for the IF condition. Now enter the following equation. Face.Z - DX. This can be read as the Z position of the face minus the width of the Top Stretcher. This will take into account that the point of origin is in the back of the stretcher.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img alt="" border="0" src="../../assets/images/image6136.gif" style="border: none; width: 100%; max-width: 373px;"/></p>
  <h2>Equation for Parts Width</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Select the DX Parameter for the Top Stretcher. Select the Edit button. Select the Equation option then select Add.</p>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet"><span style="font-weight: bold;">This time we will be entering something other then 1 for the IF condition.</span> By default, we would like this stretcher to be 4&quot; wide. However on occasion we might want it to be 3&quot; or 8&quot;. Since the width may change, we are going to say it is equal to a <span class="glossterm">variable</span> <span style="font-weight: bold;">TS_WIDTH</span>. We can set a value for this variable so that the Part will adjust dynamically as the value for the variable changes. At the same time, we do not want the burden of having to add a custom parameter to each job since most of the time this Part will be 4&quot; wide. To accomplish this we are going to enter a parameter for the condition and a parameter for the equation.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Enter TS_WIDTH for the condition and TS_WIDTH for the equation. The statement can be read as follows. If there is a parameter named TS_WIDTH, and the value of TS_WIDTH is not equal to 0, make the width of the Part the value of TS_WIDTH.</p>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">If you select Test you will get an error in the test result Syntax Error. This is normal since at this time the parameter named TS_WIDTH does not exist in the tree.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img alt="" border="0" src="../../assets/images/image6137.gif" style="border: none; width: 100%; max-width: 373px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Now we will set the default width for the stretcher to 4&quot;.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Select the Add button again. Then enter 1 for the condition and 4 for the equation. Then Select OK.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img alt="" border="0" src="../../assets/images/image6138.gif" style="border: none; width: 100%; max-width: 373px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">The Parameter Edit Dialog Box should look something like the screen above. We have entered two equations for the width of this Part. One is based on a parameter. The other is a default value.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet"><span style="font-weight: bold;">When there are multiple equations for a Part, the equations are evaluated one by one until a condition is not equal to 0</span>. In the example above if the TS_WIDTH equation returns a false answer CABINET VISION immediately evaluates the next formula which is 4&quot;.</p>
    </li>
  </ul>
  <h2>Equation for Parts Thickness</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet"><span style="font-weight: bold; text-decoration: underline;">No equation is needed for a Parts thickness.</span> The material it is made out of determines the Parts thickness. Therefore, the thickness of a Part is automatically smart.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Our Part is completely defined. Let us exit the Object tree and view the Part. Go ahead and modify the size of the Assembly. You will see that the Part will move and stretch exactly as we have defined it.</p>
    </li>
  </ul>
  <h2>Adding Custom Parameters To A Job</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Now we will demonstrate how to set parameters in a Job and have our Part adjust with those parameters. Return to the Layout (Room) Level and add a second Wall to the job. Then select the option <span style="font-weight: bold;">Object Tree</span>. If you expand the Object Tree, you will see it contains all objects in this room. Select Wall 2 and select the Add button to add a parameter.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img alt="" border="0" src="../../assets/images/image6139.gif" style="border: none; width: 100%; max-width: 523px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Change the Style to an Attribute.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">For the Name enter TS_WIDTH.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">For the Description enter Top Stretcher Width:</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Enter 2 for the parameters value. Then select OK.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img alt="" border="0" src="../../assets/images/image6140.gif" style="border: none; width: 100%; max-width: 373px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Now we will repeat the procedure for the back face of Wall #2. Highlight the back face of Wall #2. Add a parameter named TS_WIDTH with a value of 8. Then <span class="glossterm">close</span> the Object Tree.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Back at the Plan view of the Layout (Room) Level, copy the Assembly. Place one copy on the front face of Wall #2 and a second copy on the back face of Wall #2. Then select the 3-D perspective view and observe the various top stretcher widths.</p>
    </li>
  </ul>
  <h2>How Solid Searches for Parameters</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">When a parameter is found in an equation CABINET VISION looks to see if the parameter exists for that object. If not it looks to see if the parameter exists in the parent of that object and so on until it gets to the top of the tree. All three Assemblies have the same equations for the top stretcher yet all three top stretchers are different sizes.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The Assembly on Wall #1 looks to find the parameter TS_WIDTH. It does not exist at the Part level, Assembly level, Wall face level, Wall level, or room level. Therefore, it goes to the next equations IF 1 THEN 4 and the stretcher width is set to 4&quot; wide.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The Assembly on Wall #2&#39;s face looks to find the parameter TS_WIDTH. It does not exist at the Part level, Assembly level, Wall face level, but it does exist at the Wall level where the TS_WIDTH = 2. Therefore, the stretcher becomes 2&quot; wide.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The Assembly on Wall #2&#39;s back looks to find the parameter TS_WIDTH. It does not exist at the Part level, Assembly level, but it does exist at the Wall face level where the TS_WIDTH = 8. Therefore, the stretcher becomes 8&quot; wide.</p>
    </li>
  </ul>
  <p style="margin-left: 96px;"><img alt="" border="0" src="../../assets/images/zGraphics/Extras/Information.png" style="border: none; width: 100%; max-width: 32px;"/> If we continued to search up the tree we would find the TS_WIDTH = 2 at the Wall level, however once the 1st TS_WIDTH is found Solid stops looking.</p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">This gives you tremendous flexibility with your equations. You can set a value at the room level, but you can &quot;override&quot; that value at the Wall, Wall face, Assembly, Part, or any level in the tree and your Parts can re-size dynamically. To further test this, move the Assembly on Wall #1 to Wall #2 and see how the top stretcher changes size.</p>
    </li>
  </ul>
  <h2>Parameters in CABINET VISION</h2>
  <p><a href="Functions_and_Operators.htm">See Parameters and Functions</a></p>
  <h2>Where Are Parameters Stored</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">All parameters in CABINET VISION are stored as high up in the tree as possible.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">This method allows for one parameter to effect many objects.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">It also allows a convenient way to store an override to an object.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">This method uses the least amount of memory. It leaves a small footprint. If a job has 20 Assemblies in a single room. The information for the top rail would be stored 20 times for that same Part at the Part level. This would increase the size of the jobs exponentially.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The Top Rail is found under the Parts list of a Assembly in the Object Tree. You might assume that the parameters or information about the Part is stored at the Part level. Actually, most of its parameters are stored much higher in the tree. Only the basic 9 parameters are stored for each Part.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">General info is stored at the Job Level. When starting a new job in CABINET VISION there are questions or parameters that need to be designated. These are the parameters that will be stored in the Job Level.</p>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">CABINET VISIONÂ has four places to make overrides without using the Object Tree:</p>
    </li>
    <li style="list-style: none; display: inline;">
      <ol style="list-style: decimal;">
        <li class="p">
          <p class="Indent_1_Bulllet">Job Level</p>
        </li>
        <li class="p">
          <p class="Indent_1_Bulllet">Room Level</p>
        </li>
        <li class="p">
          <p class="Indent_1_Bulllet">Assembly Level</p>
        </li>
        <li class="p">
          <p class="Indent_1_Bulllet">Part Level</p>
        </li>
      </ol>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Only minimal information is stored for each object.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Every piece of information that a Part cannot find at its own home will travel up the tree until it finds the answer it is looking for.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">If a Part cannot find the information it is looking for it will return result of 0 for that parameter.</p>
    </li>
  </ul>
  <h2>Demonstrate an Equation Based On Toe Height</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">In this example we will write some sample equations based on the Toe Height for the Assembly. We will use 2 advanced methods to do so:</p>
    </li>
  </ul>
  <ol>
    <li style="list-style: none; display: inline;">
      <ol>
        <li class="p" style="list-style: decimal;">
          <p class="Indent_1_Bulllet">First we will access a value from the Construction Method.</p>
        </li>
        <li class="p" style="list-style: decimal;">
          <p class="Indent_1_Bulllet">Next we will reference a parameter in CABINET VISION.</p>
        </li>
      </ol>
    </li>
  </ol>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Lets continue to modify the Top Stretcher &amp; write a new equation for the width of the Part.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">We will make the width of the Top Stretcher equal to the Toe Kick Height.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Select the DX parameter of the Top Stretcher and enter the equation IF <span style="font-weight: bold;">1</span> THEN <span style="font-weight: bold;">TOEH.</span></p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img alt="" border="0" src="../../assets/images/image6141.gif" style="border: none; width: 100%; max-width: 373px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">When we exit the Object Tree we can see that the stretcher has disappeared. Actually TOEH was not found in the tree so the result returned 0 making the Width = 0.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Modify the Toe Height of the Assembly from the section view and the Stretcher will reappear and equal the Toe Height.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Like many parameters TOEH is only present if there is an override on the Assembly. Normally the Assembly references the Toe Height based on a standard in the current construction method.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Launch the Assembly Manager. Start the wizard for the Toe Kick and look at the title Toe Kick Height: [Standard #238].</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img src="../../assets/images/image1311.png" style="width: 100%; max-width: 705px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Note the standard number: #238. We can reference this value in our equation.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Return to the Object Tree and add the following equation to the DX parameter of the Top Stretcher. If 1 Then _CV:238. This formula can be read as Make the width of the stretcher equal to the Value entered for Construction MethodÂ Standard #238 (Toe Kick Height).</p>
    </li>
  </ul>
  <h2>Common Functions</h2>
  <p><a href="Functions_and_Operators.htm">See Functions &amp; Operators</a></p>
  <h1>User Created Standards</h1>
  <h2>Purpose</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">The purpose of User Created Standards is to apply logic that is not controlled through the Assembly Wizard or any other Part of the program.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">This allows you to create smart Parts that are specific to your needs.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">You can create these smart Parts by one of the following methods:</p>
    </li>
    <li style="list-style: none; display: inline;">
      <ol style="list-style: decimal;">
        <li class="p">
          <p class="Indent_1_Bulllet">Add a brand new object</p>
        </li>
        <li class="p">
          <p class="Indent_1_Bulllet">Modify an object</p>
        </li>
        <li class="p">
          <p class="Indent_1_Bulllet"><span class="glossterm">Delete</span> an Object</p>
        </li>
      </ol>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">The power of UCS lies behind the interface-created macro, which can be put into its own language <span style="font-weight: bold;">similar</span> to Microsoft Visual Basicâ¢.</p>
    </li>
  </ul>
  <h2>A Global View of UCS&#39;s</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">UCS&#39;s provide a way to apply <span class="glossterm">global changes</span> to a job.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Earlier an equation was written for a single Part in a Assembly. UCS&#39;s allow the same Part to have the same values for all Assemblies.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">UCS&#39;s also allow Parts to have the same value for similar Assemblies. Using a filter (Filters will be addressed later).</p>
    </li>
  </ul>
  <h2>Accessing User Created Standards</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">There are two ways to gain access to User Created Standards. The first way is from the <span class="glossterm">splash screen</span> of Solid. The other way is from inside a job.</p>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Either way you access User Created Standards, the standards will be for all jobs.</p>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">To access UCS&#39;s, start CABINET VISION. At the System Level, (the opening screen) select <span style="font-weight: bold;">Utilities | User Created Standards</span>.</p>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">UCS&#39;s may be edited from within a job. To do this, double click on the Assembly. You can also <span class="glossterm">right click</span> and select Edit from the drop-down menu. Select any one of the <img alt="" border="0" src="../../assets/images/image181.gif" style="border: none; width: 100%; max-width: 45px;"/><img alt="" border="0" src="../../assets/images/image182.gif" style="border: none; width: 100%; max-width: 44px;"/><img alt="" border="0" src="../../assets/images/image183.gif" style="border: none; width: 100%; max-width: 42px;"/> three orthographic views. Again, select <span style="font-weight: bold;">Utilities | User Created Standards</span>. Â You will now see the UCS screen.</p>
    </li>
  </ul>
  <h2>The Screen Layout</h2>
  <p><img src="../../assets/images/image1312.png" style="width: 100%; max-width: 1136px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">To add a User Created Standard, select the New option in the ribbonbar.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img src="../../assets/images/image1313.png" style="width: 100%; max-width: 430px;"/></p>
  <h2>Â General Tab</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Notice, at the top of the User Created Standards window, that there are category tabs. These tabs are the steps that the <span class="glossterm">titlebar</span> is referring to. There are more tabs to the right that can be viewed by selecting the scroll arrow at the right of the screen.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The first thing you&#39;re going to want to do is to give the UCS a name.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img src="../../assets/images/image1314.png" style="width: 100%; max-width: 537px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">By default, the standard type is Add(Link) A Part. Select the type appropriate for the UCS you are writing. I am choosing to modify a Part.</p>
    </li>
  </ul>
  <h2>Link to Tab</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">If a tab is not appropriate for the standard you are creating, you will get a message similar to the one shown. It may be a different tab with a slightly different message.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img src="../../assets/images/image1315.png" style="width: 100%; max-width: 537px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">The <span style="font-weight: bold;">Link To</span> tab will allow you to add or link an item to a specific Assembly, Part, or Operation. Depending on which one you select, your window to the right will display different selections. Review the groups and their associated selections and pick the most appropriate selection for your User Created Standard.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img src="../../assets/images/image1316.png" style="width: 100%; max-width: 537px;"/></p>
  <h2>Assembly Class Tab</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">This tab is the beginning of your ability to limit (filter) this User Created Standard to apply only in certain cases. Should you not want to limit to a specific Assembly class, select nothing here. If you need the standard to apply only on a certain class of Assembly, or object type, check only those for which you need the UCS to apply.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img src="../../assets/images/image1317.png" style="width: 100%; max-width: 537px;"/></p>
  <h2>Assembly Properties Tab</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">The Assembly Properties Tab will allow you the ability to establish which Assemblies will be available for a parameter to be effective. Currently, the default is all Assemblies, with no parameters.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img src="../../assets/images/image1318.png" style="width: 100%; max-width: 537px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Should you want to limit to a single Assembly, place the name in the field to the right of Assembly Name.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Instead of limiting the standard to a single Assembly, maybe you want it to include multiple Assemblies in a grouping. Therefore you can use wild cards. The acceptable wild cards are the asterisk (*), or the question mark (?).</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">As an example, std* will include any Assembly name that starts with std, regardless of any amount of characters after the std.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The question mark replaces characters in a name. For example, having a Assembly name such as B?? will include all Assemblies with 2 characters after the letter B. B12, B48, etc. will be included in the grouping.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Parameters will allow the User Created Standard to take affect only if the parameters that are checked meet the criteria based on the operation selected and the value that has been placed in the value field. Again, we are continuing with additional filters for the User Created Standards.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">An example of this would be setting up the depth of a Assembly to be greater than 12 inches before this standard would take affect.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img alt="" border="0" src="../../assets/images/image6148.gif" style="border: none; width: 100%; max-width: 296px;"/></p>
  <h2>End Types Tab</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">The next filter is the end type of the Assembly. You can pick any end type for either end. Should you pick nothing, the default for that is <span style="font-weight: bold; text-decoration: underline;">all</span> ends.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img src="../../assets/images/image1321.png" style="width: 100%; max-width: 537px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">You are able to pick virtually any combination of end types for this standard. To do that, select the appropriate end type for the left and right ends. Select the Add -&gt; Button. Repeat this selecting the different end combinations until all your combinations are covered.</p>
    </li>
  </ul>
  <h2>Construction Method Tab</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">We can limit this standard to a single construction method, all construction methods or anything in between.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img src="../../assets/images/image1322.png" style="width: 100%; max-width: 537px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">By default, as with all the others, nothing marked means that there are no restrictions. Selecting one or all but one will then restrict this standard to only the construction methods selected.</p>
    </li>
  </ul>
  <h2>Conditions for Object Tab</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">This filter requires the object that is being <span style="font-weight: bold;">linked to</span>, not the new object being linked, meet certain conditions before the standard will take affect. Again, if nothing is selected, the default is no restrictions. If your modifying or deleting a Part then this tab is for you to set the conditions for the actual Part that is being modified or deleted.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img src="../../assets/images/image1323.png" style="width: 100%; max-width: 537px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Notice the X Axis Rot, Y Axis Rot, and Z Axis Rot. These are there to allow you additional restrictions based on how the Part is oriented in space.</p>
    </li>
  </ul>
  <h2>Part Values Tab</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">The next tab, the Part Values tab allows you to establish the size of the Part you are linking. You can set a fixed value. You can set a value based on any dimension of the Part you&#39;re linking to. That Part, the Part your linking to is called the parent by Cabinet Vision.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img src="../../assets/images/image1324.png" style="width: 100%; max-width: 537px;"/></p>
  <h2>Â </h2>
  <h2>Part Parameters Tab</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">The Part Parameters tab will allow you to add parameters to the Part such as additional Parts (QTY), repeating the item (REPT), or a spacing of a set of holes being bored (SPCNG). You can also type out any other Parameter you wish here.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img src="../../assets/images/image1327.png" style="width: 100%; max-width: 537px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">QTY will give an additional quantity of the Part especially if you&#39;re linking to another Part. An example of this could be setting the QTY to 4 if the Part was shelf pins and you would be linking to adjustable shelf.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">REPT could be used if you were adding 3 shelf holes in an end of a Assembly.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">SPCNG could be used to space the shelf holes if you were adding multiple shelves in an upper Assembly.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">You are not limited to just the three parameters that are listed. You can add any <a href="Functions_and_Operators.htm">parameter</a> you want. Â A word of warning though. If there is a parameter that is already set for this Part or operation, then this will replace that parameter. Be sure this is what you want to do.</p>
    </li>
  </ul>
  <h2>Re-Open A User Created Standard</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Use the <span style="font-weight: bold;">Wizard</span>Â optionÂ to get back into a User Created Standard to change the parameters that you have set up.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img src="../../assets/images/image1328.png" style="width: 100%; max-width: 610px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">If you are going to change the parameters, be sure to use the Wizard option. Using this option with the correct User Created Standard highlighted will allow you to go back through the tabs that were discussed above. You can go directly to a parameter simply by clicking on the tab you need.</p>
    </li>
  </ul>
  <p style="margin-left: 132px;"><img alt="" border="0" src="../../assets/images/zGraphics/Extras/Information.png" style="border: none; width: 100%; max-width: 32px;"/> Use the Wizard option, to change your Standard not the <span style="font-weight: bold;">Code</span>Â option. The <span style="font-weight: bold;">Code</span>Â optionÂ is used to change, or add to the logic that the User Created Standard has already set up.</p>
  <h2>Organizing the User Created Standards</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Should you have to make multiple User Created Standards that are essentially the same but for some minor differences, use this option to copy the standard. Use the Wizard option to get into the standard to make the changes.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img src="../../assets/images/image1330.png" style="width: 100%; max-width: 610px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">You may decide you don&#39;t want a standard, or it has become unnecessary because the design you used it for is complete. Simply highlight the standard and click on the Delete option. The standard will be deleted from the list.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img src="../../assets/images/image1331.png" style="width: 100%; max-width: 610px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">CABINET VISIONÂ uses User Created Standards as they are listed. At times it is advantageous to have one standard acted upon before another standard. That&#39;s what the Up and Down buttons are used for.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img src="../../assets/images/image1332.png" style="width: 100%; max-width: 85px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">To use either button, highlight the User Created Standard you want to move. Click on the appropriate tool. The User Created Standard will be moved either up in priority or down in priority, depending on which tool you&#39;ve selected.</p>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">By right clicking your mouse on a User Created Standard, you have some of the same selections alternatively.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img alt="" border="0" src="../../assets/images/image6154.gif" style="border: none; width: 100%; max-width: 152px;"/></p>
  <h2>Advanced User Created Standards</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">For those advanced users the CodeÂ optionÂ offers tremendous power to CABINET VISION.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img src="../../assets/images/image1333.png" style="width: 100%; max-width: 610px;"/></p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">For even greater flexibility, you have the ability to modify the code. You are able to access the computer-generated code CABINET VISION has created. From the choices you made when you answered the questions, programming code has been added. You can modify and add to that code. This ability gives great power to User Created Standards. Now nothing is unattainable for you.</p>
    </li>
  </ul>
  <p style="margin-left: 40px;"><img src="../../assets/images/image1334.png" style="width: 100%; max-width: 909px;"/></p>
  <h2>User Created Standard Syntax</h2>
  <h3>Comment ;</h3>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Any text following a ; is ignored.</p>
    </li>
  </ul>
  <p style="margin-left: 80px;"><img alt="" border="0" src="../../assets/images/zGraphics/Extras/Information.png" style="border: none; width: 100%; max-width: 32px;"/> The 1st line of every UCS must be a comment.</p>
  <h3>For Each Object(s) ObjectType</h3>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Multiple object names can be listed here with a | symbol to separate. Also wild card characters (*,?) may be used in the object names. Any parameters specified in the formula that are not proceeded with a . or : refer to the For Each Object(s).</p>
    </li>
  </ul>
  <h3>The Filter - If &amp; Then &amp; End If</h3>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">A series of conditional statements that will filter out the UCS affecting every object. If the IF statement evaluates False the program flow drops to the corresponding End If statement. Some of the common items to filter on would be:</p>
    </li>
    <li style="list-style: none; display: inline;">
      <ul style="list-style: circle;">
        <li class="p" style="list-style: square; font-weight: bold;">
          <p class="Indent_1_Bulllet" style="font-weight: bold;">Assembly Class</p>
        </li>
      </ul>
    </li>
  </ul>
  <p class="Indent_1_Bulllet" style="margin-left: 120px;">Cab.Class = ASM_CLASS_BASE</p>
  <ol style="list-style: circle;">
    <li style="list-style: none; display: inline;">
      <ul style="list-style: circle;">
        <li class="p" style="list-style: square; font-weight: bold;">
          <p class="Indent_1_Bulllet" style="font-weight: bold;">Assembly Type</p>
        </li>
      </ul>
    </li>
  </ol>
  <p class="Indent_1_Bulllet" style="margin-left: 120px;">Cab.Type = ASM_TYPE_CORNER45</p>
  <ol style="list-style: circle;">
    <li style="list-style: none; display: inline;">
      <ul style="list-style: circle;">
        <li class="p" style="list-style: square; font-weight: bold;">
          <p class="Indent_1_Bulllet" style="font-weight: bold;">Assembly Name</p>
        </li>
      </ul>
    </li>
  </ol>
  <p class="Indent_1_Bulllet" style="margin-left: 120px;">Cab.Name = &#39;BD*&#39;</p>
  <ol style="list-style: circle;">
    <li style="list-style: none; display: inline;">
      <ul style="list-style: circle;">
        <li class="p" style="list-style: square; font-weight: bold;">
          <p class="Indent_1_Bulllet" style="font-weight: bold;">Assembly Parameters</p>
        </li>
      </ul>
    </li>
  </ol>
  <p class="Indent_1_Bulllet" style="margin-left: 120px;">Cab.DX = 0</p>
  <ol style="list-style: circle;">
    <li style="list-style: none; display: inline;">
      <ul style="list-style: circle;">
        <li class="p" style="list-style: square; font-weight: bold;">
          <p class="Indent_1_Bulllet" style="font-weight: bold;">Assembly End Types</p>
        </li>
      </ul>
    </li>
  </ol>
  <p class="Indent_1_Bulllet" style="margin-left: 120px;">Cab.REnd = ASM_END_CLIPPED and RClip &gt; 0</p>
  <ol style="list-style: circle;">
    <li style="list-style: none; display: inline;">
      <ul style="list-style: circle;">
        <li class="p" style="list-style: square; font-weight: bold;">
          <p class="Indent_1_Bulllet" style="font-weight: bold;">Construction ID</p>
        </li>
      </ul>
    </li>
  </ol>
  <p class="Indent_1_Bulllet" style="margin-left: 120px;">Cab.ConstID = 15</p>
  <ol style="list-style: circle;">
    <li style="list-style: none; display: inline;">
      <ul style="list-style: circle;">
        <li class="p" style="list-style: square; font-weight: bold;">
          <p class="Indent_1_Bulllet" style="font-weight: bold;">Object Parameters</p>
        </li>
      </ul>
    </li>
  </ol>
  <p class="Indent_1_Bulllet" style="margin-left: 120px;">DX &gt; 15</p>
  <h2>Modifying Parameters</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Following the If statements you can specify new parameters for the object. If the parameter does not exist it will be added. If the parameter does exist its value will be replaced. Following are some special parameter settings:</p>
    </li>
    <li style="list-style: none; display: inline;">
      <ul style="list-style: circle;">
        <li class="p" style="list-style: square;">
          <p class="Indent_1_Bulllet">QTY = 0 This will delete the object</p>
        </li>
        <li class="p" style="list-style: square;">
          <p class="Indent_1_Bulllet">Adjust Add (X) This will add X to the current value.</p>
        </li>
        <li class="p" style="list-style: square;">
          <p class="Indent_1_Bulllet">Adjust Mult (X) This will multiply the current value by X.</p>
        </li>
        <li class="p" style="list-style: square;">
          <p class="Indent_1_Bulllet">REPT For boring operations: it specifies the number of holes.</p>
        </li>
        <li class="p" style="list-style: square;">
          <p class="Indent_1_Bulllet">SPCNG For boring operations: it specifies the spacing between holes.</p>
        </li>
      </ul>
    </li>
    <li>
      <p class="Indent_1_Bulllet">For a complete list see the <a href="System_Parameters.htm">System Parameters topic</a>.</p>
    </li>
  </ul>
  <h2>Adding an Object - Dim Object as New ObjectType</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">You can create multiple objects as long as the objects have unique names.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">You can set the parameters for the new object(s) by specifying the ObjectName.Parameter (DE.DX).</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The parameter Visible will determine if the Part appears visually as well as on the cut list. (DE.Visible = True).</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet"><a name="OWNER" id="OWNER"></a>It is common to link operations to other operations. For an operation to be valid it must be attached to a Part (not another operation). You can use the following statement to attach a new operation to the parent Part:</p>
    </li>
  </ul>
  <p class="Indent_1_Bulllet" style="margin-left: 80px;">NewObject.Owner = Owner</p>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">This will effectively take the new operation and detach it from the operation and attach it to the Part.</p>
    </li>
  </ul>
  <h2>Valid Object Types for Use in a For Each Statement</h2>
  <ul style="list-style: square;">
    <li class="p">
      <p class="Indent_1_Bulllet">ACAMDwg</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Arc</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Assembly</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">BlindDado</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Dado</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">DadoEx</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Door</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">DoveTail</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">DrwFront</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Guide</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Hinge</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Hole</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">HoleMaster</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">IJoint</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">LBoreMaster</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Line</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Linebore</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">MDado</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">MDadoEx</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">MHole</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">MLinebore</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Molding</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Opening</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Operation</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">NGAcsry</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Part</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Pull</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Route</p>
    </li>
  </ul>
  <h2>Additional Functions</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Imp(X) Divides X by 25.4. Converts a metric value to imperial.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Xmm establishes that you are defining a Metric value. 300mm</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Xin establishes that you are defining an Imperial value. 12in</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">? This is a wild card that can be used in any name to represent one character. B??D would match B24D and B18D <span style="font-weight: bold;">but not</span> B9D.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">* This is a wild card that can be used in any name to represent any number of characters. B*D would match B24D and B18D <span style="font-weight: bold;">and</span> B9D. However N*BORE would not match with NoooBoooBORE. When the program encounters an * it searches for the next character B in the rest of the string. When a match is found it performs the string comparison. In this case BORE = BoooBORE.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Multiple wild cards can be used in any string: (W*3?D*BB)</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">_M: Material Information. This parameter can be used to identify the current material information of any Part. Use _M:DZ to obtain the material thickness. Use _M:MatID to get the materials internal ID number. Use _M:SchID to get the current material schedule ID for a Part.Â The following would be valid syntax:</p>
    </li>
    <li style="list-style: none; display: inline;">
      <ul style="list-style: circle;">
        <li class="p" style="list-style: square;">
          <p class="Indent_1_Bulllet">_m:matid</p>
        </li>
        <li class="p" style="list-style: square;">
          <p class="Indent_1_Bulllet">tr._m:schedid</p>
        </li>
        <li class="p" style="list-style: square;">
          <p class="Indent_1_Bulllet">face.mr@2._m:dz</p>
        </li>
        <li class="p" style="list-style: square;">
          <p class="Indent_1_Bulllet">cab.face.mr@2._m:matid</p>
        </li>
      </ul>
    </li>
  </ul>
  <p>See the <a href="Functions_and_Operators.htm">Functions and Operators topic</a> for a list of all valid Object Classes and their associated Object Types.</p>
  <h2>End Type Constants</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">ASM_END_FINISHED</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">ASM_END_UNFINISHED</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">ASM_END_EXTENDED</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">ASM_END_RETURN</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">ASM_END_APPL_FE</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">ASM_END_APPL_DOOR</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">ASM_END_PANELIZED</p>
    </li>
  </ul>
  <h2>Operation Names - Line boring</h2>
  <ul style="list-style: square;">
    <li class="p" style="list-style: circle; margin-left: -20px;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt; font-weight: bold;">Line Bore</p>
    </li>
    <li class="p">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">LFVBORE</p>
    </li>
    <li class="p">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">LRVBORE</p>
    </li>
  </ul>
  <ul style="list-style: square;">
    <li class="p" style="list-style: circle; margin-left: -20px;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt; font-weight: bold;">Guide Bore</p>
    </li>
    <li class="p">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">GFVBORE</p>
    </li>
    <li class="p">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">GMVBORE</p>
    </li>
    <li class="p">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">GRVBORE</p>
    </li>
  </ul>
  <ul style="list-style: square;">
    <li class="p" style="list-style: circle; margin-left: -20px;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt; font-weight: bold;">Hinge Bore</p>
    </li>
    <li class="p">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">HPBORE (Hinge Plate Bore)</p>
    </li>
    <li class="p">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">HCBORE (Hinge Cup Bore)</p>
    </li>
    <li class="p">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">HCABORE (Hinge Cup Anchor Bore)</p>
    </li>
  </ul>
  <h2>Operation Names - Construction boring:</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">LEFHBORE</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">LEMHBORE</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">LERHBORE</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">REFHBORE</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">REMHBORE</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet"><span style="margin-left: 24px;">RERHBORE</span></p>
    </li>
  </ul>
  <h2>Operation Names - Dados:</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p style="margin-top: 0pt; margin-bottom: 0pt; font-weight: bold;">Stretchers</p>
    </li>
    <li class="p" style="list-style: square;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">STEDADO</p>
    </li>
    <li class="p" style="list-style: square;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">SHDADO (Drawer Stretcher)</p>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p" style="margin-left: -20px;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt; font-weight: bold;">Top</p>
    </li>
    <li class="p" style="list-style: square;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">TODADO</p>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p" style="margin-left: -20px;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt; font-weight: bold;">Bottom</p>
    </li>
    <li class="p" style="list-style: square;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">BODADO</p>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p" style="margin-left: -20px;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt; font-weight: bold;">Nailers</p>
    </li>
    <li class="p" style="list-style: square;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">NATDADO</p>
    </li>
    <li class="p" style="list-style: square;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">NABDADO</p>
    </li>
    <li class="p" style="list-style: square;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">NAEDADO</p>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p" style="margin-left: -20px;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt; font-weight: bold;">Shelf</p>
    </li>
    <li class="p" style="list-style: square;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">SHDADO</p>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p" style="margin-left: -20px;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt; font-weight: bold;">Back</p>
    </li>
    <li class="p" style="list-style: square;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">UBDADO</p>
    </li>
    <li class="p" style="list-style: square;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">FBDADO</p>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p" style="margin-left: -20px;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt; font-weight: bold;">Toe</p>
    </li>
    <li class="p" style="list-style: square;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">DADO</p>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p" style="margin-left: -20px;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt; font-weight: bold;">Unfinished Ends</p>
    </li>
    <li class="p" style="list-style: square;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">DADO</p>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p" style="margin-left: -20px;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt; font-weight: bold;">Finished Ends</p>
    </li>
    <li class="p" style="list-style: square;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">DADO</p>
    </li>
  </ul>
  <ul style="list-style: circle;">
    <li class="p" style="margin-left: -20px;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt; font-weight: bold;">Partition</p>
    </li>
    <li class="p" style="list-style: square;">
      <p style="margin-left: 24px; margin-top: 0pt; margin-bottom: 0pt;">PTDADO</p>
    </li>
  </ul>
  <h2>UCS Sample #1</h2>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; background-color: Transparent; color: #008000; font-family: &#39;Courier New&#39;, monospace;">;Links Board to Adjustable &amp; Fixed Shelves</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â </p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â <span style="color: #0000ff;">For Each</span> AS|FS Part</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â </p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â <span style="color: #0000ff;">If</span> Cab<span style="color: #ff0000;">.</span>Class <span style="color: #ff0000;">=</span> ASM_CLASS_BASE <span style="color: #0000ff;">Then</span></p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â <span style="color: #0000ff;">If</span> Cab<span style="color: #ff0000;">.</span>Type <span style="color: #ff0000;">=</span> Â ASM_TYPE_STANDARD or Cab.Type <span style="color: #ff0000;">=</span> Â ASM_TYPE_CORNER45 <span style="color: #0000ff;">Then</span></p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â <span style="color: #0000ff;">If</span> Cab<span style="color: #ff0000;">.</span>Name <span style="color: #ff0000;">=</span> <span style="color: #3f007f;">&#39;Special Name&#39;</span> <span style="color: #0000ff;">Then</span></p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â <span style="color: #0000ff;">If</span> Cab<span style="color: #ff0000;">.</span>DX <span style="color: #ff0000;">&gt;</span> 15 <span style="color: #0000ff;">Then</span></p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â <span style="color: #0000ff;">If</span> Cab<span style="color: #ff0000;">.</span>DY <span style="color: #ff0000;">&gt;</span> 30 <span style="color: #0000ff;">Then</span></p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â <span style="color: #0000ff;">If</span> Cab<span style="color: #ff0000;">.</span>DZ <span style="color: #ff0000;">&lt;</span> 20 <span style="color: #0000ff;">Then</span></p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â <span style="color: #0000ff;">If</span> Cab<span style="color: #ff0000;">.</span>LEnd <span style="color: #ff0000;">=</span> Â ASM_END_UNFINISHED <span style="color: #0000ff;">Then</span></p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â <span style="color: #0000ff;">If</span> Cab<span style="color: #ff0000;">.</span>ConstID <span style="color: #ff0000;">=</span> 15 or Cab.ConstID <span style="color: #ff0000;">=</span> 16 <span style="color: #0000ff;">Then</span></p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â <span style="color: #0000ff;">If</span> DY <span style="color: #ff0000;">&gt;</span> 20 <span style="color: #0000ff;">Then</span></p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â </p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â <span style="color: #0000ff;">Dim</span> BOARD as New Part</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â BOARD<span style="color: #ff0000;">.</span>Visible <span style="color: #ff0000;">=</span> True</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â BOARD<span style="color: #ff0000;">.</span>DX <span style="color: #ff0000;">=</span> 3</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â BOARD<span style="color: #ff0000;">.</span>DY <span style="color: #ff0000;">= :</span>DY <span style="color: #ff0000;">+</span> 0</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â BOARD<span style="color: #ff0000;">.</span>X <span style="color: #ff0000;">=</span> 0</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â BOARD<span style="color: #ff0000;">.</span>Y <span style="color: #ff0000;">= :</span>DZ <span style="color: #ff0000;">+</span> 0</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â BOARD<span style="color: #ff0000;">.</span>Z <span style="color: #ff0000;">= :</span>DX <span style="color: #ff0000;">+</span> 0</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â BOARD<span style="color: #ff0000;">.</span>AX <span style="color: #ff0000;">=</span> 0 <span style="color: #008000;">;Not Needed Since It is 0</span></p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â </p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â Â <span style="color: #0000ff;">If</span> Cab<span style="color: #ff0000;">.</span>Euro <span style="color: #ff0000;">=</span> 1 <span style="color: #0000ff;">Then</span> Â Â <span style="color: #008000;">;If a Euro Assembly... Add Banding</span></p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â </p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â Â Â Â Dim BNDEX as New Part</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â Â Â Â BNDEX<span style="color: #ff0000;">.</span>Visible <span style="color: #ff0000;">=</span> True</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â Â Â Â BNDEX<span style="color: #ff0000;">.</span>DX <span style="color: #ff0000;">=</span> 3</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â Â Â Â BNDEX<span style="color: #ff0000;">.</span>DY <span style="color: #ff0000;">= :</span>DY <span style="color: #ff0000;">+</span> 0</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â Â Â Â BNDEX<span style="color: #ff0000;">.</span>X <span style="color: #ff0000;">=</span> Imp(3) Â Â Â <span style="color: #008000;">;Convert From Metric (3mm)</span></p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â Â Â Â BNDEX<span style="color: #ff0000;">.</span>Y <span style="color: #ff0000;">= :</span>DZ <span style="color: #ff0000;">+</span> 0</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â Â Â Â BNDEX<span style="color: #ff0000;">.</span>Z <span style="color: #ff0000;">= :</span>DX <span style="color: #ff0000;">+</span> 0</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â </p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; color: #0000ff; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â Â Â End If</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â </p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; color: #008000; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â Â Â ;Place an additional parameter and re-adjust new boards width</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â Â Â <span style="color: #0000ff;">If</span> DY <span style="color: #ff0000;">&gt;</span> 40 <span style="color: #0000ff;">Then</span></p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â Â Â Â BOARD<span style="color: #ff0000;">.</span>DX <span style="color: #ff0000;">Adjust Add</span> 2</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; color: #0000ff; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â Â Â End If</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â </p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; color: #008000; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â Â Â ;Add Additional Parameters</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â Â Â Â MyShelfParam <span style="color: #ff0000;">=</span> 2 Â Â <span style="color: #008000;">;Added to the &quot;For Each&quot; Object</span></p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â Â Â Â Â BOARD.MyBoardParam <span style="color: #ff0000;">=</span> 3 Â Â <span style="color: #008000;">;Added to the new board</span></p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â </p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; color: #0000ff; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â Â End If</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; color: #0000ff; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â Â End If</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; color: #0000ff; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â Â End If</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; color: #0000ff; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â Â End If</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; color: #0000ff; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â Â End If</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; color: #0000ff; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â Â End If</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; color: #0000ff; font-family: &#39;Courier New&#39;, monospace;">Â Â Â Â End If</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; color: #0000ff; font-family: &#39;Courier New&#39;, monospace;">Â Â Â End If</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; color: #0000ff; font-family: &#39;Courier New&#39;, monospace;">Â Â End If</p>
  <h2>Â </h2>
  <h2>UCS Sample #2 Modify Manually Added Part</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">In this example we will demonstrate some things to watch out for with advanced UCS. We will illustrate a system limitation imposed on UCS and how to work around the system.</p>
    </li>
  </ul>
  <h3>UCSMOD Parameter</h3>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">UCS only applies to System Parts, unless you tell it to.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Any New Part you add to an Object must have the UCSMOD = 1 Parameter added to it so the UCS will recognize the Part.</p>
    </li>
  </ul>
  <h3>Example</h3>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">Add UCS that adjusts the Y position of all Top Stretchers</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Note that the Top Stretcher we have added doesn&#39;t change</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Add a UCSMOD = 1 Parameter to the Top Stretcher.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Note: The Part is modified with every rebuild.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">This method is a valid method if you are not Adjusting the Part.</p>
    </li>
  </ul>
  <p>The parameter UCSMOD is used to add UCS control to Parts that have been manually added to an object. Setting UCSMOD = 1 will allow you to make changes to the manually added Part via UCS. The UCSMOD parameter will not work when the Part has been added by a UCS itself. However, if you add a Part via a UCS, you should just size it correctly in that UCS.</p>
  <h2>Â </h2>
  <h2>UCS Sample #3 Modify Hinge Holes</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">This example will demonstrate a modification to a CNC operation.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">It will move and rotate the holes for a base plate/hinge for the new Blum concealed base plate.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The UCS must account for the differences in the Left end, Right end, &amp; Partition.</p>
    </li>
  </ul>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt; color: #008000;">;Preps Baseplate Holes For New Blum Concealed Base plates</p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â </p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â <span style="color: #0000ff;">For Each</span> HPBORE Linebore <span style="color: #008000;">;Hinge Plate Boring Holes</span></p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â </p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Y <span style="color: #ff0000;">Adjust Add</span> imp(16) Â Â <span style="color: #008000;">;Move the Hinge Holes Up 16mm</span></p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â AZ <span style="color: #ff0000;">=</span> 90 Â Â <span style="color: #008000;">;Rotate the direction of the holes 90 degrees</span></p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â </p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â <span style="color: #0000ff;">If</span> X <span style="color: #ff0000;">&lt;</span> imp(64) <span style="color: #0000ff;">Then Â </span><span style="color: #008000;">;On Right End or Partitions</span></p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â AZ <span style="color: #ff0000;">= -</span>90 Â Â <span style="color: #008000;">;Reverse the Rotation</span></p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â <span style="color: #0000ff;">End If</span></p>
  <h2>Â </h2>
  <h2>UCS Sample #4 Delete CNC Holes for Nailers</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">This example originates from a customer who wanted CNC instructions for his Stretchers but not his nailers. Currently CABINET VISION assumes that if you have CNC for the Stretchers you will also have CNC for nailers.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">This example will demonstrate how to place a broad filter in the For Each line and place conditions on the parents name.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Refer to the UCS constants for Operation Names.</p>
    </li>
  </ul>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace; color: #008000;">;Deletes Construction Boring For Nailers</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â </p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â <span style="color: #0000ff;">For Each</span> <span style="color: #ff0000;">*</span>HBORE Linebore</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â </p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â <span style="color: #0000ff;">If</span> <span style="color: #ff0000;">:</span>Name <span style="color: #ff0000;">=</span> <span style="color: #3f007f;">&#39;NA&#39;</span> Then Â Â <span style="color: #008000;">;If the parent is a nailer</span></p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â Â QTY <span style="color: #ff0000;">=</span> 0 Â Â <span style="color: #008000;">;Set the quantity of the operations to 0</span></p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â <span style="color: #0000ff;">End If</span></p>
  <p style="margin-left: 48px;">Â </p>
  <h2>UCS Sample #5 Add Light Rail To Uppers</h2>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt; color: #008000;">;Links Bottom Rail to Bottom of Upper Assembly with Bottom Scribe</p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â </p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;"><span style="color: #0000ff;">For Each</span> BO Part</p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â </p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â <span style="color: #0000ff;">If</span> Cab<span style="color: #ff0000;">.</span>Class <span style="color: #ff0000;">=</span> Â ASM_CLASS_UPPER <span style="color: #0000ff;">Then</span></p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â <span style="color: #0000ff;">If</span> Â CAB<span style="color: #ff0000;">.</span>SCB <span style="color: #ff0000;">&gt;</span> 0 <span style="color: #0000ff;">Then</span> Â Â <span style="color: #008000;">;If Assembly has bottom scribe &gt; 0</span></p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â </p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â <span style="color: #008000;">;Initialize Variables with a default value</span></p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â LendThick <span style="color: #ff0000;">=</span> 0</p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â RendThick <span style="color: #ff0000;">=</span> 0</p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â </p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â <span style="color: #008000;">;These Values are only set if Unfinished Ends Exists</span></p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â <span style="color: #0000ff;">If</span> LEND <span style="color: #ff0000;">=</span> 2 <span style="color: #0000ff;">Then</span></p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â Â LendThick <span style="color: #ff0000;">=</span> CAB<span style="color: #ff0000;">.</span>CASE<span style="color: #ff0000;">.</span>LU<span style="color: #ff0000;">.</span>DZ</p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â <span style="color: #0000ff;">End If</span></p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â </p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â <span style="color: #0000ff;">If</span> REND <span style="color: #ff0000;">=</span> 2 <span style="color: #0000ff;">Then</span></p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â Â RendThick <span style="color: #ff0000;">=</span> CAB<span style="color: #ff0000;">.</span>CASE<span style="color: #ff0000;">.</span>RU<span style="color: #ff0000;">.</span>DZ</p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â <span style="color: #0000ff;">End If</span></p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â </p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â <span style="color: #0000ff;">Dim</span> BR as New Part</p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â BR<span style="color: #ff0000;">.</span>Visible <span style="color: #ff0000;">=</span> True</p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â BR<span style="color: #ff0000;">.</span>DX <span style="color: #ff0000;">=</span> CAB<span style="color: #ff0000;">.</span>SCB</p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â BR<span style="color: #ff0000;">.</span>DY <span style="color: #ff0000;">=</span> <span style="color: #ff0000;">:</span>DY <span style="color: #ff0000;">+</span> LendThick <span style="color: #ff0000;">+</span> RendThick</p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â BR<span style="color: #ff0000;">.</span>X <span style="color: #ff0000;">=</span> DZ</p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â BR<span style="color: #ff0000;">.</span>Y <span style="color: #ff0000;">=</span> 0 <span style="color: #ff0000;">-</span> LendThick</p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â BR<span style="color: #ff0000;">.</span>Z <span style="color: #ff0000;">=</span> <span style="color: #ff0000;">:</span>DZ</p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â BR<span style="color: #ff0000;">.</span>AX <span style="color: #ff0000;">=</span> 0</p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â BR<span style="color: #ff0000;">.</span>AY <span style="color: #ff0000;">=</span> <span style="color: #ff0000;">-</span>90</p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â Â BR<span style="color: #ff0000;">.</span>AZ <span style="color: #ff0000;">=</span> 0</p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â </p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â Â <span style="color: #0000ff;">End If</span></p>
  <p style="margin-left: 48px; font-family: &#39;Courier New&#39;, monospace; margin-top: 0pt; margin-bottom: 0pt;">Â <span style="color: #0000ff;">End If</span></p>
  <h2>Â </h2>
  <h2>UCS Sample #6 Add Additional Line of Vertical Boring Holes</h2>
  <ul style="list-style: circle;">
    <li class="p">
      <p class="Indent_1_Bulllet">This standard links a set of line bore holes to an existing set of line boreholes.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">The standard has to use the Owner Keyword to work.</p>
    </li>
    <li class="p">
      <p class="Indent_1_Bulllet">Operations must be attached to Parts in order to be seen.</p>
    </li>
  </ul>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace; color: #008000;">;Links Vertical Bore to Vertical Bore</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â </p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;"><span style="color: #0000ff;">For Each</span> LFVBORE Operation</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â </p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â <span style="color: #0000ff;">If</span> Cab<span style="color: #ff0000;">.</span>DZ <span style="color: #ff0000;">&gt;</span> 24 <span style="color: #0000ff;">Then</span></p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â <span style="color: #0000ff;">Dim</span> VBORE as New Linebore</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â VBORE<span style="color: #ff0000;">.</span>Owner <span style="color: #ff0000;">=</span> Owner</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â VBORE<span style="color: #ff0000;">.</span>Visible <span style="color: #ff0000;">=</span> True</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â VBORE<span style="color: #ff0000;">.</span>DX <span style="color: #ff0000;">=</span> <span style="color: #ff0000;">:</span>DX</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â VBORE<span style="color: #ff0000;">.</span>DY <span style="color: #ff0000;">=</span> <span style="color: #ff0000;">:</span>DY</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â VBORE<span style="color: #ff0000;">.</span>DY <span style="color: #ff0000;">=</span> <span style="color: #ff0000;">:</span>DZ</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â VBORE<span style="color: #ff0000;">.</span>X <span style="color: #ff0000;">=</span> (<span style="color: #ff0000;">::</span>DX <span style="color: #ff0000;">/</span> 2) <span style="color: #ff0000;">-</span> <span style="color: #ff0000;">:</span>x</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â VBORE<span style="color: #ff0000;">.</span>Y <span style="color: #ff0000;">=</span> 0</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â VBORE<span style="color: #ff0000;">.</span>Z <span style="color: #ff0000;">=</span> 0</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â VBORE<span style="color: #ff0000;">.</span>AX <span style="color: #ff0000;">=</span> <span style="color: #ff0000;">:</span>AX</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â VBORE<span style="color: #ff0000;">.</span>AY <span style="color: #ff0000;">=</span> <span style="color: #ff0000;">:</span>AY</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â VBORE<span style="color: #ff0000;">.</span>AZ <span style="color: #ff0000;">=</span> <span style="color: #ff0000;">:</span>AZ</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â VBORE<span style="color: #ff0000;">.</span>REPT <span style="color: #ff0000;">=</span> <span style="color: #ff0000;">:</span>REPT</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â Â VBORE<span style="color: #ff0000;">.</span>SPCNG <span style="color: #ff0000;">=</span> <span style="color: #ff0000;">:</span>SPCNG</p>
  <p style="margin-left: 48px; margin-top: 0pt; margin-bottom: 0pt; font-family: &#39;Courier New&#39;, monospace;">Â <span style="color: #0000ff;">End If</span></p>

</body></html>