{
    "id": "ab489e60-ddc1-442d-b43a-701ebf17a7dc",
    "title": "A_Breakdown_on_UCSs",
    "content": [
        {
            "type": "text",
            "data": "Objects In CABINET VISION"
        },
        {
            "type": "image",
            "data": "1AUALL.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "CABINET VISION\u00a0has many objects; Rooms, Walls, Assemblies, Decks, Stiles and Rails are all objects in CABINET VISION. Each of these objects are very similar. The object's type and parameters make it unique, a parameter is a characteristic or attribute of an object. Although almost every object has the basic 9 parameters, typically objects have more than the standard nine."
        },
        {
            "type": "text",
            "data": "The Basic 9 Parameters"
        },
        {
            "type": "text",
            "data": "The basic 9 parameters describe where an object sits in space."
        },
        {
            "type": "text",
            "data": "X, Y  and  Z  are position points. \n \n \n DX, DY , and  DZ  are dimensions \n \n \n AX, AY , and  AZ  are axis of rotation. \n \n \n X  = Position on X Axis \n \n \n Y  = Position on Y Axis \n \n \n Z  = Position on Z Axis \n \n \n DX  = Width"
        },
        {
            "type": "text",
            "data": "X, Y  and  Z  are position points."
        },
        {
            "type": "text",
            "data": "X, Y  and  Z  are position points."
        },
        {
            "type": "text",
            "data": "DX, DY , and  DZ  are dimensions"
        },
        {
            "type": "text",
            "data": "DX, DY , and  DZ  are dimensions"
        },
        {
            "type": "text",
            "data": "AX, AY , and  AZ  are axis of rotation."
        },
        {
            "type": "text",
            "data": "AX, AY , and  AZ  are axis of rotation."
        },
        {
            "type": "text",
            "data": "X  = Position on X Axis"
        },
        {
            "type": "text",
            "data": "X  = Position on X Axis"
        },
        {
            "type": "text",
            "data": "Y  = Position on Y Axis"
        },
        {
            "type": "text",
            "data": "Y  = Position on Y Axis"
        },
        {
            "type": "text",
            "data": "Z  = Position on Z Axis"
        },
        {
            "type": "text",
            "data": "Z  = Position on Z Axis"
        },
        {
            "type": "text",
            "data": "DX  = Width"
        },
        {
            "type": "text",
            "data": "DX  = Width"
        },
        {
            "type": "text",
            "data": "DY  = Length / Height (Part / Wall) \n \n \n DZ  = Thickness / Depth (Part / Wall) \n \n \n AX  = Rotation on X Axis \n \n \n AY  = Rotation on Y Axis \n \n \n AZ  = Rotation on Z Axis"
        },
        {
            "type": "text",
            "data": "DY  = Length / Height (Part / Wall)"
        },
        {
            "type": "text",
            "data": "DY  = Length / Height (Part / Wall)"
        },
        {
            "type": "text",
            "data": "DZ  = Thickness / Depth (Part / Wall)"
        },
        {
            "type": "text",
            "data": "DZ  = Thickness / Depth (Part / Wall)"
        },
        {
            "type": "text",
            "data": "AX  = Rotation on X Axis"
        },
        {
            "type": "text",
            "data": "AX  = Rotation on X Axis"
        },
        {
            "type": "text",
            "data": "AY  = Rotation on Y Axis"
        },
        {
            "type": "text",
            "data": "AY  = Rotation on Y Axis"
        },
        {
            "type": "text",
            "data": "AZ  = Rotation on Z Axis"
        },
        {
            "type": "text",
            "data": "AZ  = Rotation on Z Axis"
        },
        {
            "type": "text",
            "data": "Position X, Y, Z"
        },
        {
            "type": "text",
            "data": "The coordinates of a Part are in reference to its point of origin. \n \n \n The coordinates of the Part in the diagram above are x=0, y=0 and z=0. \n \n \n The coordinates of the diagram to the left are x=60, y=52, and z=0. These coordinates are in reference to the start of the Wall. \n \n \n The X position moves a point of origin right (+) and left (-). \n \n \n The Y position moves a point of origin up (+) and down (-). \n \n \n The Z position moves a point of origin forward (+) and backward (-)."
        },
        {
            "type": "text",
            "data": "The coordinates of a Part are in reference to its point of origin."
        },
        {
            "type": "text",
            "data": "The coordinates of a Part are in reference to its point of origin."
        },
        {
            "type": "text",
            "data": "The coordinates of the Part in the diagram above are x=0, y=0 and z=0."
        },
        {
            "type": "text",
            "data": "The coordinates of the Part in the diagram above are x=0, y=0 and z=0."
        },
        {
            "type": "text",
            "data": "The coordinates of the diagram to the left are x=60, y=52, and z=0. These coordinates are in reference to the start of the Wall."
        },
        {
            "type": "text",
            "data": "The coordinates of the diagram to the left are x=60, y=52, and z=0. These coordinates are in reference to the start of the Wall."
        },
        {
            "type": "text",
            "data": "The X position moves a point of origin right (+) and left (-)."
        },
        {
            "type": "text",
            "data": "The X position moves a point of origin right (+) and left (-)."
        },
        {
            "type": "text",
            "data": "The Y position moves a point of origin up (+) and down (-)."
        },
        {
            "type": "text",
            "data": "The Y position moves a point of origin up (+) and down (-)."
        },
        {
            "type": "text",
            "data": "The Z position moves a point of origin forward (+) and backward (-)."
        },
        {
            "type": "text",
            "data": "The Z position moves a point of origin forward (+) and backward (-)."
        },
        {
            "type": "text",
            "data": "Dimension DX, DY, DZ"
        },
        {
            "type": "text",
            "data": "DX  can be thought of as the  width  for a Part or the  width  of Assemblies and Walls. \n \n \n DY  can be thought of as the  length  for a Part or the  height  of Assemblies and Walls. \n \n \n DZ  can be thought of as the  thickness  for a Part or the  depth  of Assemblies and Walls."
        },
        {
            "type": "text",
            "data": "DX  can be thought of as the  width  for a Part or the  width  of Assemblies and Walls."
        },
        {
            "type": "text",
            "data": "DX  can be thought of as the  width  for a Part or the  width  of Assemblies and Walls."
        },
        {
            "type": "text",
            "data": "DY  can be thought of as the  length  for a Part or the  height  of Assemblies and Walls."
        },
        {
            "type": "text",
            "data": "DY  can be thought of as the  length  for a Part or the  height  of Assemblies and Walls."
        },
        {
            "type": "text",
            "data": "DZ  can be thought of as the  thickness  for a Part or the  depth  of Assemblies and Walls."
        },
        {
            "type": "text",
            "data": "DZ  can be thought of as the  thickness  for a Part or the  depth  of Assemblies and Walls."
        },
        {
            "type": "text",
            "data": "Axis of Rotation AX, AY, AZ"
        },
        {
            "type": "text",
            "data": "Right Hand Rule"
        },
        {
            "type": "text",
            "data": "The right-hand rule determines the positive axis direction of the Z axis when you know the direction of the X and Y axes in a 3D coordinate system. The right-hand rule also determines the positive rotation direction about an axis in 3D space."
        },
        {
            "type": "image",
            "data": "image130.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "To determine the positive axis direction of the X, Y, and Z axes, place the back of your right hand near the screen. Point your thumb in the direction of the positive X axis. Extend your index and middle fingers as illustrated and point your index finger in the direction of the positive Y axis. Your middle finger indicates the direction of the positive Z axis."
        },
        {
            "type": "text",
            "data": "Thumb = X axis \n \n \n Index finger = Y axis \n \n \n Middle finger = Z axis \n \n \n Looking towards the point of origin of each axis, clockwise is (-) negative, and counterclockwise is (+) positive. \n \n \n Order of rotation of a Part is X, then Y, then Z. \n \n \n The axis does not move with the Part. \n \n \n Example #1 : An Adjustable Shelf rotates on the X-axis (AX=-90) and then on the Y-axis (AY=-90). If the axis moved with the Part the rotation would have been (AX = -90), (AZ = -90). \n \n \n Example #2 : For an angled Shelf it would be nice to describe as (AX = -90, AY = -90, AX = 15) or (AX = -75, AY = -90). The correct rotation is (AY = -75, AZ = -90). Use the rotation tool in Solid when you are having difficulty."
        },
        {
            "type": "text",
            "data": "Thumb = X axis"
        },
        {
            "type": "text",
            "data": "Thumb = X axis"
        },
        {
            "type": "text",
            "data": "Index finger = Y axis"
        },
        {
            "type": "text",
            "data": "Index finger = Y axis"
        },
        {
            "type": "text",
            "data": "Middle finger = Z axis"
        },
        {
            "type": "text",
            "data": "Middle finger = Z axis"
        },
        {
            "type": "text",
            "data": "Looking towards the point of origin of each axis, clockwise is (-) negative, and counterclockwise is (+) positive."
        },
        {
            "type": "text",
            "data": "Looking towards the point of origin of each axis, clockwise is (-) negative, and counterclockwise is (+) positive."
        },
        {
            "type": "text",
            "data": "Order of rotation of a Part is X, then Y, then Z."
        },
        {
            "type": "text",
            "data": "Order of rotation of a Part is X, then Y, then Z."
        },
        {
            "type": "text",
            "data": "The axis does not move with the Part."
        },
        {
            "type": "text",
            "data": "The axis does not move with the Part."
        },
        {
            "type": "text",
            "data": "Example #1 : An Adjustable Shelf rotates on the X-axis (AX=-90) and then on the Y-axis (AY=-90). If the axis moved with the Part the rotation would have been (AX = -90), (AZ = -90)."
        },
        {
            "type": "text",
            "data": "Example #1 : An Adjustable Shelf rotates on the X-axis (AX=-90) and then on the Y-axis (AY=-90). If the axis moved with the Part the rotation would have been (AX = -90), (AZ = -90)."
        },
        {
            "type": "text",
            "data": "Example #2 : For an angled Shelf it would be nice to describe as (AX = -90, AY = -90, AX = 15) or (AX = -75, AY = -90). The correct rotation is (AY = -75, AZ = -90). Use the rotation tool in Solid when you are having difficulty."
        },
        {
            "type": "text",
            "data": "Example #2 : For an angled Shelf it would be nice to describe as (AX = -90, AY = -90, AX = 15) or (AX = -75, AY = -90). The correct rotation is (AY = -75, AZ = -90). Use the rotation tool in Solid when you are having difficulty."
        },
        {
            "type": "text",
            "data": "Building Orientation"
        },
        {
            "type": "text",
            "data": "Every Part is built the same way. A Rail, Stile, Left End, Right End, Door or Drawer Box Bottom. \n \n \n All Parts are built with the same orientation and then moved into place. \n \n \n In the diagram there is an example of a Rail and how the building orientation differs from the coordinates once it is placed on a Assembly."
        },
        {
            "type": "text",
            "data": "Every Part is built the same way. A Rail, Stile, Left End, Right End, Door or Drawer Box Bottom."
        },
        {
            "type": "text",
            "data": "Every Part is built the same way. A Rail, Stile, Left End, Right End, Door or Drawer Box Bottom."
        },
        {
            "type": "text",
            "data": "All Parts are built with the same orientation and then moved into place."
        },
        {
            "type": "text",
            "data": "All Parts are built with the same orientation and then moved into place."
        },
        {
            "type": "text",
            "data": "In the diagram there is an example of a Rail and how the building orientation differs from the coordinates once it is placed on a Assembly."
        },
        {
            "type": "text",
            "data": "In the diagram there is an example of a Rail and how the building orientation differs from the coordinates once it is placed on a Assembly."
        },
        {
            "type": "text",
            "data": "Object Tree"
        },
        {
            "type": "text",
            "data": "Concept"
        },
        {
            "type": "text",
            "data": "The Object Tree is just another way to view the data in Solid. \n \n \n The tree consists of objects, parameters, and values or equations for those parameters. \n \n \n A great way to view the structure of the Job and understand the inner workings of CABINET VISION. \n \n \n Select the  Object Tree   option from the ribbonbar ."
        },
        {
            "type": "text",
            "data": "The Object Tree is just another way to view the data in Solid."
        },
        {
            "type": "text",
            "data": "The Object Tree is just another way to view the data in Solid."
        },
        {
            "type": "text",
            "data": "The tree consists of objects, parameters, and values or equations for those parameters."
        },
        {
            "type": "text",
            "data": "The tree consists of objects, parameters, and values or equations for those parameters."
        },
        {
            "type": "text",
            "data": "A great way to view the structure of the Job and understand the inner workings of CABINET VISION."
        },
        {
            "type": "text",
            "data": "A great way to view the structure of the Job and understand the inner workings of CABINET VISION."
        },
        {
            "type": "text",
            "data": "Select the  Object Tree   option from the ribbonbar ."
        },
        {
            "type": "text",
            "data": "Select the  Object Tree   option from the ribbonbar ."
        },
        {
            "type": "image",
            "data": "image6122.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Coordinates Are In Relation To Their Parents"
        },
        {
            "type": "text",
            "data": "All X, Y, Z positions are in reference to their parents. \n \n \n A Rail on a Assembly has an X = 3, Y = 34, and Z = 24. These coordinates are in reference to its parent, the Assembly."
        },
        {
            "type": "text",
            "data": "All X, Y, Z positions are in reference to their parents."
        },
        {
            "type": "text",
            "data": "All X, Y, Z positions are in reference to their parents."
        },
        {
            "type": "text",
            "data": "A Rail on a Assembly has an X = 3, Y = 34, and Z = 24. These coordinates are in reference to its parent, the Assembly."
        },
        {
            "type": "text",
            "data": "A Rail on a Assembly has an X = 3, Y = 34, and Z = 24. These coordinates are in reference to its parent, the Assembly."
        },
        {
            "type": "text",
            "data": "Modifying Parameters"
        },
        {
            "type": "text",
            "data": "All parameter values can be modified. \n \n \n Virtually anything modified through the normal means in CABINET VISION can also be modified through the Object Tree."
        },
        {
            "type": "text",
            "data": "All parameter values can be modified."
        },
        {
            "type": "text",
            "data": "All parameter values can be modified."
        },
        {
            "type": "text",
            "data": "Virtually anything modified through the normal means in CABINET VISION can also be modified through the Object Tree."
        },
        {
            "type": "text",
            "data": "Virtually anything modified through the normal means in CABINET VISION can also be modified through the Object Tree."
        },
        {
            "type": "text",
            "data": "Example of Modifying Parameters in the Layout View"
        },
        {
            "type": "text",
            "data": "Click  on the individual Assembly that needs to be modified and the side bar contains values for the depth, width, and length of the Assembly. \n \n \n These are the DX, DY, and DZ values. \n \n \n Manually edit the parameters of the Assembly by clicking in the spaces and modifying the value."
        },
        {
            "type": "text",
            "data": "Click  on the individual Assembly that needs to be modified and the side bar contains values for the depth, width, and length of the Assembly."
        },
        {
            "type": "text",
            "data": "Click  on the individual Assembly that needs to be modified and the side bar contains values for the depth, width, and length of the Assembly."
        },
        {
            "type": "text",
            "data": "These are the DX, DY, and DZ values."
        },
        {
            "type": "text",
            "data": "These are the DX, DY, and DZ values."
        },
        {
            "type": "text",
            "data": "Manually edit the parameters of the Assembly by clicking in the spaces and modifying the value."
        },
        {
            "type": "text",
            "data": "Manually edit the parameters of the Assembly by clicking in the spaces and modifying the value."
        },
        {
            "type": "text",
            "data": "Example of Modifying Parameters in the Object Tree"
        },
        {
            "type": "text",
            "data": "Go to the layout view of CABINET VISION. \n \n \n Choose  Object Tree  from the ribbonbar. \n \n \n Open the tree (click on the plus signs) until you find the Part that needs to be modified. \n \n \n Click on Top Stretcher. Notice at the right all the parameters for the TS are available. \n \n \n Click on  DY  to edit the  length  of the Part. The edit button will become available after DY is highlighted. \n \n \n Click on Edit. \n \n \n Manually enter the modified value for DY."
        },
        {
            "type": "text",
            "data": "Go to the layout view of CABINET VISION."
        },
        {
            "type": "text",
            "data": "Go to the layout view of CABINET VISION."
        },
        {
            "type": "text",
            "data": "Choose  Object Tree  from the ribbonbar."
        },
        {
            "type": "text",
            "data": "Choose  Object Tree  from the ribbonbar."
        },
        {
            "type": "text",
            "data": "Open the tree (click on the plus signs) until you find the Part that needs to be modified."
        },
        {
            "type": "text",
            "data": "Open the tree (click on the plus signs) until you find the Part that needs to be modified."
        },
        {
            "type": "text",
            "data": "Click on Top Stretcher. Notice at the right all the parameters for the TS are available."
        },
        {
            "type": "text",
            "data": "Click on Top Stretcher. Notice at the right all the parameters for the TS are available."
        },
        {
            "type": "text",
            "data": "Click on  DY  to edit the  length  of the Part. The edit button will become available after DY is highlighted."
        },
        {
            "type": "text",
            "data": "Click on  DY  to edit the  length  of the Part. The edit button will become available after DY is highlighted."
        },
        {
            "type": "text",
            "data": "Click on Edit."
        },
        {
            "type": "text",
            "data": "Click on Edit."
        },
        {
            "type": "text",
            "data": "Manually enter the modified value for DY."
        },
        {
            "type": "text",
            "data": "Manually enter the modified value for DY."
        },
        {
            "type": "image",
            "data": "image6123.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Notice back in the Layout view that the length of the Top Stretcher (TS) has changed."
        },
        {
            "type": "text",
            "data": "Notice back in the Layout view that the length of the Top Stretcher (TS) has changed."
        },
        {
            "type": "text",
            "data": "Notice back in the Layout view that the length of the Top Stretcher (TS) has changed."
        },
        {
            "type": "text",
            "data": "Equations - From Simple to Advanced"
        },
        {
            "type": "text",
            "data": "Introduction"
        },
        {
            "type": "text",
            "data": "Equations can be used as parameter values. \n \n \n In a simple equation a directional  operator  or operators are found paired with key words. \n \n \n A key word is a term or header that is found in the Object Tree. \n \n \n Combining directional operators and key words allow you to access other parameters in the Object Tree."
        },
        {
            "type": "text",
            "data": "Equations can be used as parameter values."
        },
        {
            "type": "text",
            "data": "Equations can be used as parameter values."
        },
        {
            "type": "text",
            "data": "In a simple equation a directional  operator  or operators are found paired with key words."
        },
        {
            "type": "text",
            "data": "In a simple equation a directional  operator  or operators are found paired with key words."
        },
        {
            "type": "text",
            "data": "A key word is a term or header that is found in the Object Tree."
        },
        {
            "type": "text",
            "data": "A key word is a term or header that is found in the Object Tree."
        },
        {
            "type": "text",
            "data": "Combining directional operators and key words allow you to access other parameters in the Object Tree."
        },
        {
            "type": "text",
            "data": "Combining directional operators and key words allow you to access other parameters in the Object Tree."
        },
        {
            "type": "text",
            "data": "Levels"
        },
        {
            "type": "text",
            "data": "A level in the Object Tree is one grouping. Think of the tree being divided into quadrants. Each quadrant line that is crossed is another level of the tree."
        },
        {
            "type": "text",
            "data": "A level in the Object Tree is one grouping. Think of the tree being divided into quadrants. Each quadrant line that is crossed is another level of the tree."
        },
        {
            "type": "text",
            "data": "A level in the Object Tree is one grouping. Think of the tree being divided into quadrants. Each quadrant line that is crossed is another level of the tree."
        },
        {
            "type": "text",
            "data": "Directional Operators"
        },
        {
            "type": "text",
            "data": "Directional operators allow you to move around the tree. A colon (:) moves up the tree one level. A period (.) drops down a level in the tree."
        },
        {
            "type": "text",
            "data": "Directional operators allow you to move around the tree. A colon (:) moves up the tree one level. A period (.) drops down a level in the tree."
        },
        {
            "type": "text",
            "data": "Directional operators allow you to move around the tree. A colon (:) moves up the tree one level. A period (.) drops down a level in the tree."
        },
        {
            "type": "text",
            "data": "Key Words"
        },
        {
            "type": "text",
            "data": "Key words are special headings in the Object Tree that allow quick access to a position in the tree. See the example below:"
        },
        {
            "type": "text",
            "data": "Key words are special headings in the Object Tree that allow quick access to a position in the tree. See the example below:"
        },
        {
            "type": "text",
            "data": "Key words are special headings in the Object Tree that allow quick access to a position in the tree. See the example below:"
        },
        {
            "type": "image",
            "data": "image6124.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Exercise"
        },
        {
            "type": "text",
            "data": "In the following tree, visualize the divisions from left to right that would be in the tree. \n \n \n To reference a parent use the (:) operator. \n \n \n To reference a child use the (.) operator. \n \n \n No operator is required to reference a sibling. \n \n \n The letters in bold represent key words. \n \n \n When multiple types of the same Assembly are in the Object Tree there must be a special term used to define it. In the example Object Tree below there are three J's. Each J has its own parameters; however, each of them is named differently by their position. Use the @ operator to reference an object that has siblings of the same name. This is commonly seen when a Assembly has multiple Shelves."
        },
        {
            "type": "text",
            "data": "In the following tree, visualize the divisions from left to right that would be in the tree."
        },
        {
            "type": "text",
            "data": "In the following tree, visualize the divisions from left to right that would be in the tree."
        },
        {
            "type": "text",
            "data": "To reference a parent use the (:) operator."
        },
        {
            "type": "text",
            "data": "To reference a parent use the (:) operator."
        },
        {
            "type": "text",
            "data": "To reference a child use the (.) operator."
        },
        {
            "type": "text",
            "data": "To reference a child use the (.) operator."
        },
        {
            "type": "text",
            "data": "No operator is required to reference a sibling."
        },
        {
            "type": "text",
            "data": "No operator is required to reference a sibling."
        },
        {
            "type": "text",
            "data": "The letters in bold represent key words."
        },
        {
            "type": "text",
            "data": "The letters in bold represent key words."
        },
        {
            "type": "text",
            "data": "When multiple types of the same Assembly are in the Object Tree there must be a special term used to define it. In the example Object Tree below there are three J's. Each J has its own parameters; however, each of them is named differently by their position. Use the @ operator to reference an object that has siblings of the same name. This is commonly seen when a Assembly has multiple Shelves."
        },
        {
            "type": "text",
            "data": "When multiple types of the same Assembly are in the Object Tree there must be a special term used to define it. In the example Object Tree below there are three J's. Each J has its own parameters; however, each of them is named differently by their position. Use the @ operator to reference an object that has siblings of the same name. This is commonly seen when a Assembly has multiple Shelves."
        },
        {
            "type": "image",
            "data": "image174.jpg",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Creating Smart Parts"
        },
        {
            "type": "text",
            "data": "When a Part is added to a Assembly it is considered a dumb Part. You can adjust the Part to the correct size and position, but as the Assembly changes the Part doesn't. \n \n \n The problem we ran into with the new parameters of the TS was when the Assembly parameters were increased or decreased the TS did not have the smarts to adjust with the Assembly. \n \n \n The purpose in having equations is to expand the flexibility of Parts in CABINET VISION. By using an equation we can modify a parameter and reference it to the Assembly so in the case that the Assembly is modified the Part will be smart and justify itself also. \n \n \n If a smart Part already exists in CABINET VISION and its parameters are similar to the new Part, use the parameters in the equation instead of writing a brand new equation. \n \n \n Key words are used to automatically access a position in the tree. \n \n \n It is best not to enter in hard code numbers when dealing with equations. Giving parameters as boundaries versus actual numeric dimension will allow for that flexibility."
        },
        {
            "type": "text",
            "data": "When a Part is added to a Assembly it is considered a dumb Part. You can adjust the Part to the correct size and position, but as the Assembly changes the Part doesn't."
        },
        {
            "type": "text",
            "data": "When a Part is added to a Assembly it is considered a dumb Part. You can adjust the Part to the correct size and position, but as the Assembly changes the Part doesn't."
        },
        {
            "type": "text",
            "data": "The problem we ran into with the new parameters of the TS was when the Assembly parameters were increased or decreased the TS did not have the smarts to adjust with the Assembly."
        },
        {
            "type": "text",
            "data": "The problem we ran into with the new parameters of the TS was when the Assembly parameters were increased or decreased the TS did not have the smarts to adjust with the Assembly."
        },
        {
            "type": "text",
            "data": "The purpose in having equations is to expand the flexibility of Parts in CABINET VISION. By using an equation we can modify a parameter and reference it to the Assembly so in the case that the Assembly is modified the Part will be smart and justify itself also."
        },
        {
            "type": "text",
            "data": "The purpose in having equations is to expand the flexibility of Parts in CABINET VISION. By using an equation we can modify a parameter and reference it to the Assembly so in the case that the Assembly is modified the Part will be smart and justify itself also."
        },
        {
            "type": "text",
            "data": "If a smart Part already exists in CABINET VISION and its parameters are similar to the new Part, use the parameters in the equation instead of writing a brand new equation."
        },
        {
            "type": "text",
            "data": "If a smart Part already exists in CABINET VISION and its parameters are similar to the new Part, use the parameters in the equation instead of writing a brand new equation."
        },
        {
            "type": "text",
            "data": "Key words are used to automatically access a position in the tree."
        },
        {
            "type": "text",
            "data": "Key words are used to automatically access a position in the tree."
        },
        {
            "type": "text",
            "data": "It is best not to enter in hard code numbers when dealing with equations. Giving parameters as boundaries versus actual numeric dimension will allow for that flexibility."
        },
        {
            "type": "text",
            "data": "It is best not to enter in hard code numbers when dealing with equations. Giving parameters as boundaries versus actual numeric dimension will allow for that flexibility."
        },
        {
            "type": "text",
            "data": "Example: Adding a Smart Top Stretcher"
        },
        {
            "type": "text",
            "data": "Prepare The Assembly"
        },
        {
            "type": "text",
            "data": "Let us begin by preparing the Assembly. Place a Std Base on the Wall then edit it at the Assembly level. From the Section view select the option  Properties | Case . Then change the Top Type to No Top."
        },
        {
            "type": "text",
            "data": "Let us begin by preparing the Assembly. Place a Std Base on the Wall then edit it at the Assembly level. From the Section view select the option  Properties | Case . Then change the Top Type to No Top."
        },
        {
            "type": "text",
            "data": "Let us begin by preparing the Assembly. Place a Std Base on the Wall then edit it at the Assembly level. From the Section view select the option  Properties | Case . Then change the Top Type to No Top."
        },
        {
            "type": "image",
            "data": "image6125.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Select one of the Ortho Views   tabs."
        },
        {
            "type": "text",
            "data": "Select one of the Ortho Views   tabs."
        },
        {
            "type": "text",
            "data": "Select one of the Ortho Views   tabs."
        },
        {
            "type": "image",
            "data": "image181.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "image",
            "data": "image182.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "image",
            "data": "image183.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Add The Part"
        },
        {
            "type": "text",
            "data": "Select the sidebar button New Part."
        },
        {
            "type": "text",
            "data": "Select the sidebar button New Part."
        },
        {
            "type": "text",
            "data": "Select the sidebar button New Part."
        },
        {
            "type": "link",
            "data": {
                "text": "",
                "uuid": "c3165fbc-169e-4284-92eb-77efe33c4d52",
                "description": "[Placeholder for AI-generated description]"
            }
        },
        {
            "type": "image",
            "data": "image2857.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Select the Part type Top Stretcher. If you do not adjust the Material with the change button this will cause the Part's Material to be linked to the same Material as a Top Stretcher. The Top Stretcher's Material is defined in the Assembly's Material Schedule. When the Material Schedule for this Assembly changes - this Part's Material will change automatically. If you wanted to Lock this Part to a Particular Material, you could select the Material with the change button."
        },
        {
            "type": "text",
            "data": "Select the Part type Top Stretcher. If you do not adjust the Material with the change button this will cause the Part's Material to be linked to the same Material as a Top Stretcher. The Top Stretcher's Material is defined in the Assembly's Material Schedule. When the Material Schedule for this Assembly changes - this Part's Material will change automatically. If you wanted to Lock this Part to a Particular Material, you could select the Material with the change button."
        },
        {
            "type": "text",
            "data": "Select the Part type Top Stretcher. If you do not adjust the Material with the change button this will cause the Part's Material to be linked to the same Material as a Top Stretcher. The Top Stretcher's Material is defined in the Assembly's Material Schedule. When the Material Schedule for this Assembly changes - this Part's Material will change automatically. If you wanted to Lock this Part to a Particular Material, you could select the Material with the change button."
        },
        {
            "type": "image",
            "data": "image6126.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Select Next >. Then make the Length of the Top Stretcher 24\" and the width of the top stretcher 4\". This is just an initial size. We will be writing equations to change it."
        },
        {
            "type": "text",
            "data": "Select Next >. Then make the Length of the Top Stretcher 24\" and the width of the top stretcher 4\". This is just an initial size. We will be writing equations to change it."
        },
        {
            "type": "text",
            "data": "Select Next >. Then make the Length of the Top Stretcher 24\" and the width of the top stretcher 4\". This is just an initial size. We will be writing equations to change it."
        },
        {
            "type": "image",
            "data": "image6127.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Select Next >. Select a Part orientation of Top. This will rotate the Part to the proper orientation."
        },
        {
            "type": "text",
            "data": "Select Next >. Select a Part orientation of Top. This will rotate the Part to the proper orientation."
        },
        {
            "type": "text",
            "data": "Select Next >. Select a Part orientation of Top. This will rotate the Part to the proper orientation."
        },
        {
            "type": "image",
            "data": "image6128.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Select Next >. Then select the finish properties for the Part. Make the top and back face out of the interior finish and the edges from the exterior finish."
        },
        {
            "type": "text",
            "data": "Select Next >. Then select the finish properties for the Part. Make the top and back face out of the interior finish and the edges from the exterior finish."
        },
        {
            "type": "text",
            "data": "Select Next >. Then select the finish properties for the Part. Make the top and back face out of the interior finish and the edges from the exterior finish."
        },
        {
            "type": "image",
            "data": "image6130.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Select Finish."
        },
        {
            "type": "text",
            "data": "Select Finish."
        },
        {
            "type": "text",
            "data": "Select Finish."
        },
        {
            "type": "text",
            "data": "Write Equation For Parts Length"
        },
        {
            "type": "text",
            "data": "Now select the Part in each of the Ortho   Views. Take note that the Part's reference point, the blue-green dot when the Part is selected, is in the bottom, back, left corner of the Part. \n \n \n We will begin by writing equations to size the Part. Then we will concentrate on setting the Part's position. Let us make some assumptions about this Assembly. First, that the deck will always exist in the Assembly and second that the Top Stretcher's length will always be same as the deck length. With this assumption, you can change the deck/end construction from a butt joint to a dado, and the top stretcher will adjust right along with it. \n \n \n There is no need to make this assumption. The Part can be setup independently from the deck however making assumptions like this will make your equations more flexible in the end. \n \n \n Select the option  Object Tree  and expand the tree as shown."
        },
        {
            "type": "text",
            "data": "Now select the Part in each of the Ortho   Views. Take note that the Part's reference point, the blue-green dot when the Part is selected, is in the bottom, back, left corner of the Part."
        },
        {
            "type": "text",
            "data": "Now select the Part in each of the Ortho   Views. Take note that the Part's reference point, the blue-green dot when the Part is selected, is in the bottom, back, left corner of the Part."
        },
        {
            "type": "image",
            "data": "image181.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "image",
            "data": "image182.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "image",
            "data": "image183.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "We will begin by writing equations to size the Part. Then we will concentrate on setting the Part's position. Let us make some assumptions about this Assembly. First, that the deck will always exist in the Assembly and second that the Top Stretcher's length will always be same as the deck length. With this assumption, you can change the deck/end construction from a butt joint to a dado, and the top stretcher will adjust right along with it."
        },
        {
            "type": "text",
            "data": "We will begin by writing equations to size the Part. Then we will concentrate on setting the Part's position. Let us make some assumptions about this Assembly. First, that the deck will always exist in the Assembly and second that the Top Stretcher's length will always be same as the deck length. With this assumption, you can change the deck/end construction from a butt joint to a dado, and the top stretcher will adjust right along with it."
        },
        {
            "type": "text",
            "data": "There is no need to make this assumption. The Part can be setup independently from the deck however making assumptions like this will make your equations more flexible in the end."
        },
        {
            "type": "text",
            "data": "There is no need to make this assumption. The Part can be setup independently from the deck however making assumptions like this will make your equations more flexible in the end."
        },
        {
            "type": "text",
            "data": "Select the option  Object Tree  and expand the tree as shown."
        },
        {
            "type": "text",
            "data": "Select the option  Object Tree  and expand the tree as shown."
        },
        {
            "type": "image",
            "data": "image6131.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Highlight the DY parameter and select Edit. Change from a Value to an Equation."
        },
        {
            "type": "text",
            "data": "Highlight the DY parameter and select Edit. Change from a Value to an Equation."
        },
        {
            "type": "text",
            "data": "Highlight the DY parameter and select Edit. Change from a Value to an Equation."
        },
        {
            "type": "image",
            "data": "image6132.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "The computer will use the THEN (equation) when the value of the IF (condition) is not 0. By entering a 1 as the condition, we are telling the computer to always use this equation."
        },
        {
            "type": "text",
            "data": "The computer will use the THEN (equation) when the value of the IF (condition) is not 0. By entering a 1 as the condition, we are telling the computer to always use this equation."
        },
        {
            "type": "text",
            "data": "The computer will use the THEN (equation) when the value of the IF (condition) is not 0. By entering a 1 as the condition, we are telling the computer to always use this equation."
        },
        {
            "type": "text",
            "data": "For the equation we will enter  Case.DE.DY , this can be read as \"The length of the deck in the case\". This will ensure that the Top Stretcher will always have the same length as the deck. Now we can select the Test Equation button. Note the value. \n \n \n If there were a spelling error in the equation, the result would be ERROR. You would then need to correct the error and select Test again."
        },
        {
            "type": "text",
            "data": "For the equation we will enter  Case.DE.DY , this can be read as \"The length of the deck in the case\". This will ensure that the Top Stretcher will always have the same length as the deck. Now we can select the Test Equation button. Note the value."
        },
        {
            "type": "text",
            "data": "For the equation we will enter  Case.DE.DY , this can be read as \"The length of the deck in the case\". This will ensure that the Top Stretcher will always have the same length as the deck. Now we can select the Test Equation button. Note the value."
        },
        {
            "type": "text",
            "data": "If there were a spelling error in the equation, the result would be ERROR. You would then need to correct the error and select Test again."
        },
        {
            "type": "text",
            "data": "If there were a spelling error in the equation, the result would be ERROR. You would then need to correct the error and select Test again."
        },
        {
            "type": "image",
            "data": "image6133.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Now let's leave the Object Tree and look at our Part. Notice that as soon as the Object Tree is closed the Part snaps to the same length of the deck. \n \n \n As we modify the size of the Assembly we can see the Stretcher adjusting size with it. \n \n \n Notice that if we modify the scribe or height of the Assembly the Part is only \"Smart\" for the parameter that has an equation."
        },
        {
            "type": "text",
            "data": "Now let's leave the Object Tree and look at our Part. Notice that as soon as the Object Tree is closed the Part snaps to the same length of the deck."
        },
        {
            "type": "text",
            "data": "Now let's leave the Object Tree and look at our Part. Notice that as soon as the Object Tree is closed the Part snaps to the same length of the deck."
        },
        {
            "type": "text",
            "data": "As we modify the size of the Assembly we can see the Stretcher adjusting size with it."
        },
        {
            "type": "text",
            "data": "As we modify the size of the Assembly we can see the Stretcher adjusting size with it."
        },
        {
            "type": "text",
            "data": "Notice that if we modify the scribe or height of the Assembly the Part is only \"Smart\" for the parameter that has an equation."
        },
        {
            "type": "text",
            "data": "Notice that if we modify the scribe or height of the Assembly the Part is only \"Smart\" for the parameter that has an equation."
        },
        {
            "type": "text",
            "data": "Equation for Parts X Position"
        },
        {
            "type": "text",
            "data": "Return to the Object Tree and select the X parameter of the top stretcher. \n \n \n Once again we will reference the deck in our equation. We will set the Top Stretchers X position equal to the Decks X position. Enter an equation of Case.DE.X \u00a0this can be read as \"The X position of the deck in the case\"."
        },
        {
            "type": "text",
            "data": "Return to the Object Tree and select the X parameter of the top stretcher."
        },
        {
            "type": "text",
            "data": "Return to the Object Tree and select the X parameter of the top stretcher."
        },
        {
            "type": "text",
            "data": "Once again we will reference the deck in our equation. We will set the Top Stretchers X position equal to the Decks X position. Enter an equation of Case.DE.X \u00a0this can be read as \"The X position of the deck in the case\"."
        },
        {
            "type": "text",
            "data": "Once again we will reference the deck in our equation. We will set the Top Stretchers X position equal to the Decks X position. Enter an equation of Case.DE.X \u00a0this can be read as \"The X position of the deck in the case\"."
        },
        {
            "type": "image",
            "data": "image6134.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Equation for Parts Y Position"
        },
        {
            "type": "text",
            "data": "We will reference the Parts Y position of the Assembly. \n \n \n Select the Y parameter and add the equation: Cab.DY or :DY \n \n \n As we exit the Object Tree we see that the Stretcher is actually hovering above our Assembly."
        },
        {
            "type": "text",
            "data": "We will reference the Parts Y position of the Assembly."
        },
        {
            "type": "text",
            "data": "We will reference the Parts Y position of the Assembly."
        },
        {
            "type": "text",
            "data": "Select the Y parameter and add the equation: Cab.DY or :DY"
        },
        {
            "type": "text",
            "data": "Select the Y parameter and add the equation: Cab.DY or :DY"
        },
        {
            "type": "text",
            "data": "As we exit the Object Tree we see that the Stretcher is actually hovering above our Assembly."
        },
        {
            "type": "text",
            "data": "As we exit the Object Tree we see that the Stretcher is actually hovering above our Assembly."
        },
        {
            "type": "text",
            "data": "The origin of the Part is at the bottom of the Part. Therefore we must account for the Part thickness in our equation."
        },
        {
            "type": "image",
            "data": "Information.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Return the Y parameter and modify the equation to Cab.DY - DZ this can be translated as the height of the Assembly minus the Parts thickness."
        },
        {
            "type": "text",
            "data": "Return the Y parameter and modify the equation to Cab.DY - DZ this can be translated as the height of the Assembly minus the Parts thickness."
        },
        {
            "type": "text",
            "data": "Return the Y parameter and modify the equation to Cab.DY - DZ this can be translated as the height of the Assembly minus the Parts thickness."
        },
        {
            "type": "image",
            "data": "image6135.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Equation for Parts Z Position"
        },
        {
            "type": "text",
            "data": "The equation for the Z position of the stretcher will be very similar to the Y position. Taking into account that the reference point for the stretcher is in the back, left, bottom corner, we want the Z position of the stretcher to be: The depth of the Assembly, minus the stretcher width."
        },
        {
            "type": "text",
            "data": "The equation for the Z position of the stretcher will be very similar to the Y position. Taking into account that the reference point for the stretcher is in the back, left, bottom corner, we want the Z position of the stretcher to be: The depth of the Assembly, minus the stretcher width."
        },
        {
            "type": "text",
            "data": "The equation for the Z position of the stretcher will be very similar to the Y position. Taking into account that the reference point for the stretcher is in the back, left, bottom corner, we want the Z position of the stretcher to be: The depth of the Assembly, minus the stretcher width."
        },
        {
            "type": "text",
            "data": "In this equation we will reference an object in the Assembly tree that is not a Part or Assembly. We will be referencing the  Face  of the Assembly. \n \n \n The Face, Case, & Interior are special objects in the Assembly that serve as containers for other objects and Parts. \n \n \n The Face object contains the Assemblies Face Frame, Doors and Drawers. \n \n \n By writing our equation referencing the Face of the Assembly, rather than the Assembly itself, we automatically account for the face frame. \n \n \n Follow the same steps as before selecting the Z parameter of the stretcher. Once again, we will enter 1 for the IF condition. Now enter the following equation. Face.Z - DX. This can be read as the Z position of the face minus the width of the Top Stretcher. This will take into account that the point of origin is in the back of the stretcher."
        },
        {
            "type": "text",
            "data": "In this equation we will reference an object in the Assembly tree that is not a Part or Assembly. We will be referencing the  Face  of the Assembly."
        },
        {
            "type": "text",
            "data": "In this equation we will reference an object in the Assembly tree that is not a Part or Assembly. We will be referencing the  Face  of the Assembly."
        },
        {
            "type": "text",
            "data": "The Face, Case, & Interior are special objects in the Assembly that serve as containers for other objects and Parts."
        },
        {
            "type": "text",
            "data": "The Face, Case, & Interior are special objects in the Assembly that serve as containers for other objects and Parts."
        },
        {
            "type": "text",
            "data": "The Face object contains the Assemblies Face Frame, Doors and Drawers."
        },
        {
            "type": "text",
            "data": "The Face object contains the Assemblies Face Frame, Doors and Drawers."
        },
        {
            "type": "text",
            "data": "By writing our equation referencing the Face of the Assembly, rather than the Assembly itself, we automatically account for the face frame."
        },
        {
            "type": "text",
            "data": "By writing our equation referencing the Face of the Assembly, rather than the Assembly itself, we automatically account for the face frame."
        },
        {
            "type": "text",
            "data": "Follow the same steps as before selecting the Z parameter of the stretcher. Once again, we will enter 1 for the IF condition. Now enter the following equation. Face.Z - DX. This can be read as the Z position of the face minus the width of the Top Stretcher. This will take into account that the point of origin is in the back of the stretcher."
        },
        {
            "type": "text",
            "data": "Follow the same steps as before selecting the Z parameter of the stretcher. Once again, we will enter 1 for the IF condition. Now enter the following equation. Face.Z - DX. This can be read as the Z position of the face minus the width of the Top Stretcher. This will take into account that the point of origin is in the back of the stretcher."
        },
        {
            "type": "image",
            "data": "image6136.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Equation for Parts Width"
        },
        {
            "type": "text",
            "data": "Select the DX Parameter for the Top Stretcher. Select the Edit button. Select the Equation option then select Add."
        },
        {
            "type": "text",
            "data": "Select the DX Parameter for the Top Stretcher. Select the Edit button. Select the Equation option then select Add."
        },
        {
            "type": "text",
            "data": "Select the DX Parameter for the Top Stretcher. Select the Edit button. Select the Equation option then select Add."
        },
        {
            "type": "text",
            "data": "This time we will be entering something other then 1 for the IF condition.  By default, we would like this stretcher to be 4\" wide. However on occasion we might want it to be 3\" or 8\". Since the width may change, we are going to say it is equal to a  variable   TS_WIDTH . We can set a value for this variable so that the Part will adjust dynamically as the value for the variable changes. At the same time, we do not want the burden of having to add a custom parameter to each job since most of the time this Part will be 4\" wide. To accomplish this we are going to enter a parameter for the condition and a parameter for the equation. \n \n \n Enter TS_WIDTH for the condition and TS_WIDTH for the equation. The statement can be read as follows. If there is a parameter named TS_WIDTH, and the value of TS_WIDTH is not equal to 0, make the width of the Part the value of TS_WIDTH."
        },
        {
            "type": "text",
            "data": "This time we will be entering something other then 1 for the IF condition.  By default, we would like this stretcher to be 4\" wide. However on occasion we might want it to be 3\" or 8\". Since the width may change, we are going to say it is equal to a  variable   TS_WIDTH . We can set a value for this variable so that the Part will adjust dynamically as the value for the variable changes. At the same time, we do not want the burden of having to add a custom parameter to each job since most of the time this Part will be 4\" wide. To accomplish this we are going to enter a parameter for the condition and a parameter for the equation."
        },
        {
            "type": "text",
            "data": "This time we will be entering something other then 1 for the IF condition.  By default, we would like this stretcher to be 4\" wide. However on occasion we might want it to be 3\" or 8\". Since the width may change, we are going to say it is equal to a  variable   TS_WIDTH . We can set a value for this variable so that the Part will adjust dynamically as the value for the variable changes. At the same time, we do not want the burden of having to add a custom parameter to each job since most of the time this Part will be 4\" wide. To accomplish this we are going to enter a parameter for the condition and a parameter for the equation."
        },
        {
            "type": "text",
            "data": "Enter TS_WIDTH for the condition and TS_WIDTH for the equation. The statement can be read as follows. If there is a parameter named TS_WIDTH, and the value of TS_WIDTH is not equal to 0, make the width of the Part the value of TS_WIDTH."
        },
        {
            "type": "text",
            "data": "Enter TS_WIDTH for the condition and TS_WIDTH for the equation. The statement can be read as follows. If there is a parameter named TS_WIDTH, and the value of TS_WIDTH is not equal to 0, make the width of the Part the value of TS_WIDTH."
        },
        {
            "type": "text",
            "data": "If you select Test you will get an error in the test result Syntax Error. This is normal since at this time the parameter named TS_WIDTH does not exist in the tree."
        },
        {
            "type": "text",
            "data": "If you select Test you will get an error in the test result Syntax Error. This is normal since at this time the parameter named TS_WIDTH does not exist in the tree."
        },
        {
            "type": "text",
            "data": "If you select Test you will get an error in the test result Syntax Error. This is normal since at this time the parameter named TS_WIDTH does not exist in the tree."
        },
        {
            "type": "image",
            "data": "image6137.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Now we will set the default width for the stretcher to 4\". \n \n \n Select the Add button again. Then enter 1 for the condition and 4 for the equation. Then Select OK."
        },
        {
            "type": "text",
            "data": "Now we will set the default width for the stretcher to 4\"."
        },
        {
            "type": "text",
            "data": "Now we will set the default width for the stretcher to 4\"."
        },
        {
            "type": "text",
            "data": "Select the Add button again. Then enter 1 for the condition and 4 for the equation. Then Select OK."
        },
        {
            "type": "text",
            "data": "Select the Add button again. Then enter 1 for the condition and 4 for the equation. Then Select OK."
        },
        {
            "type": "image",
            "data": "image6138.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "The Parameter Edit Dialog Box should look something like the screen above. We have entered two equations for the width of this Part. One is based on a parameter. The other is a default value. \n \n \n When there are multiple equations for a Part, the equations are evaluated one by one until a condition is not equal to 0 . In the example above if the TS_WIDTH equation returns a false answer CABINET VISION immediately evaluates the next formula which is 4\"."
        },
        {
            "type": "text",
            "data": "The Parameter Edit Dialog Box should look something like the screen above. We have entered two equations for the width of this Part. One is based on a parameter. The other is a default value."
        },
        {
            "type": "text",
            "data": "The Parameter Edit Dialog Box should look something like the screen above. We have entered two equations for the width of this Part. One is based on a parameter. The other is a default value."
        },
        {
            "type": "text",
            "data": "When there are multiple equations for a Part, the equations are evaluated one by one until a condition is not equal to 0 . In the example above if the TS_WIDTH equation returns a false answer CABINET VISION immediately evaluates the next formula which is 4\"."
        },
        {
            "type": "text",
            "data": "When there are multiple equations for a Part, the equations are evaluated one by one until a condition is not equal to 0 . In the example above if the TS_WIDTH equation returns a false answer CABINET VISION immediately evaluates the next formula which is 4\"."
        },
        {
            "type": "text",
            "data": "Equation for Parts Thickness"
        },
        {
            "type": "text",
            "data": "No equation is needed for a Parts thickness.  The material it is made out of determines the Parts thickness. Therefore, the thickness of a Part is automatically smart. \n \n \n Our Part is completely defined. Let us exit the Object tree and view the Part. Go ahead and modify the size of the Assembly. You will see that the Part will move and stretch exactly as we have defined it."
        },
        {
            "type": "text",
            "data": "No equation is needed for a Parts thickness.  The material it is made out of determines the Parts thickness. Therefore, the thickness of a Part is automatically smart."
        },
        {
            "type": "text",
            "data": "No equation is needed for a Parts thickness.  The material it is made out of determines the Parts thickness. Therefore, the thickness of a Part is automatically smart."
        },
        {
            "type": "text",
            "data": "Our Part is completely defined. Let us exit the Object tree and view the Part. Go ahead and modify the size of the Assembly. You will see that the Part will move and stretch exactly as we have defined it."
        },
        {
            "type": "text",
            "data": "Our Part is completely defined. Let us exit the Object tree and view the Part. Go ahead and modify the size of the Assembly. You will see that the Part will move and stretch exactly as we have defined it."
        },
        {
            "type": "text",
            "data": "Adding Custom Parameters To A Job"
        },
        {
            "type": "text",
            "data": "Now we will demonstrate how to set parameters in a Job and have our Part adjust with those parameters. Return to the Layout (Room) Level and add a second Wall to the job. Then select the option  Object Tree . If you expand the Object Tree, you will see it contains all objects in this room. Select Wall 2 and select the Add button to add a parameter."
        },
        {
            "type": "text",
            "data": "Now we will demonstrate how to set parameters in a Job and have our Part adjust with those parameters. Return to the Layout (Room) Level and add a second Wall to the job. Then select the option  Object Tree . If you expand the Object Tree, you will see it contains all objects in this room. Select Wall 2 and select the Add button to add a parameter."
        },
        {
            "type": "text",
            "data": "Now we will demonstrate how to set parameters in a Job and have our Part adjust with those parameters. Return to the Layout (Room) Level and add a second Wall to the job. Then select the option  Object Tree . If you expand the Object Tree, you will see it contains all objects in this room. Select Wall 2 and select the Add button to add a parameter."
        },
        {
            "type": "image",
            "data": "image6139.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Change the Style to an Attribute. \n \n \n For the Name enter TS_WIDTH. \n \n \n For the Description enter Top Stretcher Width: \n \n \n Enter 2 for the parameters value. Then select OK."
        },
        {
            "type": "text",
            "data": "Change the Style to an Attribute."
        },
        {
            "type": "text",
            "data": "Change the Style to an Attribute."
        },
        {
            "type": "text",
            "data": "For the Name enter TS_WIDTH."
        },
        {
            "type": "text",
            "data": "For the Name enter TS_WIDTH."
        },
        {
            "type": "text",
            "data": "For the Description enter Top Stretcher Width:"
        },
        {
            "type": "text",
            "data": "For the Description enter Top Stretcher Width:"
        },
        {
            "type": "text",
            "data": "Enter 2 for the parameters value. Then select OK."
        },
        {
            "type": "text",
            "data": "Enter 2 for the parameters value. Then select OK."
        },
        {
            "type": "image",
            "data": "image6140.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Now we will repeat the procedure for the back face of Wall #2. Highlight the back face of Wall #2. Add a parameter named TS_WIDTH with a value of 8. Then  close  the Object Tree. \n \n \n Back at the Plan view of the Layout (Room) Level, copy the Assembly. Place one copy on the front face of Wall #2 and a second copy on the back face of Wall #2. Then select the 3-D perspective view and observe the various top stretcher widths."
        },
        {
            "type": "text",
            "data": "Now we will repeat the procedure for the back face of Wall #2. Highlight the back face of Wall #2. Add a parameter named TS_WIDTH with a value of 8. Then  close  the Object Tree."
        },
        {
            "type": "text",
            "data": "Now we will repeat the procedure for the back face of Wall #2. Highlight the back face of Wall #2. Add a parameter named TS_WIDTH with a value of 8. Then  close  the Object Tree."
        },
        {
            "type": "text",
            "data": "Back at the Plan view of the Layout (Room) Level, copy the Assembly. Place one copy on the front face of Wall #2 and a second copy on the back face of Wall #2. Then select the 3-D perspective view and observe the various top stretcher widths."
        },
        {
            "type": "text",
            "data": "Back at the Plan view of the Layout (Room) Level, copy the Assembly. Place one copy on the front face of Wall #2 and a second copy on the back face of Wall #2. Then select the 3-D perspective view and observe the various top stretcher widths."
        },
        {
            "type": "text",
            "data": "How Solid Searches for Parameters"
        },
        {
            "type": "text",
            "data": "When a parameter is found in an equation CABINET VISION looks to see if the parameter exists for that object. If not it looks to see if the parameter exists in the parent of that object and so on until it gets to the top of the tree. All three Assemblies have the same equations for the top stretcher yet all three top stretchers are different sizes. \n \n \n The Assembly on Wall #1 looks to find the parameter TS_WIDTH. It does not exist at the Part level, Assembly level, Wall face level, Wall level, or room level. Therefore, it goes to the next equations IF 1 THEN 4 and the stretcher width is set to 4\" wide. \n \n \n The Assembly on Wall #2's face looks to find the parameter TS_WIDTH. It does not exist at the Part level, Assembly level, Wall face level, but it does exist at the Wall level where the TS_WIDTH = 2. Therefore, the stretcher becomes 2\" wide. \n \n \n The Assembly on Wall #2's back looks to find the parameter TS_WIDTH. It does not exist at the Part level, Assembly level, but it does exist at the Wall face level where the TS_WIDTH = 8. Therefore, the stretcher becomes 8\" wide."
        },
        {
            "type": "text",
            "data": "When a parameter is found in an equation CABINET VISION looks to see if the parameter exists for that object. If not it looks to see if the parameter exists in the parent of that object and so on until it gets to the top of the tree. All three Assemblies have the same equations for the top stretcher yet all three top stretchers are different sizes."
        },
        {
            "type": "text",
            "data": "When a parameter is found in an equation CABINET VISION looks to see if the parameter exists for that object. If not it looks to see if the parameter exists in the parent of that object and so on until it gets to the top of the tree. All three Assemblies have the same equations for the top stretcher yet all three top stretchers are different sizes."
        },
        {
            "type": "text",
            "data": "The Assembly on Wall #1 looks to find the parameter TS_WIDTH. It does not exist at the Part level, Assembly level, Wall face level, Wall level, or room level. Therefore, it goes to the next equations IF 1 THEN 4 and the stretcher width is set to 4\" wide."
        },
        {
            "type": "text",
            "data": "The Assembly on Wall #1 looks to find the parameter TS_WIDTH. It does not exist at the Part level, Assembly level, Wall face level, Wall level, or room level. Therefore, it goes to the next equations IF 1 THEN 4 and the stretcher width is set to 4\" wide."
        },
        {
            "type": "text",
            "data": "The Assembly on Wall #2's face looks to find the parameter TS_WIDTH. It does not exist at the Part level, Assembly level, Wall face level, but it does exist at the Wall level where the TS_WIDTH = 2. Therefore, the stretcher becomes 2\" wide."
        },
        {
            "type": "text",
            "data": "The Assembly on Wall #2's face looks to find the parameter TS_WIDTH. It does not exist at the Part level, Assembly level, Wall face level, but it does exist at the Wall level where the TS_WIDTH = 2. Therefore, the stretcher becomes 2\" wide."
        },
        {
            "type": "text",
            "data": "The Assembly on Wall #2's back looks to find the parameter TS_WIDTH. It does not exist at the Part level, Assembly level, but it does exist at the Wall face level where the TS_WIDTH = 8. Therefore, the stretcher becomes 8\" wide."
        },
        {
            "type": "text",
            "data": "The Assembly on Wall #2's back looks to find the parameter TS_WIDTH. It does not exist at the Part level, Assembly level, but it does exist at the Wall face level where the TS_WIDTH = 8. Therefore, the stretcher becomes 8\" wide."
        },
        {
            "type": "text",
            "data": "If we continued to search up the tree we would find the TS_WIDTH = 2 at the Wall level, however once the 1st TS_WIDTH is found Solid stops looking."
        },
        {
            "type": "image",
            "data": "Information.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "This gives you tremendous flexibility with your equations. You can set a value at the room level, but you can \"override\" that value at the Wall, Wall face, Assembly, Part, or any level in the tree and your Parts can re-size dynamically. To further test this, move the Assembly on Wall #1 to Wall #2 and see how the top stretcher changes size."
        },
        {
            "type": "text",
            "data": "This gives you tremendous flexibility with your equations. You can set a value at the room level, but you can \"override\" that value at the Wall, Wall face, Assembly, Part, or any level in the tree and your Parts can re-size dynamically. To further test this, move the Assembly on Wall #1 to Wall #2 and see how the top stretcher changes size."
        },
        {
            "type": "text",
            "data": "This gives you tremendous flexibility with your equations. You can set a value at the room level, but you can \"override\" that value at the Wall, Wall face, Assembly, Part, or any level in the tree and your Parts can re-size dynamically. To further test this, move the Assembly on Wall #1 to Wall #2 and see how the top stretcher changes size."
        },
        {
            "type": "text",
            "data": "Parameters in CABINET VISION"
        },
        {
            "type": "text",
            "data": "See Parameters and Functions"
        },
        {
            "type": "link",
            "data": {
                "text": "See Parameters and Functions",
                "uuid": "64910180-651d-4a1a-a6a9-ff64f36e7ea4",
                "description": "[Placeholder for AI-generated description]"
            }
        },
        {
            "type": "text",
            "data": "Where Are Parameters Stored"
        },
        {
            "type": "text",
            "data": "All parameters in CABINET VISION are stored as high up in the tree as possible. \n \n \n This method allows for one parameter to effect many objects. \n \n \n It also allows a convenient way to store an override to an object. \n \n \n This method uses the least amount of memory. It leaves a small footprint. If a job has 20 Assemblies in a single room. The information for the top rail would be stored 20 times for that same Part at the Part level. This would increase the size of the jobs exponentially. \n \n \n The Top Rail is found under the Parts list of a Assembly in the Object Tree. You might assume that the parameters or information about the Part is stored at the Part level. Actually, most of its parameters are stored much higher in the tree. Only the basic 9 parameters are stored for each Part. \n \n \n General info is stored at the Job Level. When starting a new job in CABINET VISION there are questions or parameters that need to be designated. These are the parameters that will be stored in the Job Level."
        },
        {
            "type": "text",
            "data": "All parameters in CABINET VISION are stored as high up in the tree as possible."
        },
        {
            "type": "text",
            "data": "All parameters in CABINET VISION are stored as high up in the tree as possible."
        },
        {
            "type": "text",
            "data": "This method allows for one parameter to effect many objects."
        },
        {
            "type": "text",
            "data": "This method allows for one parameter to effect many objects."
        },
        {
            "type": "text",
            "data": "It also allows a convenient way to store an override to an object."
        },
        {
            "type": "text",
            "data": "It also allows a convenient way to store an override to an object."
        },
        {
            "type": "text",
            "data": "This method uses the least amount of memory. It leaves a small footprint. If a job has 20 Assemblies in a single room. The information for the top rail would be stored 20 times for that same Part at the Part level. This would increase the size of the jobs exponentially."
        },
        {
            "type": "text",
            "data": "This method uses the least amount of memory. It leaves a small footprint. If a job has 20 Assemblies in a single room. The information for the top rail would be stored 20 times for that same Part at the Part level. This would increase the size of the jobs exponentially."
        },
        {
            "type": "text",
            "data": "The Top Rail is found under the Parts list of a Assembly in the Object Tree. You might assume that the parameters or information about the Part is stored at the Part level. Actually, most of its parameters are stored much higher in the tree. Only the basic 9 parameters are stored for each Part."
        },
        {
            "type": "text",
            "data": "The Top Rail is found under the Parts list of a Assembly in the Object Tree. You might assume that the parameters or information about the Part is stored at the Part level. Actually, most of its parameters are stored much higher in the tree. Only the basic 9 parameters are stored for each Part."
        },
        {
            "type": "text",
            "data": "General info is stored at the Job Level. When starting a new job in CABINET VISION there are questions or parameters that need to be designated. These are the parameters that will be stored in the Job Level."
        },
        {
            "type": "text",
            "data": "General info is stored at the Job Level. When starting a new job in CABINET VISION there are questions or parameters that need to be designated. These are the parameters that will be stored in the Job Level."
        },
        {
            "type": "text",
            "data": "CABINET VISION\u00a0has four places to make overrides without using the Object Tree: \n \n \n \n \n Job Level \n \n \n Room Level \n \n \n Assembly Level \n \n \n Part Level"
        },
        {
            "type": "text",
            "data": "CABINET VISION\u00a0has four places to make overrides without using the Object Tree:"
        },
        {
            "type": "text",
            "data": "CABINET VISION\u00a0has four places to make overrides without using the Object Tree:"
        },
        {
            "type": "text",
            "data": "Job Level \n \n \n Room Level \n \n \n Assembly Level \n \n \n Part Level"
        },
        {
            "type": "text",
            "data": "Job Level \n \n \n Room Level \n \n \n Assembly Level \n \n \n Part Level"
        },
        {
            "type": "text",
            "data": "Job Level"
        },
        {
            "type": "text",
            "data": "Job Level"
        },
        {
            "type": "text",
            "data": "Room Level"
        },
        {
            "type": "text",
            "data": "Room Level"
        },
        {
            "type": "text",
            "data": "Assembly Level"
        },
        {
            "type": "text",
            "data": "Assembly Level"
        },
        {
            "type": "text",
            "data": "Part Level"
        },
        {
            "type": "text",
            "data": "Part Level"
        },
        {
            "type": "text",
            "data": "Only minimal information is stored for each object. \n \n \n Every piece of information that a Part cannot find at its own home will travel up the tree until it finds the answer it is looking for. \n \n \n If a Part cannot find the information it is looking for it will return result of 0 for that parameter."
        },
        {
            "type": "text",
            "data": "Only minimal information is stored for each object."
        },
        {
            "type": "text",
            "data": "Only minimal information is stored for each object."
        },
        {
            "type": "text",
            "data": "Every piece of information that a Part cannot find at its own home will travel up the tree until it finds the answer it is looking for."
        },
        {
            "type": "text",
            "data": "Every piece of information that a Part cannot find at its own home will travel up the tree until it finds the answer it is looking for."
        },
        {
            "type": "text",
            "data": "If a Part cannot find the information it is looking for it will return result of 0 for that parameter."
        },
        {
            "type": "text",
            "data": "If a Part cannot find the information it is looking for it will return result of 0 for that parameter."
        },
        {
            "type": "text",
            "data": "Demonstrate an Equation Based On Toe Height"
        },
        {
            "type": "text",
            "data": "In this example we will write some sample equations based on the Toe Height for the Assembly. We will use 2 advanced methods to do so:"
        },
        {
            "type": "text",
            "data": "In this example we will write some sample equations based on the Toe Height for the Assembly. We will use 2 advanced methods to do so:"
        },
        {
            "type": "text",
            "data": "In this example we will write some sample equations based on the Toe Height for the Assembly. We will use 2 advanced methods to do so:"
        },
        {
            "type": "text",
            "data": "First we will access a value from the Construction Method. \n \n \n Next we will reference a parameter in CABINET VISION."
        },
        {
            "type": "text",
            "data": "First we will access a value from the Construction Method. \n \n \n Next we will reference a parameter in CABINET VISION."
        },
        {
            "type": "text",
            "data": "First we will access a value from the Construction Method. \n \n \n Next we will reference a parameter in CABINET VISION."
        },
        {
            "type": "text",
            "data": "First we will access a value from the Construction Method."
        },
        {
            "type": "text",
            "data": "First we will access a value from the Construction Method."
        },
        {
            "type": "text",
            "data": "Next we will reference a parameter in CABINET VISION."
        },
        {
            "type": "text",
            "data": "Next we will reference a parameter in CABINET VISION."
        },
        {
            "type": "text",
            "data": "Lets continue to modify the Top Stretcher & write a new equation for the width of the Part. \n \n \n We will make the width of the Top Stretcher equal to the Toe Kick Height. \n \n \n Select the DX parameter of the Top Stretcher and enter the equation IF  1  THEN  TOEH."
        },
        {
            "type": "text",
            "data": "Lets continue to modify the Top Stretcher & write a new equation for the width of the Part."
        },
        {
            "type": "text",
            "data": "Lets continue to modify the Top Stretcher & write a new equation for the width of the Part."
        },
        {
            "type": "text",
            "data": "We will make the width of the Top Stretcher equal to the Toe Kick Height."
        },
        {
            "type": "text",
            "data": "We will make the width of the Top Stretcher equal to the Toe Kick Height."
        },
        {
            "type": "text",
            "data": "Select the DX parameter of the Top Stretcher and enter the equation IF  1  THEN  TOEH."
        },
        {
            "type": "text",
            "data": "Select the DX parameter of the Top Stretcher and enter the equation IF  1  THEN  TOEH."
        },
        {
            "type": "image",
            "data": "image6141.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "When we exit the Object Tree we can see that the stretcher has disappeared. Actually TOEH was not found in the tree so the result returned 0 making the Width = 0. \n \n \n Modify the Toe Height of the Assembly from the section view and the Stretcher will reappear and equal the Toe Height. \n \n \n Like many parameters TOEH is only present if there is an override on the Assembly. Normally the Assembly references the Toe Height based on a standard in the current construction method. \n \n \n Launch the Assembly Manager. Start the wizard for the Toe Kick and look at the title Toe Kick Height: [Standard #238]."
        },
        {
            "type": "text",
            "data": "When we exit the Object Tree we can see that the stretcher has disappeared. Actually TOEH was not found in the tree so the result returned 0 making the Width = 0."
        },
        {
            "type": "text",
            "data": "When we exit the Object Tree we can see that the stretcher has disappeared. Actually TOEH was not found in the tree so the result returned 0 making the Width = 0."
        },
        {
            "type": "text",
            "data": "Modify the Toe Height of the Assembly from the section view and the Stretcher will reappear and equal the Toe Height."
        },
        {
            "type": "text",
            "data": "Modify the Toe Height of the Assembly from the section view and the Stretcher will reappear and equal the Toe Height."
        },
        {
            "type": "text",
            "data": "Like many parameters TOEH is only present if there is an override on the Assembly. Normally the Assembly references the Toe Height based on a standard in the current construction method."
        },
        {
            "type": "text",
            "data": "Like many parameters TOEH is only present if there is an override on the Assembly. Normally the Assembly references the Toe Height based on a standard in the current construction method."
        },
        {
            "type": "text",
            "data": "Launch the Assembly Manager. Start the wizard for the Toe Kick and look at the title Toe Kick Height: [Standard #238]."
        },
        {
            "type": "text",
            "data": "Launch the Assembly Manager. Start the wizard for the Toe Kick and look at the title Toe Kick Height: [Standard #238]."
        },
        {
            "type": "image",
            "data": "image1311.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Note the standard number: #238. We can reference this value in our equation. \n \n \n Return to the Object Tree and add the following equation to the DX parameter of the Top Stretcher. If 1 Then _CV:238. This formula can be read as Make the width of the stretcher equal to the Value entered for Construction Method\u00a0Standard #238 (Toe Kick Height)."
        },
        {
            "type": "text",
            "data": "Note the standard number: #238. We can reference this value in our equation."
        },
        {
            "type": "text",
            "data": "Note the standard number: #238. We can reference this value in our equation."
        },
        {
            "type": "text",
            "data": "Return to the Object Tree and add the following equation to the DX parameter of the Top Stretcher. If 1 Then _CV:238. This formula can be read as Make the width of the stretcher equal to the Value entered for Construction Method\u00a0Standard #238 (Toe Kick Height)."
        },
        {
            "type": "text",
            "data": "Return to the Object Tree and add the following equation to the DX parameter of the Top Stretcher. If 1 Then _CV:238. This formula can be read as Make the width of the stretcher equal to the Value entered for Construction Method\u00a0Standard #238 (Toe Kick Height)."
        },
        {
            "type": "text",
            "data": "Common Functions"
        },
        {
            "type": "text",
            "data": "See Functions & Operators"
        },
        {
            "type": "link",
            "data": {
                "text": "See Functions & Operators",
                "uuid": "64910180-651d-4a1a-a6a9-ff64f36e7ea4",
                "description": "[Placeholder for AI-generated description]"
            }
        },
        {
            "type": "text",
            "data": "User Created Standards"
        },
        {
            "type": "text",
            "data": "Purpose"
        },
        {
            "type": "text",
            "data": "The purpose of User Created Standards is to apply logic that is not controlled through the Assembly Wizard or any other Part of the program. \n \n \n This allows you to create smart Parts that are specific to your needs. \n \n \n You can create these smart Parts by one of the following methods: \n \n \n \n \n Add a brand new object \n \n \n Modify an object \n \n \n Delete  an Object"
        },
        {
            "type": "text",
            "data": "The purpose of User Created Standards is to apply logic that is not controlled through the Assembly Wizard or any other Part of the program."
        },
        {
            "type": "text",
            "data": "The purpose of User Created Standards is to apply logic that is not controlled through the Assembly Wizard or any other Part of the program."
        },
        {
            "type": "text",
            "data": "This allows you to create smart Parts that are specific to your needs."
        },
        {
            "type": "text",
            "data": "This allows you to create smart Parts that are specific to your needs."
        },
        {
            "type": "text",
            "data": "You can create these smart Parts by one of the following methods:"
        },
        {
            "type": "text",
            "data": "You can create these smart Parts by one of the following methods:"
        },
        {
            "type": "text",
            "data": "Add a brand new object \n \n \n Modify an object \n \n \n Delete  an Object"
        },
        {
            "type": "text",
            "data": "Add a brand new object \n \n \n Modify an object \n \n \n Delete  an Object"
        },
        {
            "type": "text",
            "data": "Add a brand new object"
        },
        {
            "type": "text",
            "data": "Add a brand new object"
        },
        {
            "type": "text",
            "data": "Modify an object"
        },
        {
            "type": "text",
            "data": "Modify an object"
        },
        {
            "type": "text",
            "data": "Delete  an Object"
        },
        {
            "type": "text",
            "data": "Delete  an Object"
        },
        {
            "type": "text",
            "data": "The power of UCS lies behind the interface-created macro, which can be put into its own language  similar  to Microsoft Visual Basic\u2122."
        },
        {
            "type": "text",
            "data": "The power of UCS lies behind the interface-created macro, which can be put into its own language  similar  to Microsoft Visual Basic\u2122."
        },
        {
            "type": "text",
            "data": "The power of UCS lies behind the interface-created macro, which can be put into its own language  similar  to Microsoft Visual Basic\u2122."
        },
        {
            "type": "text",
            "data": "A Global View of UCS's"
        },
        {
            "type": "text",
            "data": "UCS's provide a way to apply  global changes  to a job. \n \n \n Earlier an equation was written for a single Part in a Assembly. UCS's allow the same Part to have the same values for all Assemblies. \n \n \n UCS's also allow Parts to have the same value for similar Assemblies. Using a filter (Filters will be addressed later)."
        },
        {
            "type": "text",
            "data": "UCS's provide a way to apply  global changes  to a job."
        },
        {
            "type": "text",
            "data": "UCS's provide a way to apply  global changes  to a job."
        },
        {
            "type": "text",
            "data": "Earlier an equation was written for a single Part in a Assembly. UCS's allow the same Part to have the same values for all Assemblies."
        },
        {
            "type": "text",
            "data": "Earlier an equation was written for a single Part in a Assembly. UCS's allow the same Part to have the same values for all Assemblies."
        },
        {
            "type": "text",
            "data": "UCS's also allow Parts to have the same value for similar Assemblies. Using a filter (Filters will be addressed later)."
        },
        {
            "type": "text",
            "data": "UCS's also allow Parts to have the same value for similar Assemblies. Using a filter (Filters will be addressed later)."
        },
        {
            "type": "text",
            "data": "Accessing User Created Standards"
        },
        {
            "type": "text",
            "data": "There are two ways to gain access to User Created Standards. The first way is from the  splash screen  of Solid. The other way is from inside a job."
        },
        {
            "type": "text",
            "data": "There are two ways to gain access to User Created Standards. The first way is from the  splash screen  of Solid. The other way is from inside a job."
        },
        {
            "type": "text",
            "data": "There are two ways to gain access to User Created Standards. The first way is from the  splash screen  of Solid. The other way is from inside a job."
        },
        {
            "type": "text",
            "data": "Either way you access User Created Standards, the standards will be for all jobs."
        },
        {
            "type": "text",
            "data": "Either way you access User Created Standards, the standards will be for all jobs."
        },
        {
            "type": "text",
            "data": "Either way you access User Created Standards, the standards will be for all jobs."
        },
        {
            "type": "text",
            "data": "To access UCS's, start CABINET VISION. At the System Level, (the opening screen) select  Utilities | User Created Standards ."
        },
        {
            "type": "text",
            "data": "To access UCS's, start CABINET VISION. At the System Level, (the opening screen) select  Utilities | User Created Standards ."
        },
        {
            "type": "text",
            "data": "To access UCS's, start CABINET VISION. At the System Level, (the opening screen) select  Utilities | User Created Standards ."
        },
        {
            "type": "text",
            "data": "UCS's may be edited from within a job. To do this, double click on the Assembly. You can also  right click  and select Edit from the drop-down menu. Select any one of the   three orthographic views. Again, select  Utilities | User Created Standards . \u00a0You will now see the UCS screen."
        },
        {
            "type": "text",
            "data": "UCS's may be edited from within a job. To do this, double click on the Assembly. You can also  right click  and select Edit from the drop-down menu. Select any one of the   three orthographic views. Again, select  Utilities | User Created Standards . \u00a0You will now see the UCS screen."
        },
        {
            "type": "text",
            "data": "UCS's may be edited from within a job. To do this, double click on the Assembly. You can also  right click  and select Edit from the drop-down menu. Select any one of the   three orthographic views. Again, select  Utilities | User Created Standards . \u00a0You will now see the UCS screen."
        },
        {
            "type": "image",
            "data": "image181.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "image",
            "data": "image182.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "image",
            "data": "image183.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "The Screen Layout"
        },
        {
            "type": "image",
            "data": "image1312.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "To add a User Created Standard, select the New option in the ribbonbar."
        },
        {
            "type": "text",
            "data": "To add a User Created Standard, select the New option in the ribbonbar."
        },
        {
            "type": "text",
            "data": "To add a User Created Standard, select the New option in the ribbonbar."
        },
        {
            "type": "image",
            "data": "image1313.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "General Tab"
        },
        {
            "type": "text",
            "data": "Notice, at the top of the User Created Standards window, that there are category tabs. These tabs are the steps that the  titlebar  is referring to. There are more tabs to the right that can be viewed by selecting the scroll arrow at the right of the screen. \n \n \n The first thing you're going to want to do is to give the UCS a name."
        },
        {
            "type": "text",
            "data": "Notice, at the top of the User Created Standards window, that there are category tabs. These tabs are the steps that the  titlebar  is referring to. There are more tabs to the right that can be viewed by selecting the scroll arrow at the right of the screen."
        },
        {
            "type": "text",
            "data": "Notice, at the top of the User Created Standards window, that there are category tabs. These tabs are the steps that the  titlebar  is referring to. There are more tabs to the right that can be viewed by selecting the scroll arrow at the right of the screen."
        },
        {
            "type": "text",
            "data": "The first thing you're going to want to do is to give the UCS a name."
        },
        {
            "type": "text",
            "data": "The first thing you're going to want to do is to give the UCS a name."
        },
        {
            "type": "image",
            "data": "image1314.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "By default, the standard type is Add(Link) A Part. Select the type appropriate for the UCS you are writing. I am choosing to modify a Part."
        },
        {
            "type": "text",
            "data": "By default, the standard type is Add(Link) A Part. Select the type appropriate for the UCS you are writing. I am choosing to modify a Part."
        },
        {
            "type": "text",
            "data": "By default, the standard type is Add(Link) A Part. Select the type appropriate for the UCS you are writing. I am choosing to modify a Part."
        },
        {
            "type": "text",
            "data": "Link to Tab"
        },
        {
            "type": "text",
            "data": "If a tab is not appropriate for the standard you are creating, you will get a message similar to the one shown. It may be a different tab with a slightly different message."
        },
        {
            "type": "text",
            "data": "If a tab is not appropriate for the standard you are creating, you will get a message similar to the one shown. It may be a different tab with a slightly different message."
        },
        {
            "type": "text",
            "data": "If a tab is not appropriate for the standard you are creating, you will get a message similar to the one shown. It may be a different tab with a slightly different message."
        },
        {
            "type": "image",
            "data": "image1315.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "The  Link To  tab will allow you to add or link an item to a specific Assembly, Part, or Operation. Depending on which one you select, your window to the right will display different selections. Review the groups and their associated selections and pick the most appropriate selection for your User Created Standard."
        },
        {
            "type": "text",
            "data": "The  Link To  tab will allow you to add or link an item to a specific Assembly, Part, or Operation. Depending on which one you select, your window to the right will display different selections. Review the groups and their associated selections and pick the most appropriate selection for your User Created Standard."
        },
        {
            "type": "text",
            "data": "The  Link To  tab will allow you to add or link an item to a specific Assembly, Part, or Operation. Depending on which one you select, your window to the right will display different selections. Review the groups and their associated selections and pick the most appropriate selection for your User Created Standard."
        },
        {
            "type": "image",
            "data": "image1316.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Assembly Class Tab"
        },
        {
            "type": "text",
            "data": "This tab is the beginning of your ability to limit (filter) this User Created Standard to apply only in certain cases. Should you not want to limit to a specific Assembly class, select nothing here. If you need the standard to apply only on a certain class of Assembly, or object type, check only those for which you need the UCS to apply."
        },
        {
            "type": "text",
            "data": "This tab is the beginning of your ability to limit (filter) this User Created Standard to apply only in certain cases. Should you not want to limit to a specific Assembly class, select nothing here. If you need the standard to apply only on a certain class of Assembly, or object type, check only those for which you need the UCS to apply."
        },
        {
            "type": "text",
            "data": "This tab is the beginning of your ability to limit (filter) this User Created Standard to apply only in certain cases. Should you not want to limit to a specific Assembly class, select nothing here. If you need the standard to apply only on a certain class of Assembly, or object type, check only those for which you need the UCS to apply."
        },
        {
            "type": "image",
            "data": "image1317.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Assembly Properties Tab"
        },
        {
            "type": "text",
            "data": "The Assembly Properties Tab will allow you the ability to establish which Assemblies will be available for a parameter to be effective. Currently, the default is all Assemblies, with no parameters."
        },
        {
            "type": "text",
            "data": "The Assembly Properties Tab will allow you the ability to establish which Assemblies will be available for a parameter to be effective. Currently, the default is all Assemblies, with no parameters."
        },
        {
            "type": "text",
            "data": "The Assembly Properties Tab will allow you the ability to establish which Assemblies will be available for a parameter to be effective. Currently, the default is all Assemblies, with no parameters."
        },
        {
            "type": "image",
            "data": "image1318.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Should you want to limit to a single Assembly, place the name in the field to the right of Assembly Name. \n \n \n Instead of limiting the standard to a single Assembly, maybe you want it to include multiple Assemblies in a grouping. Therefore you can use wild cards. The acceptable wild cards are the asterisk (*), or the question mark (?). \n \n \n As an example, std* will include any Assembly name that starts with std, regardless of any amount of characters after the std. \n \n \n The question mark replaces characters in a name. For example, having a Assembly name such as B?? will include all Assemblies with 2 characters after the letter B. B12, B48, etc. will be included in the grouping. \n \n \n Parameters will allow the User Created Standard to take affect only if the parameters that are checked meet the criteria based on the operation selected and the value that has been placed in the value field. Again, we are continuing with additional filters for the User Created Standards. \n \n \n An example of this would be setting up the depth of a Assembly to be greater than 12 inches before this standard would take affect."
        },
        {
            "type": "text",
            "data": "Should you want to limit to a single Assembly, place the name in the field to the right of Assembly Name."
        },
        {
            "type": "text",
            "data": "Should you want to limit to a single Assembly, place the name in the field to the right of Assembly Name."
        },
        {
            "type": "text",
            "data": "Instead of limiting the standard to a single Assembly, maybe you want it to include multiple Assemblies in a grouping. Therefore you can use wild cards. The acceptable wild cards are the asterisk (*), or the question mark (?)."
        },
        {
            "type": "text",
            "data": "Instead of limiting the standard to a single Assembly, maybe you want it to include multiple Assemblies in a grouping. Therefore you can use wild cards. The acceptable wild cards are the asterisk (*), or the question mark (?)."
        },
        {
            "type": "text",
            "data": "As an example, std* will include any Assembly name that starts with std, regardless of any amount of characters after the std."
        },
        {
            "type": "text",
            "data": "As an example, std* will include any Assembly name that starts with std, regardless of any amount of characters after the std."
        },
        {
            "type": "text",
            "data": "The question mark replaces characters in a name. For example, having a Assembly name such as B?? will include all Assemblies with 2 characters after the letter B. B12, B48, etc. will be included in the grouping."
        },
        {
            "type": "text",
            "data": "The question mark replaces characters in a name. For example, having a Assembly name such as B?? will include all Assemblies with 2 characters after the letter B. B12, B48, etc. will be included in the grouping."
        },
        {
            "type": "text",
            "data": "Parameters will allow the User Created Standard to take affect only if the parameters that are checked meet the criteria based on the operation selected and the value that has been placed in the value field. Again, we are continuing with additional filters for the User Created Standards."
        },
        {
            "type": "text",
            "data": "Parameters will allow the User Created Standard to take affect only if the parameters that are checked meet the criteria based on the operation selected and the value that has been placed in the value field. Again, we are continuing with additional filters for the User Created Standards."
        },
        {
            "type": "text",
            "data": "An example of this would be setting up the depth of a Assembly to be greater than 12 inches before this standard would take affect."
        },
        {
            "type": "text",
            "data": "An example of this would be setting up the depth of a Assembly to be greater than 12 inches before this standard would take affect."
        },
        {
            "type": "image",
            "data": "image6148.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "End Types Tab"
        },
        {
            "type": "text",
            "data": "The next filter is the end type of the Assembly. You can pick any end type for either end. Should you pick nothing, the default for that is  all  ends."
        },
        {
            "type": "text",
            "data": "The next filter is the end type of the Assembly. You can pick any end type for either end. Should you pick nothing, the default for that is  all  ends."
        },
        {
            "type": "text",
            "data": "The next filter is the end type of the Assembly. You can pick any end type for either end. Should you pick nothing, the default for that is  all  ends."
        },
        {
            "type": "image",
            "data": "image1321.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "You are able to pick virtually any combination of end types for this standard. To do that, select the appropriate end type for the left and right ends. Select the Add -> Button. Repeat this selecting the different end combinations until all your combinations are covered."
        },
        {
            "type": "text",
            "data": "You are able to pick virtually any combination of end types for this standard. To do that, select the appropriate end type for the left and right ends. Select the Add -> Button. Repeat this selecting the different end combinations until all your combinations are covered."
        },
        {
            "type": "text",
            "data": "You are able to pick virtually any combination of end types for this standard. To do that, select the appropriate end type for the left and right ends. Select the Add -> Button. Repeat this selecting the different end combinations until all your combinations are covered."
        },
        {
            "type": "text",
            "data": "Construction Method Tab"
        },
        {
            "type": "text",
            "data": "We can limit this standard to a single construction method, all construction methods or anything in between."
        },
        {
            "type": "text",
            "data": "We can limit this standard to a single construction method, all construction methods or anything in between."
        },
        {
            "type": "text",
            "data": "We can limit this standard to a single construction method, all construction methods or anything in between."
        },
        {
            "type": "image",
            "data": "image1322.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "By default, as with all the others, nothing marked means that there are no restrictions. Selecting one or all but one will then restrict this standard to only the construction methods selected."
        },
        {
            "type": "text",
            "data": "By default, as with all the others, nothing marked means that there are no restrictions. Selecting one or all but one will then restrict this standard to only the construction methods selected."
        },
        {
            "type": "text",
            "data": "By default, as with all the others, nothing marked means that there are no restrictions. Selecting one or all but one will then restrict this standard to only the construction methods selected."
        },
        {
            "type": "text",
            "data": "Conditions for Object Tab"
        },
        {
            "type": "text",
            "data": "This filter requires the object that is being  linked to , not the new object being linked, meet certain conditions before the standard will take affect. Again, if nothing is selected, the default is no restrictions. If your modifying or deleting a Part then this tab is for you to set the conditions for the actual Part that is being modified or deleted."
        },
        {
            "type": "text",
            "data": "This filter requires the object that is being  linked to , not the new object being linked, meet certain conditions before the standard will take affect. Again, if nothing is selected, the default is no restrictions. If your modifying or deleting a Part then this tab is for you to set the conditions for the actual Part that is being modified or deleted."
        },
        {
            "type": "text",
            "data": "This filter requires the object that is being  linked to , not the new object being linked, meet certain conditions before the standard will take affect. Again, if nothing is selected, the default is no restrictions. If your modifying or deleting a Part then this tab is for you to set the conditions for the actual Part that is being modified or deleted."
        },
        {
            "type": "image",
            "data": "image1323.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Notice the X Axis Rot, Y Axis Rot, and Z Axis Rot. These are there to allow you additional restrictions based on how the Part is oriented in space."
        },
        {
            "type": "text",
            "data": "Notice the X Axis Rot, Y Axis Rot, and Z Axis Rot. These are there to allow you additional restrictions based on how the Part is oriented in space."
        },
        {
            "type": "text",
            "data": "Notice the X Axis Rot, Y Axis Rot, and Z Axis Rot. These are there to allow you additional restrictions based on how the Part is oriented in space."
        },
        {
            "type": "text",
            "data": "Part Values Tab"
        },
        {
            "type": "text",
            "data": "The next tab, the Part Values tab allows you to establish the size of the Part you are linking. You can set a fixed value. You can set a value based on any dimension of the Part you're linking to. That Part, the Part your linking to is called the parent by Cabinet Vision."
        },
        {
            "type": "text",
            "data": "The next tab, the Part Values tab allows you to establish the size of the Part you are linking. You can set a fixed value. You can set a value based on any dimension of the Part you're linking to. That Part, the Part your linking to is called the parent by Cabinet Vision."
        },
        {
            "type": "text",
            "data": "The next tab, the Part Values tab allows you to establish the size of the Part you are linking. You can set a fixed value. You can set a value based on any dimension of the Part you're linking to. That Part, the Part your linking to is called the parent by Cabinet Vision."
        },
        {
            "type": "image",
            "data": "image1324.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Part Parameters Tab"
        },
        {
            "type": "text",
            "data": "The Part Parameters tab will allow you to add parameters to the Part such as additional Parts (QTY), repeating the item (REPT), or a spacing of a set of holes being bored (SPCNG). You can also type out any other Parameter you wish here."
        },
        {
            "type": "text",
            "data": "The Part Parameters tab will allow you to add parameters to the Part such as additional Parts (QTY), repeating the item (REPT), or a spacing of a set of holes being bored (SPCNG). You can also type out any other Parameter you wish here."
        },
        {
            "type": "text",
            "data": "The Part Parameters tab will allow you to add parameters to the Part such as additional Parts (QTY), repeating the item (REPT), or a spacing of a set of holes being bored (SPCNG). You can also type out any other Parameter you wish here."
        },
        {
            "type": "image",
            "data": "image1327.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "QTY will give an additional quantity of the Part especially if you're linking to another Part. An example of this could be setting the QTY to 4 if the Part was shelf pins and you would be linking to adjustable shelf. \n \n \n REPT could be used if you were adding 3 shelf holes in an end of a Assembly. \n \n \n SPCNG could be used to space the shelf holes if you were adding multiple shelves in an upper Assembly. \n \n \n You are not limited to just the three parameters that are listed. You can add any  parameter  you want. \u00a0A word of warning though. If there is a parameter that is already set for this Part or operation, then this will replace that parameter. Be sure this is what you want to do."
        },
        {
            "type": "text",
            "data": "QTY will give an additional quantity of the Part especially if you're linking to another Part. An example of this could be setting the QTY to 4 if the Part was shelf pins and you would be linking to adjustable shelf."
        },
        {
            "type": "text",
            "data": "QTY will give an additional quantity of the Part especially if you're linking to another Part. An example of this could be setting the QTY to 4 if the Part was shelf pins and you would be linking to adjustable shelf."
        },
        {
            "type": "text",
            "data": "REPT could be used if you were adding 3 shelf holes in an end of a Assembly."
        },
        {
            "type": "text",
            "data": "REPT could be used if you were adding 3 shelf holes in an end of a Assembly."
        },
        {
            "type": "text",
            "data": "SPCNG could be used to space the shelf holes if you were adding multiple shelves in an upper Assembly."
        },
        {
            "type": "text",
            "data": "SPCNG could be used to space the shelf holes if you were adding multiple shelves in an upper Assembly."
        },
        {
            "type": "text",
            "data": "You are not limited to just the three parameters that are listed. You can add any  parameter  you want. \u00a0A word of warning though. If there is a parameter that is already set for this Part or operation, then this will replace that parameter. Be sure this is what you want to do."
        },
        {
            "type": "text",
            "data": "You are not limited to just the three parameters that are listed. You can add any  parameter  you want. \u00a0A word of warning though. If there is a parameter that is already set for this Part or operation, then this will replace that parameter. Be sure this is what you want to do."
        },
        {
            "type": "link",
            "data": {
                "text": "parameter",
                "uuid": "64910180-651d-4a1a-a6a9-ff64f36e7ea4",
                "description": "[Placeholder for AI-generated description]"
            }
        },
        {
            "type": "text",
            "data": "Re-Open A User Created Standard"
        },
        {
            "type": "text",
            "data": "Use the  Wizard \u00a0option\u00a0to get back into a User Created Standard to change the parameters that you have set up."
        },
        {
            "type": "text",
            "data": "Use the  Wizard \u00a0option\u00a0to get back into a User Created Standard to change the parameters that you have set up."
        },
        {
            "type": "text",
            "data": "Use the  Wizard \u00a0option\u00a0to get back into a User Created Standard to change the parameters that you have set up."
        },
        {
            "type": "image",
            "data": "image1328.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "If you are going to change the parameters, be sure to use the Wizard option. Using this option with the correct User Created Standard highlighted will allow you to go back through the tabs that were discussed above. You can go directly to a parameter simply by clicking on the tab you need."
        },
        {
            "type": "text",
            "data": "If you are going to change the parameters, be sure to use the Wizard option. Using this option with the correct User Created Standard highlighted will allow you to go back through the tabs that were discussed above. You can go directly to a parameter simply by clicking on the tab you need."
        },
        {
            "type": "text",
            "data": "If you are going to change the parameters, be sure to use the Wizard option. Using this option with the correct User Created Standard highlighted will allow you to go back through the tabs that were discussed above. You can go directly to a parameter simply by clicking on the tab you need."
        },
        {
            "type": "text",
            "data": "Use the Wizard option, to change your Standard not the  Code \u00a0option. The  Code \u00a0option\u00a0is used to change, or add to the logic that the User Created Standard has already set up."
        },
        {
            "type": "image",
            "data": "Information.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Organizing the User Created Standards"
        },
        {
            "type": "text",
            "data": "Should you have to make multiple User Created Standards that are essentially the same but for some minor differences, use this option to copy the standard. Use the Wizard option to get into the standard to make the changes."
        },
        {
            "type": "text",
            "data": "Should you have to make multiple User Created Standards that are essentially the same but for some minor differences, use this option to copy the standard. Use the Wizard option to get into the standard to make the changes."
        },
        {
            "type": "text",
            "data": "Should you have to make multiple User Created Standards that are essentially the same but for some minor differences, use this option to copy the standard. Use the Wizard option to get into the standard to make the changes."
        },
        {
            "type": "image",
            "data": "image1330.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "You may decide you don't want a standard, or it has become unnecessary because the design you used it for is complete. Simply highlight the standard and click on the Delete option. The standard will be deleted from the list."
        },
        {
            "type": "text",
            "data": "You may decide you don't want a standard, or it has become unnecessary because the design you used it for is complete. Simply highlight the standard and click on the Delete option. The standard will be deleted from the list."
        },
        {
            "type": "text",
            "data": "You may decide you don't want a standard, or it has become unnecessary because the design you used it for is complete. Simply highlight the standard and click on the Delete option. The standard will be deleted from the list."
        },
        {
            "type": "image",
            "data": "image1331.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "CABINET VISION\u00a0uses User Created Standards as they are listed. At times it is advantageous to have one standard acted upon before another standard. That's what the Up and Down buttons are used for."
        },
        {
            "type": "text",
            "data": "CABINET VISION\u00a0uses User Created Standards as they are listed. At times it is advantageous to have one standard acted upon before another standard. That's what the Up and Down buttons are used for."
        },
        {
            "type": "text",
            "data": "CABINET VISION\u00a0uses User Created Standards as they are listed. At times it is advantageous to have one standard acted upon before another standard. That's what the Up and Down buttons are used for."
        },
        {
            "type": "image",
            "data": "image1332.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "To use either button, highlight the User Created Standard you want to move. Click on the appropriate tool. The User Created Standard will be moved either up in priority or down in priority, depending on which tool you've selected."
        },
        {
            "type": "text",
            "data": "To use either button, highlight the User Created Standard you want to move. Click on the appropriate tool. The User Created Standard will be moved either up in priority or down in priority, depending on which tool you've selected."
        },
        {
            "type": "text",
            "data": "To use either button, highlight the User Created Standard you want to move. Click on the appropriate tool. The User Created Standard will be moved either up in priority or down in priority, depending on which tool you've selected."
        },
        {
            "type": "text",
            "data": "By right clicking your mouse on a User Created Standard, you have some of the same selections alternatively."
        },
        {
            "type": "text",
            "data": "By right clicking your mouse on a User Created Standard, you have some of the same selections alternatively."
        },
        {
            "type": "text",
            "data": "By right clicking your mouse on a User Created Standard, you have some of the same selections alternatively."
        },
        {
            "type": "image",
            "data": "image6154.gif",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "Advanced User Created Standards"
        },
        {
            "type": "text",
            "data": "For those advanced users the Code\u00a0option\u00a0offers tremendous power to CABINET VISION."
        },
        {
            "type": "text",
            "data": "For those advanced users the Code\u00a0option\u00a0offers tremendous power to CABINET VISION."
        },
        {
            "type": "text",
            "data": "For those advanced users the Code\u00a0option\u00a0offers tremendous power to CABINET VISION."
        },
        {
            "type": "image",
            "data": "image1333.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "For even greater flexibility, you have the ability to modify the code. You are able to access the computer-generated code CABINET VISION has created. From the choices you made when you answered the questions, programming code has been added. You can modify and add to that code. This ability gives great power to User Created Standards. Now nothing is unattainable for you."
        },
        {
            "type": "text",
            "data": "For even greater flexibility, you have the ability to modify the code. You are able to access the computer-generated code CABINET VISION has created. From the choices you made when you answered the questions, programming code has been added. You can modify and add to that code. This ability gives great power to User Created Standards. Now nothing is unattainable for you."
        },
        {
            "type": "text",
            "data": "For even greater flexibility, you have the ability to modify the code. You are able to access the computer-generated code CABINET VISION has created. From the choices you made when you answered the questions, programming code has been added. You can modify and add to that code. This ability gives great power to User Created Standards. Now nothing is unattainable for you."
        },
        {
            "type": "image",
            "data": "image1334.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "User Created Standard Syntax"
        },
        {
            "type": "text",
            "data": "Comment ;"
        },
        {
            "type": "text",
            "data": "Any text following a ; is ignored."
        },
        {
            "type": "text",
            "data": "Any text following a ; is ignored."
        },
        {
            "type": "text",
            "data": "Any text following a ; is ignored."
        },
        {
            "type": "text",
            "data": "The 1st line of every UCS must be a comment."
        },
        {
            "type": "image",
            "data": "Information.png",
            "description": "[Placeholder for AI-generated description]"
        },
        {
            "type": "text",
            "data": "For Each Object(s) ObjectType"
        },
        {
            "type": "text",
            "data": "Multiple object names can be listed here with a | symbol to separate. Also wild card characters (*,?) may be used in the object names. Any parameters specified in the formula that are not proceeded with a . or : refer to the For Each Object(s)."
        },
        {
            "type": "text",
            "data": "Multiple object names can be listed here with a | symbol to separate. Also wild card characters (*,?) may be used in the object names. Any parameters specified in the formula that are not proceeded with a . or : refer to the For Each Object(s)."
        },
        {
            "type": "text",
            "data": "Multiple object names can be listed here with a | symbol to separate. Also wild card characters (*,?) may be used in the object names. Any parameters specified in the formula that are not proceeded with a . or : refer to the For Each Object(s)."
        },
        {
            "type": "text",
            "data": "The Filter - If & Then & End If"
        },
        {
            "type": "text",
            "data": "A series of conditional statements that will filter out the UCS affecting every object. If the IF statement evaluates False the program flow drops to the corresponding End If statement. Some of the common items to filter on would be: \n \n \n \n \n Assembly Class"
        },
        {
            "type": "text",
            "data": "A series of conditional statements that will filter out the UCS affecting every object. If the IF statement evaluates False the program flow drops to the corresponding End If statement. Some of the common items to filter on would be:"
        },
        {
            "type": "text",
            "data": "A series of conditional statements that will filter out the UCS affecting every object. If the IF statement evaluates False the program flow drops to the corresponding End If statement. Some of the common items to filter on would be:"
        },
        {
            "type": "text",
            "data": "Assembly Class"
        },
        {
            "type": "text",
            "data": "Assembly Class"
        },
        {
            "type": "text",
            "data": "Assembly Class"
        },
        {
            "type": "text",
            "data": "Assembly Class"
        },
        {
            "type": "text",
            "data": "Cab.Class = ASM_CLASS_BASE"
        },
        {
            "type": "text",
            "data": "Assembly Type"
        },
        {
            "type": "text",
            "data": "Assembly Type"
        },
        {
            "type": "text",
            "data": "Assembly Type"
        },
        {
            "type": "text",
            "data": "Assembly Type"
        },
        {
            "type": "text",
            "data": "Assembly Type"
        },
        {
            "type": "text",
            "data": "Cab.Type = ASM_TYPE_CORNER45"
        },
        {
            "type": "text",
            "data": "Assembly Name"
        },
        {
            "type": "text",
            "data": "Assembly Name"
        },
        {
            "type": "text",
            "data": "Assembly Name"
        },
        {
            "type": "text",
            "data": "Assembly Name"
        },
        {
            "type": "text",
            "data": "Assembly Name"
        },
        {
            "type": "text",
            "data": "Cab.Name = 'BD*'"
        },
        {
            "type": "text",
            "data": "Assembly Parameters"
        },
        {
            "type": "text",
            "data": "Assembly Parameters"
        },
        {
            "type": "text",
            "data": "Assembly Parameters"
        },
        {
            "type": "text",
            "data": "Assembly Parameters"
        },
        {
            "type": "text",
            "data": "Assembly Parameters"
        },
        {
            "type": "text",
            "data": "Cab.DX = 0"
        },
        {
            "type": "text",
            "data": "Assembly End Types"
        },
        {
            "type": "text",
            "data": "Assembly End Types"
        },
        {
            "type": "text",
            "data": "Assembly End Types"
        },
        {
            "type": "text",
            "data": "Assembly End Types"
        },
        {
            "type": "text",
            "data": "Assembly End Types"
        },
        {
            "type": "text",
            "data": "Cab.REnd = ASM_END_CLIPPED and RClip > 0"
        },
        {
            "type": "text",
            "data": "Construction ID"
        },
        {
            "type": "text",
            "data": "Construction ID"
        },
        {
            "type": "text",
            "data": "Construction ID"
        },
        {
            "type": "text",
            "data": "Construction ID"
        },
        {
            "type": "text",
            "data": "Construction ID"
        },
        {
            "type": "text",
            "data": "Cab.ConstID = 15"
        },
        {
            "type": "text",
            "data": "Object Parameters"
        },
        {
            "type": "text",
            "data": "Object Parameters"
        },
        {
            "type": "text",
            "data": "Object Parameters"
        },
        {
            "type": "text",
            "data": "Object Parameters"
        },
        {
            "type": "text",
            "data": "Object Parameters"
        },
        {
            "type": "text",
            "data": "DX > 15"
        },
        {
            "type": "text",
            "data": "Modifying Parameters"
        },
        {
            "type": "text",
            "data": "Following the If statements you can specify new parameters for the object. If the parameter does not exist it will be added. If the parameter does exist its value will be replaced. Following are some special parameter settings: \n \n \n \n \n QTY = 0 This will delete the object \n \n \n Adjust Add (X) This will add X to the current value. \n \n \n Adjust Mult (X) This will multiply the current value by X. \n \n \n REPT For boring operations: it specifies the number of holes. \n \n \n SPCNG For boring operations: it specifies the spacing between holes. \n \n \n \n \n For a complete list see the  System Parameters topic ."
        },
        {
            "type": "text",
            "data": "Following the If statements you can specify new parameters for the object. If the parameter does not exist it will be added. If the parameter does exist its value will be replaced. Following are some special parameter settings:"
        },
        {
            "type": "text",
            "data": "Following the If statements you can specify new parameters for the object. If the parameter does not exist it will be added. If the parameter does exist its value will be replaced. Following are some special parameter settings:"
        },
        {
            "type": "text",
            "data": "QTY = 0 This will delete the object \n \n \n Adjust Add (X) This will add X to the current value. \n \n \n Adjust Mult (X) This will multiply the current value by X. \n \n \n REPT For boring operations: it specifies the number of holes. \n \n \n SPCNG For boring operations: it specifies the spacing between holes."
        },
        {
            "type": "text",
            "data": "QTY = 0 This will delete the object \n \n \n Adjust Add (X) This will add X to the current value. \n \n \n Adjust Mult (X) This will multiply the current value by X. \n \n \n REPT For boring operations: it specifies the number of holes. \n \n \n SPCNG For boring operations: it specifies the spacing between holes."
        },
        {
            "type": "text",
            "data": "QTY = 0 This will delete the object"
        },
        {
            "type": "text",
            "data": "QTY = 0 This will delete the object"
        },
        {
            "type": "text",
            "data": "Adjust Add (X) This will add X to the current value."
        },
        {
            "type": "text",
            "data": "Adjust Add (X) This will add X to the current value."
        },
        {
            "type": "text",
            "data": "Adjust Mult (X) This will multiply the current value by X."
        },
        {
            "type": "text",
            "data": "Adjust Mult (X) This will multiply the current value by X."
        },
        {
            "type": "text",
            "data": "REPT For boring operations: it specifies the number of holes."
        },
        {
            "type": "text",
            "data": "REPT For boring operations: it specifies the number of holes."
        },
        {
            "type": "text",
            "data": "SPCNG For boring operations: it specifies the spacing between holes."
        },
        {
            "type": "text",
            "data": "SPCNG For boring operations: it specifies the spacing between holes."
        },
        {
            "type": "text",
            "data": "For a complete list see the  System Parameters topic ."
        },
        {
            "type": "text",
            "data": "For a complete list see the  System Parameters topic ."
        },
        {
            "type": "link",
            "data": {
                "text": "System Parameters topic",
                "uuid": "a4e1b750-0c06-4170-b06e-a29aa6f022c2",
                "description": "[Placeholder for AI-generated description]"
            }
        },
        {
            "type": "text",
            "data": "Adding an Object - Dim Object as New ObjectType"
        },
        {
            "type": "text",
            "data": "You can create multiple objects as long as the objects have unique names. \n \n \n You can set the parameters for the new object(s) by specifying the ObjectName.Parameter (DE.DX). \n \n \n The parameter Visible will determine if the Part appears visually as well as on the cut list. (DE.Visible = True). \n \n \n It is common to link operations to other operations. For an operation to be valid it must be attached to a Part (not another operation). You can use the following statement to attach a new operation to the parent Part:"
        },
        {
            "type": "text",
            "data": "You can create multiple objects as long as the objects have unique names."
        },
        {
            "type": "text",
            "data": "You can create multiple objects as long as the objects have unique names."
        },
        {
            "type": "text",
            "data": "You can set the parameters for the new object(s) by specifying the ObjectName.Parameter (DE.DX)."
        },
        {
            "type": "text",
            "data": "You can set the parameters for the new object(s) by specifying the ObjectName.Parameter (DE.DX)."
        },
        {
            "type": "text",
            "data": "The parameter Visible will determine if the Part appears visually as well as on the cut list. (DE.Visible = True)."
        },
        {
            "type": "text",
            "data": "The parameter Visible will determine if the Part appears visually as well as on the cut list. (DE.Visible = True)."
        },
        {
            "type": "text",
            "data": "It is common to link operations to other operations. For an operation to be valid it must be attached to a Part (not another operation). You can use the following statement to attach a new operation to the parent Part:"
        },
        {
            "type": "text",
            "data": "It is common to link operations to other operations. For an operation to be valid it must be attached to a Part (not another operation). You can use the following statement to attach a new operation to the parent Part:"
        },
        {
            "type": "text",
            "data": "NewObject.Owner = Owner"
        },
        {
            "type": "text",
            "data": "This will effectively take the new operation and detach it from the operation and attach it to the Part."
        },
        {
            "type": "text",
            "data": "This will effectively take the new operation and detach it from the operation and attach it to the Part."
        },
        {
            "type": "text",
            "data": "This will effectively take the new operation and detach it from the operation and attach it to the Part."
        },
        {
            "type": "text",
            "data": "Valid Object Types for Use in a For Each Statement"
        },
        {
            "type": "text",
            "data": "ACAMDwg \n \n \n Arc \n \n \n Assembly \n \n \n BlindDado \n \n \n Dado \n \n \n DadoEx \n \n \n Door \n \n \n DoveTail \n \n \n DrwFront \n \n \n Guide \n \n \n Hinge \n \n \n Hole \n \n \n HoleMaster \n \n \n IJoint \n \n \n LBoreMaster \n \n \n Line \n \n \n Linebore \n \n \n MDado \n \n \n MDadoEx \n \n \n MHole \n \n \n MLinebore \n \n \n Molding \n \n \n Opening \n \n \n Operation \n \n \n NGAcsry \n \n \n Part \n \n \n Pull \n \n \n Route"
        },
        {
            "type": "text",
            "data": "ACAMDwg"
        },
        {
            "type": "text",
            "data": "ACAMDwg"
        },
        {
            "type": "text",
            "data": "Arc"
        },
        {
            "type": "text",
            "data": "Arc"
        },
        {
            "type": "text",
            "data": "Assembly"
        },
        {
            "type": "text",
            "data": "Assembly"
        },
        {
            "type": "text",
            "data": "BlindDado"
        },
        {
            "type": "text",
            "data": "BlindDado"
        },
        {
            "type": "text",
            "data": "Dado"
        },
        {
            "type": "text",
            "data": "Dado"
        },
        {
            "type": "text",
            "data": "DadoEx"
        },
        {
            "type": "text",
            "data": "DadoEx"
        },
        {
            "type": "text",
            "data": "Door"
        },
        {
            "type": "text",
            "data": "Door"
        },
        {
            "type": "text",
            "data": "DoveTail"
        },
        {
            "type": "text",
            "data": "DoveTail"
        },
        {
            "type": "text",
            "data": "DrwFront"
        },
        {
            "type": "text",
            "data": "DrwFront"
        },
        {
            "type": "text",
            "data": "Guide"
        },
        {
            "type": "text",
            "data": "Guide"
        },
        {
            "type": "text",
            "data": "Hinge"
        },
        {
            "type": "text",
            "data": "Hinge"
        },
        {
            "type": "text",
            "data": "Hole"
        },
        {
            "type": "text",
            "data": "Hole"
        },
        {
            "type": "text",
            "data": "HoleMaster"
        },
        {
            "type": "text",
            "data": "HoleMaster"
        },
        {
            "type": "text",
            "data": "IJoint"
        },
        {
            "type": "text",
            "data": "IJoint"
        },
        {
            "type": "text",
            "data": "LBoreMaster"
        },
        {
            "type": "text",
            "data": "LBoreMaster"
        },
        {
            "type": "text",
            "data": "Line"
        },
        {
            "type": "text",
            "data": "Line"
        },
        {
            "type": "text",
            "data": "Linebore"
        },
        {
            "type": "text",
            "data": "Linebore"
        },
        {
            "type": "text",
            "data": "MDado"
        },
        {
            "type": "text",
            "data": "MDado"
        },
        {
            "type": "text",
            "data": "MDadoEx"
        },
        {
            "type": "text",
            "data": "MDadoEx"
        },
        {
            "type": "text",
            "data": "MHole"
        },
        {
            "type": "text",
            "data": "MHole"
        },
        {
            "type": "text",
            "data": "MLinebore"
        },
        {
            "type": "text",
            "data": "MLinebore"
        },
        {
            "type": "text",
            "data": "Molding"
        },
        {
            "type": "text",
            "data": "Molding"
        },
        {
            "type": "text",
            "data": "Opening"
        },
        {
            "type": "text",
            "data": "Opening"
        },
        {
            "type": "text",
            "data": "Operation"
        },
        {
            "type": "text",
            "data": "Operation"
        },
        {
            "type": "text",
            "data": "NGAcsry"
        },
        {
            "type": "text",
            "data": "NGAcsry"
        },
        {
            "type": "text",
            "data": "Part"
        },
        {
            "type": "text",
            "data": "Part"
        },
        {
            "type": "text",
            "data": "Pull"
        },
        {
            "type": "text",
            "data": "Pull"
        },
        {
            "type": "text",
            "data": "Route"
        },
        {
            "type": "text",
            "data": "Route"
        },
        {
            "type": "text",
            "data": "Additional Functions"
        },
        {
            "type": "text",
            "data": "Imp(X) Divides X by 25.4. Converts a metric value to imperial. \n \n \n Xmm establishes that you are defining a Metric value. 300mm \n \n \n Xin establishes that you are defining an Imperial value. 12in \n \n \n ? This is a wild card that can be used in any name to represent one character. B??D would match B24D and B18D  but not  B9D. \n \n \n * This is a wild card that can be used in any name to represent any number of characters. B*D would match B24D and B18D  and  B9D. However N*BORE would not match with NoooBoooBORE. When the program encounters an * it searches for the next character B in the rest of the string. When a match is found it performs the string comparison. In this case BORE = BoooBORE. \n \n \n Multiple wild cards can be used in any string: (W*3?D*BB) \n \n \n _M: Material Information. This parameter can be used to identify the current material information of any Part. Use _M:DZ to obtain the material thickness. Use _M:MatID to get the materials internal ID number. Use _M:SchID to get the current material schedule ID for a Part.\u00a0The following would be valid syntax: \n \n \n \n \n _m:matid \n \n \n tr._m:schedid \n \n \n face.mr@2._m:dz \n \n \n cab.face.mr@2._m:matid"
        },
        {
            "type": "text",
            "data": "Imp(X) Divides X by 25.4. Converts a metric value to imperial."
        },
        {
            "type": "text",
            "data": "Imp(X) Divides X by 25.4. Converts a metric value to imperial."
        },
        {
            "type": "text",
            "data": "Xmm establishes that you are defining a Metric value. 300mm"
        },
        {
            "type": "text",
            "data": "Xmm establishes that you are defining a Metric value. 300mm"
        },
        {
            "type": "text",
            "data": "Xin establishes that you are defining an Imperial value. 12in"
        },
        {
            "type": "text",
            "data": "Xin establishes that you are defining an Imperial value. 12in"
        },
        {
            "type": "text",
            "data": "? This is a wild card that can be used in any name to represent one character. B??D would match B24D and B18D  but not  B9D."
        },
        {
            "type": "text",
            "data": "? This is a wild card that can be used in any name to represent one character. B??D would match B24D and B18D  but not  B9D."
        },
        {
            "type": "text",
            "data": "* This is a wild card that can be used in any name to represent any number of characters. B*D would match B24D and B18D  and  B9D. However N*BORE would not match with NoooBoooBORE. When the program encounters an * it searches for the next character B in the rest of the string. When a match is found it performs the string comparison. In this case BORE = BoooBORE."
        },
        {
            "type": "text",
            "data": "* This is a wild card that can be used in any name to represent any number of characters. B*D would match B24D and B18D  and  B9D. However N*BORE would not match with NoooBoooBORE. When the program encounters an * it searches for the next character B in the rest of the string. When a match is found it performs the string comparison. In this case BORE = BoooBORE."
        },
        {
            "type": "text",
            "data": "Multiple wild cards can be used in any string: (W*3?D*BB)"
        },
        {
            "type": "text",
            "data": "Multiple wild cards can be used in any string: (W*3?D*BB)"
        },
        {
            "type": "text",
            "data": "_M: Material Information. This parameter can be used to identify the current material information of any Part. Use _M:DZ to obtain the material thickness. Use _M:MatID to get the materials internal ID number. Use _M:SchID to get the current material schedule ID for a Part.\u00a0The following would be valid syntax:"
        },
        {
            "type": "text",
            "data": "_M: Material Information. This parameter can be used to identify the current material information of any Part. Use _M:DZ to obtain the material thickness. Use _M:MatID to get the materials internal ID number. Use _M:SchID to get the current material schedule ID for a Part.\u00a0The following would be valid syntax:"
        },
        {
            "type": "text",
            "data": "_m:matid \n \n \n tr._m:schedid \n \n \n face.mr@2._m:dz \n \n \n cab.face.mr@2._m:matid"
        },
        {
            "type": "text",
            "data": "_m:matid \n \n \n tr._m:schedid \n \n \n face.mr@2._m:dz \n \n \n cab.face.mr@2._m:matid"
        },
        {
            "type": "text",
            "data": "_m:matid"
        },
        {
            "type": "text",
            "data": "_m:matid"
        },
        {
            "type": "text",
            "data": "tr._m:schedid"
        },
        {
            "type": "text",
            "data": "tr._m:schedid"
        },
        {
            "type": "text",
            "data": "face.mr@2._m:dz"
        },
        {
            "type": "text",
            "data": "face.mr@2._m:dz"
        },
        {
            "type": "text",
            "data": "cab.face.mr@2._m:matid"
        },
        {
            "type": "text",
            "data": "cab.face.mr@2._m:matid"
        },
        {
            "type": "text",
            "data": "See the  Functions and Operators topic  for a list of all valid Object Classes and their associated Object Types."
        },
        {
            "type": "link",
            "data": {
                "text": "Functions and Operators topic",
                "uuid": "64910180-651d-4a1a-a6a9-ff64f36e7ea4",
                "description": "[Placeholder for AI-generated description]"
            }
        },
        {
            "type": "text",
            "data": "End Type Constants"
        },
        {
            "type": "text",
            "data": "ASM_END_FINISHED \n \n \n ASM_END_UNFINISHED \n \n \n ASM_END_EXTENDED \n \n \n ASM_END_RETURN \n \n \n ASM_END_APPL_FE \n \n \n ASM_END_APPL_DOOR \n \n \n ASM_END_PANELIZED"
        },
        {
            "type": "text",
            "data": "ASM_END_FINISHED"
        },
        {
            "type": "text",
            "data": "ASM_END_FINISHED"
        },
        {
            "type": "text",
            "data": "ASM_END_UNFINISHED"
        },
        {
            "type": "text",
            "data": "ASM_END_UNFINISHED"
        },
        {
            "type": "text",
            "data": "ASM_END_EXTENDED"
        },
        {
            "type": "text",
            "data": "ASM_END_EXTENDED"
        },
        {
            "type": "text",
            "data": "ASM_END_RETURN"
        },
        {
            "type": "text",
            "data": "ASM_END_RETURN"
        },
        {
            "type": "text",
            "data": "ASM_END_APPL_FE"
        },
        {
            "type": "text",
            "data": "ASM_END_APPL_FE"
        },
        {
            "type": "text",
            "data": "ASM_END_APPL_DOOR"
        },
        {
            "type": "text",
            "data": "ASM_END_APPL_DOOR"
        },
        {
            "type": "text",
            "data": "ASM_END_PANELIZED"
        },
        {
            "type": "text",
            "data": "ASM_END_PANELIZED"
        },
        {
            "type": "text",
            "data": "Operation Names - Line boring"
        },
        {
            "type": "text",
            "data": "Line Bore \n \n \n LFVBORE \n \n \n LRVBORE"
        },
        {
            "type": "text",
            "data": "Line Bore"
        },
        {
            "type": "text",
            "data": "Line Bore"
        },
        {
            "type": "text",
            "data": "LFVBORE"
        },
        {
            "type": "text",
            "data": "LFVBORE"
        },
        {
            "type": "text",
            "data": "LRVBORE"
        },
        {
            "type": "text",
            "data": "LRVBORE"
        },
        {
            "type": "text",
            "data": "Guide Bore \n \n \n GFVBORE \n \n \n GMVBORE \n \n \n GRVBORE"
        },
        {
            "type": "text",
            "data": "Guide Bore"
        },
        {
            "type": "text",
            "data": "Guide Bore"
        },
        {
            "type": "text",
            "data": "GFVBORE"
        },
        {
            "type": "text",
            "data": "GFVBORE"
        },
        {
            "type": "text",
            "data": "GMVBORE"
        },
        {
            "type": "text",
            "data": "GMVBORE"
        },
        {
            "type": "text",
            "data": "GRVBORE"
        },
        {
            "type": "text",
            "data": "GRVBORE"
        },
        {
            "type": "text",
            "data": "Hinge Bore \n \n \n HPBORE (Hinge Plate Bore) \n \n \n HCBORE (Hinge Cup Bore) \n \n \n HCABORE (Hinge Cup Anchor Bore)"
        },
        {
            "type": "text",
            "data": "Hinge Bore"
        },
        {
            "type": "text",
            "data": "Hinge Bore"
        },
        {
            "type": "text",
            "data": "HPBORE (Hinge Plate Bore)"
        },
        {
            "type": "text",
            "data": "HPBORE (Hinge Plate Bore)"
        },
        {
            "type": "text",
            "data": "HCBORE (Hinge Cup Bore)"
        },
        {
            "type": "text",
            "data": "HCBORE (Hinge Cup Bore)"
        },
        {
            "type": "text",
            "data": "HCABORE (Hinge Cup Anchor Bore)"
        },
        {
            "type": "text",
            "data": "HCABORE (Hinge Cup Anchor Bore)"
        },
        {
            "type": "text",
            "data": "Operation Names - Construction boring:"
        },
        {
            "type": "text",
            "data": "LEFHBORE \n \n \n LEMHBORE \n \n \n LERHBORE \n \n \n REFHBORE \n \n \n REMHBORE \n \n \n RERHBORE"
        },
        {
            "type": "text",
            "data": "LEFHBORE"
        },
        {
            "type": "text",
            "data": "LEFHBORE"
        },
        {
            "type": "text",
            "data": "LEMHBORE"
        },
        {
            "type": "text",
            "data": "LEMHBORE"
        },
        {
            "type": "text",
            "data": "LERHBORE"
        },
        {
            "type": "text",
            "data": "LERHBORE"
        },
        {
            "type": "text",
            "data": "REFHBORE"
        },
        {
            "type": "text",
            "data": "REFHBORE"
        },
        {
            "type": "text",
            "data": "REMHBORE"
        },
        {
            "type": "text",
            "data": "REMHBORE"
        },
        {
            "type": "text",
            "data": "RERHBORE"
        },
        {
            "type": "text",
            "data": "RERHBORE"
        },
        {
            "type": "text",
            "data": "Operation Names - Dados:"
        },
        {
            "type": "text",
            "data": "Stretchers \n \n \n STEDADO \n \n \n SHDADO (Drawer Stretcher)"
        },
        {
            "type": "text",
            "data": "Stretchers"
        },
        {
            "type": "text",
            "data": "Stretchers"
        },
        {
            "type": "text",
            "data": "STEDADO"
        },
        {
            "type": "text",
            "data": "STEDADO"
        },
        {
            "type": "text",
            "data": "SHDADO (Drawer Stretcher)"
        },
        {
            "type": "text",
            "data": "SHDADO (Drawer Stretcher)"
        },
        {
            "type": "text",
            "data": "Top \n \n \n TODADO"
        },
        {
            "type": "text",
            "data": "Top"
        },
        {
            "type": "text",
            "data": "Top"
        },
        {
            "type": "text",
            "data": "TODADO"
        },
        {
            "type": "text",
            "data": "TODADO"
        },
        {
            "type": "text",
            "data": "Bottom \n \n \n BODADO"
        },
        {
            "type": "text",
            "data": "Bottom"
        },
        {
            "type": "text",
            "data": "Bottom"
        },
        {
            "type": "text",
            "data": "BODADO"
        },
        {
            "type": "text",
            "data": "BODADO"
        },
        {
            "type": "text",
            "data": "Nailers \n \n \n NATDADO \n \n \n NABDADO \n \n \n NAEDADO"
        },
        {
            "type": "text",
            "data": "Nailers"
        },
        {
            "type": "text",
            "data": "Nailers"
        },
        {
            "type": "text",
            "data": "NATDADO"
        },
        {
            "type": "text",
            "data": "NATDADO"
        },
        {
            "type": "text",
            "data": "NABDADO"
        },
        {
            "type": "text",
            "data": "NABDADO"
        },
        {
            "type": "text",
            "data": "NAEDADO"
        },
        {
            "type": "text",
            "data": "NAEDADO"
        },
        {
            "type": "text",
            "data": "Shelf \n \n \n SHDADO"
        },
        {
            "type": "text",
            "data": "Shelf"
        },
        {
            "type": "text",
            "data": "Shelf"
        },
        {
            "type": "text",
            "data": "SHDADO"
        },
        {
            "type": "text",
            "data": "SHDADO"
        },
        {
            "type": "text",
            "data": "Back \n \n \n UBDADO \n \n \n FBDADO"
        },
        {
            "type": "text",
            "data": "Back"
        },
        {
            "type": "text",
            "data": "Back"
        },
        {
            "type": "text",
            "data": "UBDADO"
        },
        {
            "type": "text",
            "data": "UBDADO"
        },
        {
            "type": "text",
            "data": "FBDADO"
        },
        {
            "type": "text",
            "data": "FBDADO"
        },
        {
            "type": "text",
            "data": "Toe \n \n \n DADO"
        },
        {
            "type": "text",
            "data": "Toe"
        },
        {
            "type": "text",
            "data": "Toe"
        },
        {
            "type": "text",
            "data": "DADO"
        },
        {
            "type": "text",
            "data": "DADO"
        },
        {
            "type": "text",
            "data": "Unfinished Ends \n \n \n DADO"
        },
        {
            "type": "text",
            "data": "Unfinished Ends"
        },
        {
            "type": "text",
            "data": "Unfinished Ends"
        },
        {
            "type": "text",
            "data": "DADO"
        },
        {
            "type": "text",
            "data": "DADO"
        },
        {
            "type": "text",
            "data": "Finished Ends \n \n \n DADO"
        },
        {
            "type": "text",
            "data": "Finished Ends"
        },
        {
            "type": "text",
            "data": "Finished Ends"
        },
        {
            "type": "text",
            "data": "DADO"
        },
        {
            "type": "text",
            "data": "DADO"
        },
        {
            "type": "text",
            "data": "Partition \n \n \n PTDADO"
        },
        {
            "type": "text",
            "data": "Partition"
        },
        {
            "type": "text",
            "data": "Partition"
        },
        {
            "type": "text",
            "data": "PTDADO"
        },
        {
            "type": "text",
            "data": "PTDADO"
        },
        {
            "type": "text",
            "data": "UCS Sample #1"
        },
        {
            "type": "text",
            "data": ";Links Board to Adjustable & Fixed Shelves"
        },
        {
            "type": "text",
            "data": "For Each  AS|FS Part"
        },
        {
            "type": "text",
            "data": "If  Cab . Class  =  ASM_CLASS_BASE  Then"
        },
        {
            "type": "text",
            "data": "If  Cab . Type  =  \u00a0ASM_TYPE_STANDARD or Cab.Type  =  \u00a0ASM_TYPE_CORNER45  Then"
        },
        {
            "type": "text",
            "data": "If  Cab . Name  =   'Special Name'   Then"
        },
        {
            "type": "text",
            "data": "If  Cab . DX  >  15  Then"
        },
        {
            "type": "text",
            "data": "If  Cab . DY  >  30  Then"
        },
        {
            "type": "text",
            "data": "If  Cab . DZ  <  20  Then"
        },
        {
            "type": "text",
            "data": "If  Cab . LEnd  =  \u00a0ASM_END_UNFINISHED  Then"
        },
        {
            "type": "text",
            "data": "If  Cab . ConstID  =  15 or Cab.ConstID  =  16  Then"
        },
        {
            "type": "text",
            "data": "If  DY  >  20  Then"
        },
        {
            "type": "text",
            "data": "Dim  BOARD as New Part"
        },
        {
            "type": "text",
            "data": "BOARD . Visible  =  True"
        },
        {
            "type": "text",
            "data": "BOARD . DX  =  3"
        },
        {
            "type": "text",
            "data": "BOARD . DY  = : DY  +  0"
        },
        {
            "type": "text",
            "data": "BOARD . X  =  0"
        },
        {
            "type": "text",
            "data": "BOARD . Y  = : DZ  +  0"
        },
        {
            "type": "text",
            "data": "BOARD . Z  = : DX  +  0"
        },
        {
            "type": "text",
            "data": "BOARD . AX  =  0  ;Not Needed Since It is 0"
        },
        {
            "type": "text",
            "data": "If  Cab . Euro  =  1  Then  \u00a0\u00a0 ;If a Euro Assembly... Add Banding"
        },
        {
            "type": "text",
            "data": "Dim BNDEX as New Part"
        },
        {
            "type": "text",
            "data": "BNDEX . Visible  =  True"
        },
        {
            "type": "text",
            "data": "BNDEX . DX  =  3"
        },
        {
            "type": "text",
            "data": "BNDEX . DY  = : DY  +  0"
        },
        {
            "type": "text",
            "data": "BNDEX . X  =  Imp(3) \u00a0\u00a0\u00a0 ;Convert From Metric (3mm)"
        },
        {
            "type": "text",
            "data": "BNDEX . Y  = : DZ  +  0"
        },
        {
            "type": "text",
            "data": "BNDEX . Z  = : DX  +  0"
        },
        {
            "type": "text",
            "data": "End If"
        },
        {
            "type": "text",
            "data": ";Place an additional parameter and re-adjust new boards width"
        },
        {
            "type": "text",
            "data": "If  DY  >  40  Then"
        },
        {
            "type": "text",
            "data": "BOARD . DX  Adjust Add  2"
        },
        {
            "type": "text",
            "data": "End If"
        },
        {
            "type": "text",
            "data": ";Add Additional Parameters"
        },
        {
            "type": "text",
            "data": "MyShelfParam  =  2 \u00a0\u00a0 ;Added to the \"For Each\" Object"
        },
        {
            "type": "text",
            "data": "BOARD.MyBoardParam  =  3 \u00a0\u00a0 ;Added to the new board"
        },
        {
            "type": "text",
            "data": "End If"
        },
        {
            "type": "text",
            "data": "End If"
        },
        {
            "type": "text",
            "data": "End If"
        },
        {
            "type": "text",
            "data": "End If"
        },
        {
            "type": "text",
            "data": "End If"
        },
        {
            "type": "text",
            "data": "End If"
        },
        {
            "type": "text",
            "data": "End If"
        },
        {
            "type": "text",
            "data": "End If"
        },
        {
            "type": "text",
            "data": "End If"
        },
        {
            "type": "text",
            "data": "UCS Sample #2 Modify Manually Added Part"
        },
        {
            "type": "text",
            "data": "In this example we will demonstrate some things to watch out for with advanced UCS. We will illustrate a system limitation imposed on UCS and how to work around the system."
        },
        {
            "type": "text",
            "data": "In this example we will demonstrate some things to watch out for with advanced UCS. We will illustrate a system limitation imposed on UCS and how to work around the system."
        },
        {
            "type": "text",
            "data": "In this example we will demonstrate some things to watch out for with advanced UCS. We will illustrate a system limitation imposed on UCS and how to work around the system."
        },
        {
            "type": "text",
            "data": "UCSMOD Parameter"
        },
        {
            "type": "text",
            "data": "UCS only applies to System Parts, unless you tell it to. \n \n \n Any New Part you add to an Object must have the UCSMOD = 1 Parameter added to it so the UCS will recognize the Part."
        },
        {
            "type": "text",
            "data": "UCS only applies to System Parts, unless you tell it to."
        },
        {
            "type": "text",
            "data": "UCS only applies to System Parts, unless you tell it to."
        },
        {
            "type": "text",
            "data": "Any New Part you add to an Object must have the UCSMOD = 1 Parameter added to it so the UCS will recognize the Part."
        },
        {
            "type": "text",
            "data": "Any New Part you add to an Object must have the UCSMOD = 1 Parameter added to it so the UCS will recognize the Part."
        },
        {
            "type": "text",
            "data": "Example"
        },
        {
            "type": "text",
            "data": "Add UCS that adjusts the Y position of all Top Stretchers \n \n \n Note that the Top Stretcher we have added doesn't change \n \n \n Add a UCSMOD = 1 Parameter to the Top Stretcher. \n \n \n Note: The Part is modified with every rebuild. \n \n \n This method is a valid method if you are not Adjusting the Part."
        },
        {
            "type": "text",
            "data": "Add UCS that adjusts the Y position of all Top Stretchers"
        },
        {
            "type": "text",
            "data": "Add UCS that adjusts the Y position of all Top Stretchers"
        },
        {
            "type": "text",
            "data": "Note that the Top Stretcher we have added doesn't change"
        },
        {
            "type": "text",
            "data": "Note that the Top Stretcher we have added doesn't change"
        },
        {
            "type": "text",
            "data": "Add a UCSMOD = 1 Parameter to the Top Stretcher."
        },
        {
            "type": "text",
            "data": "Add a UCSMOD = 1 Parameter to the Top Stretcher."
        },
        {
            "type": "text",
            "data": "Note: The Part is modified with every rebuild."
        },
        {
            "type": "text",
            "data": "Note: The Part is modified with every rebuild."
        },
        {
            "type": "text",
            "data": "This method is a valid method if you are not Adjusting the Part."
        },
        {
            "type": "text",
            "data": "This method is a valid method if you are not Adjusting the Part."
        },
        {
            "type": "text",
            "data": "The parameter UCSMOD is used to add UCS control to Parts that have been manually added to an object. Setting UCSMOD = 1 will allow you to make changes to the manually added Part via UCS. The UCSMOD parameter will not work when the Part has been added by a UCS itself. However, if you add a Part via a UCS, you should just size it correctly in that UCS."
        },
        {
            "type": "text",
            "data": "UCS Sample #3 Modify Hinge Holes"
        },
        {
            "type": "text",
            "data": "This example will demonstrate a modification to a CNC operation. \n \n \n It will move and rotate the holes for a base plate/hinge for the new Blum concealed base plate. \n \n \n The UCS must account for the differences in the Left end, Right end, & Partition."
        },
        {
            "type": "text",
            "data": "This example will demonstrate a modification to a CNC operation."
        },
        {
            "type": "text",
            "data": "This example will demonstrate a modification to a CNC operation."
        },
        {
            "type": "text",
            "data": "It will move and rotate the holes for a base plate/hinge for the new Blum concealed base plate."
        },
        {
            "type": "text",
            "data": "It will move and rotate the holes for a base plate/hinge for the new Blum concealed base plate."
        },
        {
            "type": "text",
            "data": "The UCS must account for the differences in the Left end, Right end, & Partition."
        },
        {
            "type": "text",
            "data": "The UCS must account for the differences in the Left end, Right end, & Partition."
        },
        {
            "type": "text",
            "data": ";Preps Baseplate Holes For New Blum Concealed Base plates"
        },
        {
            "type": "text",
            "data": "For Each  HPBORE Linebore  ;Hinge Plate Boring Holes"
        },
        {
            "type": "text",
            "data": "Y  Adjust Add  imp(16) \u00a0\u00a0 ;Move the Hinge Holes Up 16mm"
        },
        {
            "type": "text",
            "data": "AZ  =  90 \u00a0\u00a0 ;Rotate the direction of the holes 90 degrees"
        },
        {
            "type": "text",
            "data": "If  X  <  imp(64)  Then \u00a0 ;On Right End or Partitions"
        },
        {
            "type": "text",
            "data": "AZ  = - 90 \u00a0\u00a0 ;Reverse the Rotation"
        },
        {
            "type": "text",
            "data": "End If"
        },
        {
            "type": "text",
            "data": "UCS Sample #4 Delete CNC Holes for Nailers"
        },
        {
            "type": "text",
            "data": "This example originates from a customer who wanted CNC instructions for his Stretchers but not his nailers. Currently CABINET VISION assumes that if you have CNC for the Stretchers you will also have CNC for nailers. \n \n \n This example will demonstrate how to place a broad filter in the For Each line and place conditions on the parents name. \n \n \n Refer to the UCS constants for Operation Names."
        },
        {
            "type": "text",
            "data": "This example originates from a customer who wanted CNC instructions for his Stretchers but not his nailers. Currently CABINET VISION assumes that if you have CNC for the Stretchers you will also have CNC for nailers."
        },
        {
            "type": "text",
            "data": "This example originates from a customer who wanted CNC instructions for his Stretchers but not his nailers. Currently CABINET VISION assumes that if you have CNC for the Stretchers you will also have CNC for nailers."
        },
        {
            "type": "text",
            "data": "This example will demonstrate how to place a broad filter in the For Each line and place conditions on the parents name."
        },
        {
            "type": "text",
            "data": "This example will demonstrate how to place a broad filter in the For Each line and place conditions on the parents name."
        },
        {
            "type": "text",
            "data": "Refer to the UCS constants for Operation Names."
        },
        {
            "type": "text",
            "data": "Refer to the UCS constants for Operation Names."
        },
        {
            "type": "text",
            "data": ";Deletes Construction Boring For Nailers"
        },
        {
            "type": "text",
            "data": "For Each   * HBORE Linebore"
        },
        {
            "type": "text",
            "data": "If   : Name  =   'NA'  Then \u00a0\u00a0 ;If the parent is a nailer"
        },
        {
            "type": "text",
            "data": "QTY  =  0 \u00a0\u00a0 ;Set the quantity of the operations to 0"
        },
        {
            "type": "text",
            "data": "End If"
        },
        {
            "type": "text",
            "data": "UCS Sample #5 Add Light Rail To Uppers"
        },
        {
            "type": "text",
            "data": ";Links Bottom Rail to Bottom of Upper Assembly with Bottom Scribe"
        },
        {
            "type": "text",
            "data": "For Each  BO Part"
        },
        {
            "type": "text",
            "data": "If  Cab . Class  =  \u00a0ASM_CLASS_UPPER  Then"
        },
        {
            "type": "text",
            "data": "If  \u00a0CAB . SCB  >  0  Then  \u00a0\u00a0 ;If Assembly has bottom scribe > 0"
        },
        {
            "type": "text",
            "data": ";Initialize Variables with a default value"
        },
        {
            "type": "text",
            "data": "LendThick  =  0"
        },
        {
            "type": "text",
            "data": "RendThick  =  0"
        },
        {
            "type": "text",
            "data": ";These Values are only set if Unfinished Ends Exists"
        },
        {
            "type": "text",
            "data": "If  LEND  =  2  Then"
        },
        {
            "type": "text",
            "data": "LendThick  =  CAB . CASE . LU . DZ"
        },
        {
            "type": "text",
            "data": "End If"
        },
        {
            "type": "text",
            "data": "If  REND  =  2  Then"
        },
        {
            "type": "text",
            "data": "RendThick  =  CAB . CASE . RU . DZ"
        },
        {
            "type": "text",
            "data": "End If"
        },
        {
            "type": "text",
            "data": "Dim  BR as New Part"
        },
        {
            "type": "text",
            "data": "BR . Visible  =  True"
        },
        {
            "type": "text",
            "data": "BR . DX  =  CAB . SCB"
        },
        {
            "type": "text",
            "data": "BR . DY  =   : DY  +  LendThick  +  RendThick"
        },
        {
            "type": "text",
            "data": "BR . X  =  DZ"
        },
        {
            "type": "text",
            "data": "BR . Y  =  0  -  LendThick"
        },
        {
            "type": "text",
            "data": "BR . Z  =   : DZ"
        },
        {
            "type": "text",
            "data": "BR . AX  =  0"
        },
        {
            "type": "text",
            "data": "BR . AY  =   - 90"
        },
        {
            "type": "text",
            "data": "BR . AZ  =  0"
        },
        {
            "type": "text",
            "data": "End If"
        },
        {
            "type": "text",
            "data": "End If"
        },
        {
            "type": "text",
            "data": "UCS Sample #6 Add Additional Line of Vertical Boring Holes"
        },
        {
            "type": "text",
            "data": "This standard links a set of line bore holes to an existing set of line boreholes. \n \n \n The standard has to use the Owner Keyword to work. \n \n \n Operations must be attached to Parts in order to be seen."
        },
        {
            "type": "text",
            "data": "This standard links a set of line bore holes to an existing set of line boreholes."
        },
        {
            "type": "text",
            "data": "This standard links a set of line bore holes to an existing set of line boreholes."
        },
        {
            "type": "text",
            "data": "The standard has to use the Owner Keyword to work."
        },
        {
            "type": "text",
            "data": "The standard has to use the Owner Keyword to work."
        },
        {
            "type": "text",
            "data": "Operations must be attached to Parts in order to be seen."
        },
        {
            "type": "text",
            "data": "Operations must be attached to Parts in order to be seen."
        },
        {
            "type": "text",
            "data": ";Links Vertical Bore to Vertical Bore"
        },
        {
            "type": "text",
            "data": "For Each  LFVBORE Operation"
        },
        {
            "type": "text",
            "data": "If  Cab . DZ  >  24  Then"
        },
        {
            "type": "text",
            "data": "Dim  VBORE as New Linebore"
        },
        {
            "type": "text",
            "data": "VBORE . Owner  =  Owner"
        },
        {
            "type": "text",
            "data": "VBORE . Visible  =  True"
        },
        {
            "type": "text",
            "data": "VBORE . DX  =   : DX"
        },
        {
            "type": "text",
            "data": "VBORE . DY  =   : DY"
        },
        {
            "type": "text",
            "data": "VBORE . DY  =   : DZ"
        },
        {
            "type": "text",
            "data": "VBORE . X  =  ( :: DX  /  2)  -   : x"
        },
        {
            "type": "text",
            "data": "VBORE . Y  =  0"
        },
        {
            "type": "text",
            "data": "VBORE . Z  =  0"
        },
        {
            "type": "text",
            "data": "VBORE . AX  =   : AX"
        },
        {
            "type": "text",
            "data": "VBORE . AY  =   : AY"
        },
        {
            "type": "text",
            "data": "VBORE . AZ  =   : AZ"
        },
        {
            "type": "text",
            "data": "VBORE . REPT  =   : REPT"
        },
        {
            "type": "text",
            "data": "VBORE . SPCNG  =   : SPCNG"
        },
        {
            "type": "text",
            "data": "End If"
        }
    ],
    "source_file": "CVEnglish_Essential\\A_Breakdown_on_UCSs.htm",
    "version": "2024",
    "source_type": "help_file"
}