# 00\_Primary\_Database\_Schema\_and\_Data\_Flow\_Plan

Execution Mandate\:ChatGPT acts as the lead programmer & auditor for this phase of the project. These guidelines provide the initial structure and direction, but the system should remain flexible to adapt as the project evolves. Prioritize accuracy and long-term maintainability, and proactively identify opportunities for optimization without losing sight of the overall project goals.

> **Context Anchor:**
> This file defines the supporting knowledge layer for a natural language processing system. The database serves as a **context provider**, not a standalone query engine.
> The LLM must **always** verify responses against this data and provide **reasoning** for its conclusions.
> Assume the LLM is the **primary** reasoning engine, but the database is the **final** authority for technical accuracy.
> Responses should be weighted based on **relevance** and **confidence**, with a clear explanation of logic where possible.

## üóÇÔ∏è Core Database Schema (Initial Build)

### **Tables Overview**

* **JSON\_Files** - Stores the core technical documentation extracted from the Cabinet Vision help files.
* **Images** - Stores image metadata and descriptions extracted via OpenAI Vision.
* **Forum\_Threads** - Stores parsed forum data, including thread titles, messages, timestamps, and metadata.
* **UCS\_Scripts** - Stores extracted UCS scripts, including parameters and function names.
* **Cross\_References** - Stores the relationships between different data types, including HTM files, UCS scripts, and forum threads.

---

### **HTM\_Files Table**

| Field     | Type       | Description                             |
| --------- | ---------- | --------------------------------------- |
| JSON\_ID   | UUID       | Unique identifier for each JSON file     |
| FilePath  | Text       | Full file path to the original HTM file |
| FileName  | Text       | Original HTM filename                   |
| Content   | Text       | Extracted text from the HTM file        |
| Keywords  | Text Array | Extracted keywords for indexing         |
| CreatedAt | Timestamp  | Date and time the HTM file was ingested |

### **Images Table**

| Field         | Type       | Description                                                        |
| ------------- | ---------- | ------------------------------------------------------------------ |
| Image\_ID     | UUID       | Unique identifier for each image                                   |
| FilePath      | Text       | Full file path to the original image                               |
| FileName      | Text       | Original image filename                                            |
| FileExtension | Text       | File extension (e.g., PNG, JPG)                                    |
| Description   | Text       | AI-generated text description of the image                         |
| ContextTags   | Text Array | Keywords extracted from the image (e.g., button names, menu items) |
| Width         | Integer    | Image width in pixels                                              |
| Height        | Integer    | Image height in pixels                                             |
| AspectRatio   | Decimal    | Image width-to-height ratio                                        |
| CreatedAt     | Timestamp  | Date and time the image was processed                              |

### **Forum\_Threads Table**

| Field              | Type       | Description                                                     |
| ------------------ | ---------- | --------------------------------------------------------------- |
| Thread\_ID         | UUID       | Unique identifier for each forum thread                         |
| Title              | Text       | Title of the forum thread                                       |
| Author             | Text       | Username of the original poster                                 |
| Content            | Text       | Full thread content, including replies                          |
| Keywords           | Text Array | Extracted keywords for indexing                                 |
| PostDate           | Timestamp  | Original date of the forum post                                 |
| ConfidenceScore    | Decimal    | AI-assigned confidence rating (0.0 - 1.0)                       |
| VerificationStatus | Text       | Status of the entry (e.g., Verified, Needs Review, Unconfirmed) |
| CreatedAt          | Timestamp  | Date and time the thread was ingested                           |

### **UCS\_Scripts Table**

| Field      | Type       | Description                             |
| ---------- | ---------- | --------------------------------------- |
| UCS\_ID    | UUID       | Unique identifier for each UCS script   |
| FilePath   | Text       | Full file path to the original script   |
| FileName   | Text       | Original script filename                |
| ScriptBody | Text       | Full script content, including comments |
| Parameters | Text Array | Extracted parameters and function names |
| CreatedAt  | Timestamp  | Date and time the script was ingested   |

### **Cross\_References Table**

| Field              | Type      | Description                                                     |
| ------------------ | --------- | --------------------------------------------------------------- |
| Reference\_ID      | UUID      | Unique identifier for each relationship                         |
| Source\_ID         | UUID      | The ID of the primary record (e.g., HTM\_ID, UCS\_ID)           |
| Target\_ID         | UUID      | The ID of the related record (e.g., Image\_ID, Thread\_ID)      |
| RelationshipType   | Text      | Type of relationship (e.g., Image Reference, Forum Example)     |
| ConfidenceScore    | Decimal   | AI-assigned confidence rating for the relationship (0.0 - 1.0)  |
| VerificationStatus | Text      | Status of the entry (e.g., Verified, Needs Review, Unconfirmed) |
| CreatedAt          | Timestamp | Date and time the relationship was created                      |

---

## üìÖ Data Flow Plan (Phases 1-3)

### **Phase 1: HTM Files and Images**

1. Scan directories for HTM files and images using the PowerShell script from the HTM Image Extraction document.
2. Extract raw text, tables, and images for database storage.
3. Use OpenAI Vision to generate text descriptions for each image.
4. Store the descriptions and extracted metadata in the Images table.

### **Phase 2: Forum Thread Integration**

1. Use the forum crawler to extract thread titles, messages, author names, timestamps, and keywords.
2. Implement deduplication logic to remove redundant posts and merge similar threads where appropriate.
3. Use extracted metadata to identify context overlaps, such as UCS parameters or specific machining methods.

### **Phase 3: Cross-Referencing Setup**

1. Use extracted metadata to identify context overlaps, such as UCS parameters or specific machining methods.
2. Implement automated cross-referencing for improved search accuracy.
3. Test initial database performance and adjust indexing as needed.

---

## üìÖ Next Steps

* Run initial data imports for HTM files and images.
* Implement cross-referencing logic for UCS scripts and forum threads.
* Test database performance with sample queries.
* Refine the schema as needed based on early test results.
